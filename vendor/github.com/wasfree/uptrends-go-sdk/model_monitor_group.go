/*
Uptrends API v4

This document describes Uptrends API version 4. This Swagger environment also lets you execute API methods directly.  Please note that this is not a sandbox environment: these API methods operate directly on your actual Uptrends account.  For more information, please visit https://www.uptrends.com/api.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package uptrends

import (
	"encoding/json"
)

// MonitorGroup Monitor group
type MonitorGroup struct {
	// The unique identifier of this monitor group
	MonitorGroupGuid *string `json:"MonitorGroupGuid,omitempty"`
	// The descriptive name of this probe group
	Description *string `json:"Description,omitempty"`
	// Indicates whether this is the default group for all probes
	IsAll bool `json:"IsAll"`
}

// NewMonitorGroup instantiates a new MonitorGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMonitorGroup(isAll bool) *MonitorGroup {
	this := MonitorGroup{}
	this.IsAll = isAll
	return &this
}

// NewMonitorGroupWithDefaults instantiates a new MonitorGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMonitorGroupWithDefaults() *MonitorGroup {
	this := MonitorGroup{}
	return &this
}

// GetMonitorGroupGuid returns the MonitorGroupGuid field value if set, zero value otherwise.
func (o *MonitorGroup) GetMonitorGroupGuid() string {
	if o == nil || o.MonitorGroupGuid == nil {
		var ret string
		return ret
	}
	return *o.MonitorGroupGuid
}

// GetMonitorGroupGuidOk returns a tuple with the MonitorGroupGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitorGroup) GetMonitorGroupGuidOk() (*string, bool) {
	if o == nil || o.MonitorGroupGuid == nil {
		return nil, false
	}
	return o.MonitorGroupGuid, true
}

// HasMonitorGroupGuid returns a boolean if a field has been set.
func (o *MonitorGroup) HasMonitorGroupGuid() bool {
	if o != nil && o.MonitorGroupGuid != nil {
		return true
	}

	return false
}

// SetMonitorGroupGuid gets a reference to the given string and assigns it to the MonitorGroupGuid field.
func (o *MonitorGroup) SetMonitorGroupGuid(v string) {
	o.MonitorGroupGuid = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *MonitorGroup) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitorGroup) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *MonitorGroup) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *MonitorGroup) SetDescription(v string) {
	o.Description = &v
}

// GetIsAll returns the IsAll field value
func (o *MonitorGroup) GetIsAll() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsAll
}

// GetIsAllOk returns a tuple with the IsAll field value
// and a boolean to check if the value has been set.
func (o *MonitorGroup) GetIsAllOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.IsAll, true
}

// SetIsAll sets field value
func (o *MonitorGroup) SetIsAll(v bool) {
	o.IsAll = v
}

func (o MonitorGroup) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MonitorGroupGuid != nil {
		toSerialize["MonitorGroupGuid"] = o.MonitorGroupGuid
	}
	if o.Description != nil {
		toSerialize["Description"] = o.Description
	}
	if true {
		toSerialize["IsAll"] = o.IsAll
	}
	return json.Marshal(toSerialize)
}

type NullableMonitorGroup struct {
	value *MonitorGroup
	isSet bool
}

func (v NullableMonitorGroup) Get() *MonitorGroup {
	return v.value
}

func (v *NullableMonitorGroup) Set(val *MonitorGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableMonitorGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableMonitorGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMonitorGroup(val *MonitorGroup) *NullableMonitorGroup {
	return &NullableMonitorGroup{value: val, isSet: true}
}

func (v NullableMonitorGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMonitorGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


