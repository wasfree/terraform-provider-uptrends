/*
Uptrends API v4

This document describes Uptrends API version 4. This Swagger environment also lets you execute API methods directly.  Please note that this is not a sandbox environment: these API methods operate directly on your actual Uptrends account.  For more information, please visit https://www.uptrends.com/api.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package uptrends

import (
	"encoding/json"
)

// HttpEngineStepAssertionResultsInfo Results of the assertions in this step
type HttpEngineStepAssertionResultsInfo struct {
	TotalAssertions int32 `json:"TotalAssertions"`
	PassedAssertions int32 `json:"PassedAssertions"`
	AssertionInfos []AssertionInfo `json:"AssertionInfos,omitempty"`
}

// NewHttpEngineStepAssertionResultsInfo instantiates a new HttpEngineStepAssertionResultsInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHttpEngineStepAssertionResultsInfo(totalAssertions int32, passedAssertions int32) *HttpEngineStepAssertionResultsInfo {
	this := HttpEngineStepAssertionResultsInfo{}
	this.TotalAssertions = totalAssertions
	this.PassedAssertions = passedAssertions
	return &this
}

// NewHttpEngineStepAssertionResultsInfoWithDefaults instantiates a new HttpEngineStepAssertionResultsInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHttpEngineStepAssertionResultsInfoWithDefaults() *HttpEngineStepAssertionResultsInfo {
	this := HttpEngineStepAssertionResultsInfo{}
	return &this
}

// GetTotalAssertions returns the TotalAssertions field value
func (o *HttpEngineStepAssertionResultsInfo) GetTotalAssertions() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TotalAssertions
}

// GetTotalAssertionsOk returns a tuple with the TotalAssertions field value
// and a boolean to check if the value has been set.
func (o *HttpEngineStepAssertionResultsInfo) GetTotalAssertionsOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.TotalAssertions, true
}

// SetTotalAssertions sets field value
func (o *HttpEngineStepAssertionResultsInfo) SetTotalAssertions(v int32) {
	o.TotalAssertions = v
}

// GetPassedAssertions returns the PassedAssertions field value
func (o *HttpEngineStepAssertionResultsInfo) GetPassedAssertions() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PassedAssertions
}

// GetPassedAssertionsOk returns a tuple with the PassedAssertions field value
// and a boolean to check if the value has been set.
func (o *HttpEngineStepAssertionResultsInfo) GetPassedAssertionsOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.PassedAssertions, true
}

// SetPassedAssertions sets field value
func (o *HttpEngineStepAssertionResultsInfo) SetPassedAssertions(v int32) {
	o.PassedAssertions = v
}

// GetAssertionInfos returns the AssertionInfos field value if set, zero value otherwise.
func (o *HttpEngineStepAssertionResultsInfo) GetAssertionInfos() []AssertionInfo {
	if o == nil || isNil(o.AssertionInfos) {
		var ret []AssertionInfo
		return ret
	}
	return o.AssertionInfos
}

// GetAssertionInfosOk returns a tuple with the AssertionInfos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpEngineStepAssertionResultsInfo) GetAssertionInfosOk() ([]AssertionInfo, bool) {
	if o == nil || isNil(o.AssertionInfos) {
    return nil, false
	}
	return o.AssertionInfos, true
}

// HasAssertionInfos returns a boolean if a field has been set.
func (o *HttpEngineStepAssertionResultsInfo) HasAssertionInfos() bool {
	if o != nil && !isNil(o.AssertionInfos) {
		return true
	}

	return false
}

// SetAssertionInfos gets a reference to the given []AssertionInfo and assigns it to the AssertionInfos field.
func (o *HttpEngineStepAssertionResultsInfo) SetAssertionInfos(v []AssertionInfo) {
	o.AssertionInfos = v
}

func (o HttpEngineStepAssertionResultsInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["TotalAssertions"] = o.TotalAssertions
	}
	if true {
		toSerialize["PassedAssertions"] = o.PassedAssertions
	}
	if !isNil(o.AssertionInfos) {
		toSerialize["AssertionInfos"] = o.AssertionInfos
	}
	return json.Marshal(toSerialize)
}

type NullableHttpEngineStepAssertionResultsInfo struct {
	value *HttpEngineStepAssertionResultsInfo
	isSet bool
}

func (v NullableHttpEngineStepAssertionResultsInfo) Get() *HttpEngineStepAssertionResultsInfo {
	return v.value
}

func (v *NullableHttpEngineStepAssertionResultsInfo) Set(val *HttpEngineStepAssertionResultsInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableHttpEngineStepAssertionResultsInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableHttpEngineStepAssertionResultsInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHttpEngineStepAssertionResultsInfo(val *HttpEngineStepAssertionResultsInfo) *NullableHttpEngineStepAssertionResultsInfo {
	return &NullableHttpEngineStepAssertionResultsInfo{value: val, isSet: true}
}

func (v NullableHttpEngineStepAssertionResultsInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHttpEngineStepAssertionResultsInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


