/*
 * Uptrends API v4
 *
 * This document describes Uptrends API version 4. This Swagger environment also lets you execute API methods directly.  Please note that this is not a sandbox environment: these API methods operate directly on your actual Uptrends account.  For more information, please visit https://www.uptrends.com/api.
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package uptrends

import (
	"encoding/json"
)

// Integration struct for Integration
type Integration struct {
	// Guid of Integration in Alert Definition Escalation Level
	IntegrationGuid string `json:"IntegrationGuid"`
	// Name of Integration in Alert Definition Escalation Level
	Name *string `json:"Name,omitempty"`
	// Type of Integration in Alert Definition Escalation Level
	Type IntegrationTypeEnum `json:"Type"`
	// Extra emailadresses for this integration (if type == email)
	ExtraEmailAddresses *string `json:"ExtraEmailAddresses,omitempty"`
	// All statushubs for this integration (if type == statushub)
	StatusHubServiceList *[]IntegrationServiceMap `json:"StatusHubServiceList,omitempty"`
	// All integrations services.
	IntegrationServices *[]string `json:"IntegrationServices,omitempty"`
	Hash *string `json:"Hash,omitempty"`
}

// NewIntegration instantiates a new Integration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIntegration(integrationGuid string, type_ IntegrationTypeEnum) *Integration {
	this := Integration{}
	this.IntegrationGuid = integrationGuid
	this.Type = type_
	return &this
}

// NewIntegrationWithDefaults instantiates a new Integration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIntegrationWithDefaults() *Integration {
	this := Integration{}
	return &this
}

// GetIntegrationGuid returns the IntegrationGuid field value
func (o *Integration) GetIntegrationGuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IntegrationGuid
}

// GetIntegrationGuidOk returns a tuple with the IntegrationGuid field value
// and a boolean to check if the value has been set.
func (o *Integration) GetIntegrationGuidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.IntegrationGuid, true
}

// SetIntegrationGuid sets field value
func (o *Integration) SetIntegrationGuid(v string) {
	o.IntegrationGuid = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Integration) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Integration) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Integration) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Integration) SetName(v string) {
	o.Name = &v
}

// GetType returns the Type field value
func (o *Integration) GetType() IntegrationTypeEnum {
	if o == nil {
		var ret IntegrationTypeEnum
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *Integration) GetTypeOk() (*IntegrationTypeEnum, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *Integration) SetType(v IntegrationTypeEnum) {
	o.Type = v
}

// GetExtraEmailAddresses returns the ExtraEmailAddresses field value if set, zero value otherwise.
func (o *Integration) GetExtraEmailAddresses() string {
	if o == nil || o.ExtraEmailAddresses == nil {
		var ret string
		return ret
	}
	return *o.ExtraEmailAddresses
}

// GetExtraEmailAddressesOk returns a tuple with the ExtraEmailAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Integration) GetExtraEmailAddressesOk() (*string, bool) {
	if o == nil || o.ExtraEmailAddresses == nil {
		return nil, false
	}
	return o.ExtraEmailAddresses, true
}

// HasExtraEmailAddresses returns a boolean if a field has been set.
func (o *Integration) HasExtraEmailAddresses() bool {
	if o != nil && o.ExtraEmailAddresses != nil {
		return true
	}

	return false
}

// SetExtraEmailAddresses gets a reference to the given string and assigns it to the ExtraEmailAddresses field.
func (o *Integration) SetExtraEmailAddresses(v string) {
	o.ExtraEmailAddresses = &v
}

// GetStatusHubServiceList returns the StatusHubServiceList field value if set, zero value otherwise.
func (o *Integration) GetStatusHubServiceList() []IntegrationServiceMap {
	if o == nil || o.StatusHubServiceList == nil {
		var ret []IntegrationServiceMap
		return ret
	}
	return *o.StatusHubServiceList
}

// GetStatusHubServiceListOk returns a tuple with the StatusHubServiceList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Integration) GetStatusHubServiceListOk() (*[]IntegrationServiceMap, bool) {
	if o == nil || o.StatusHubServiceList == nil {
		return nil, false
	}
	return o.StatusHubServiceList, true
}

// HasStatusHubServiceList returns a boolean if a field has been set.
func (o *Integration) HasStatusHubServiceList() bool {
	if o != nil && o.StatusHubServiceList != nil {
		return true
	}

	return false
}

// SetStatusHubServiceList gets a reference to the given []IntegrationServiceMap and assigns it to the StatusHubServiceList field.
func (o *Integration) SetStatusHubServiceList(v []IntegrationServiceMap) {
	o.StatusHubServiceList = &v
}

// GetIntegrationServices returns the IntegrationServices field value if set, zero value otherwise.
func (o *Integration) GetIntegrationServices() []string {
	if o == nil || o.IntegrationServices == nil {
		var ret []string
		return ret
	}
	return *o.IntegrationServices
}

// GetIntegrationServicesOk returns a tuple with the IntegrationServices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Integration) GetIntegrationServicesOk() (*[]string, bool) {
	if o == nil || o.IntegrationServices == nil {
		return nil, false
	}
	return o.IntegrationServices, true
}

// HasIntegrationServices returns a boolean if a field has been set.
func (o *Integration) HasIntegrationServices() bool {
	if o != nil && o.IntegrationServices != nil {
		return true
	}

	return false
}

// SetIntegrationServices gets a reference to the given []string and assigns it to the IntegrationServices field.
func (o *Integration) SetIntegrationServices(v []string) {
	o.IntegrationServices = &v
}

// GetHash returns the Hash field value if set, zero value otherwise.
func (o *Integration) GetHash() string {
	if o == nil || o.Hash == nil {
		var ret string
		return ret
	}
	return *o.Hash
}

// GetHashOk returns a tuple with the Hash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Integration) GetHashOk() (*string, bool) {
	if o == nil || o.Hash == nil {
		return nil, false
	}
	return o.Hash, true
}

// HasHash returns a boolean if a field has been set.
func (o *Integration) HasHash() bool {
	if o != nil && o.Hash != nil {
		return true
	}

	return false
}

// SetHash gets a reference to the given string and assigns it to the Hash field.
func (o *Integration) SetHash(v string) {
	o.Hash = &v
}

func (o Integration) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["IntegrationGuid"] = o.IntegrationGuid
	}
	if o.Name != nil {
		toSerialize["Name"] = o.Name
	}
	if true {
		toSerialize["Type"] = o.Type
	}
	if o.ExtraEmailAddresses != nil {
		toSerialize["ExtraEmailAddresses"] = o.ExtraEmailAddresses
	}
	if o.StatusHubServiceList != nil {
		toSerialize["StatusHubServiceList"] = o.StatusHubServiceList
	}
	if o.IntegrationServices != nil {
		toSerialize["IntegrationServices"] = o.IntegrationServices
	}
	if o.Hash != nil {
		toSerialize["Hash"] = o.Hash
	}
	return json.Marshal(toSerialize)
}

type NullableIntegration struct {
	value *Integration
	isSet bool
}

func (v NullableIntegration) Get() *Integration {
	return v.value
}

func (v *NullableIntegration) Set(val *Integration) {
	v.value = val
	v.isSet = true
}

func (v NullableIntegration) IsSet() bool {
	return v.isSet
}

func (v *NullableIntegration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIntegration(val *Integration) *NullableIntegration {
	return &NullableIntegration{value: val, isSet: true}
}

func (v NullableIntegration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIntegration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


