/*
Uptrends API v4

This document describes Uptrends API version 4. This Swagger environment also lets you execute API methods directly.  Please note that this is not a sandbox environment: these API methods operate directly on your actual Uptrends account.  For more information, please visit https://www.uptrends.com/api.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package uptrends

import (
	"encoding/json"
)

// VaultItemOneTimePasswordInfo The one-time password info that is stored in this vault item, if applicable
type VaultItemOneTimePasswordInfo struct {
	Secret *string `json:"Secret,omitempty"`
	Digits int32 `json:"Digits"`
	Period int32 `json:"Period"`
	HashAlgorithm HashAlgorithm `json:"HashAlgorithm"`
}

// NewVaultItemOneTimePasswordInfo instantiates a new VaultItemOneTimePasswordInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVaultItemOneTimePasswordInfo(digits int32, period int32, hashAlgorithm HashAlgorithm) *VaultItemOneTimePasswordInfo {
	this := VaultItemOneTimePasswordInfo{}
	this.Digits = digits
	this.Period = period
	this.HashAlgorithm = hashAlgorithm
	return &this
}

// NewVaultItemOneTimePasswordInfoWithDefaults instantiates a new VaultItemOneTimePasswordInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVaultItemOneTimePasswordInfoWithDefaults() *VaultItemOneTimePasswordInfo {
	this := VaultItemOneTimePasswordInfo{}
	return &this
}

// GetSecret returns the Secret field value if set, zero value otherwise.
func (o *VaultItemOneTimePasswordInfo) GetSecret() string {
	if o == nil || isNil(o.Secret) {
		var ret string
		return ret
	}
	return *o.Secret
}

// GetSecretOk returns a tuple with the Secret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VaultItemOneTimePasswordInfo) GetSecretOk() (*string, bool) {
	if o == nil || isNil(o.Secret) {
    return nil, false
	}
	return o.Secret, true
}

// HasSecret returns a boolean if a field has been set.
func (o *VaultItemOneTimePasswordInfo) HasSecret() bool {
	if o != nil && !isNil(o.Secret) {
		return true
	}

	return false
}

// SetSecret gets a reference to the given string and assigns it to the Secret field.
func (o *VaultItemOneTimePasswordInfo) SetSecret(v string) {
	o.Secret = &v
}

// GetDigits returns the Digits field value
func (o *VaultItemOneTimePasswordInfo) GetDigits() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Digits
}

// GetDigitsOk returns a tuple with the Digits field value
// and a boolean to check if the value has been set.
func (o *VaultItemOneTimePasswordInfo) GetDigitsOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Digits, true
}

// SetDigits sets field value
func (o *VaultItemOneTimePasswordInfo) SetDigits(v int32) {
	o.Digits = v
}

// GetPeriod returns the Period field value
func (o *VaultItemOneTimePasswordInfo) GetPeriod() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Period
}

// GetPeriodOk returns a tuple with the Period field value
// and a boolean to check if the value has been set.
func (o *VaultItemOneTimePasswordInfo) GetPeriodOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Period, true
}

// SetPeriod sets field value
func (o *VaultItemOneTimePasswordInfo) SetPeriod(v int32) {
	o.Period = v
}

// GetHashAlgorithm returns the HashAlgorithm field value
func (o *VaultItemOneTimePasswordInfo) GetHashAlgorithm() HashAlgorithm {
	if o == nil {
		var ret HashAlgorithm
		return ret
	}

	return o.HashAlgorithm
}

// GetHashAlgorithmOk returns a tuple with the HashAlgorithm field value
// and a boolean to check if the value has been set.
func (o *VaultItemOneTimePasswordInfo) GetHashAlgorithmOk() (*HashAlgorithm, bool) {
	if o == nil {
    return nil, false
	}
	return &o.HashAlgorithm, true
}

// SetHashAlgorithm sets field value
func (o *VaultItemOneTimePasswordInfo) SetHashAlgorithm(v HashAlgorithm) {
	o.HashAlgorithm = v
}

func (o VaultItemOneTimePasswordInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Secret) {
		toSerialize["Secret"] = o.Secret
	}
	if true {
		toSerialize["Digits"] = o.Digits
	}
	if true {
		toSerialize["Period"] = o.Period
	}
	if true {
		toSerialize["HashAlgorithm"] = o.HashAlgorithm
	}
	return json.Marshal(toSerialize)
}

type NullableVaultItemOneTimePasswordInfo struct {
	value *VaultItemOneTimePasswordInfo
	isSet bool
}

func (v NullableVaultItemOneTimePasswordInfo) Get() *VaultItemOneTimePasswordInfo {
	return v.value
}

func (v *NullableVaultItemOneTimePasswordInfo) Set(val *VaultItemOneTimePasswordInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableVaultItemOneTimePasswordInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableVaultItemOneTimePasswordInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVaultItemOneTimePasswordInfo(val *VaultItemOneTimePasswordInfo) *NullableVaultItemOneTimePasswordInfo {
	return &NullableVaultItemOneTimePasswordInfo{value: val, isSet: true}
}

func (v NullableVaultItemOneTimePasswordInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVaultItemOneTimePasswordInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


