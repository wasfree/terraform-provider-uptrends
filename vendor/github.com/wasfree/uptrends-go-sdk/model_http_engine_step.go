/*
Uptrends API v4

This document describes Uptrends API version 4. This Swagger environment also lets you execute API methods directly.  Please note that this is not a sandbox environment: these API methods operate directly on your actual Uptrends account.  For more information, please visit https://www.uptrends.com/api.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package uptrends

import (
	"encoding/json"
)

// HttpEngineStep HttpEngineStep describes the results of a step in a Multi-step Api monitor
type HttpEngineStep struct {
	// The name of the step
	StepName *string `json:"StepName,omitempty"`
	// Url the step was executed on
	Url *string `json:"Url,omitempty"`
	// The HTTP status code returned
	HttpStatusCode *string `json:"HttpStatusCode,omitempty"`
	// Http method used in this step
	HttpMethod *string `json:"HttpMethod,omitempty"`
	// Step description
	HttpStatusDescription *string `json:"HttpStatusDescription,omitempty"`
	// Did the response complete?
	ResponseCompleted bool `json:"ResponseCompleted"`
	// Was this step executed?
	StepExecuted bool `json:"StepExecuted"`
	AssertionResultsInfo *HttpEngineStepAssertionResultsInfo `json:"AssertionResultsInfo,omitempty"`
	// Number of milliseconds it took for this step to succeed
	TotalTime int64 `json:"TotalTime"`
	// Response headers
	ResponseHeaders *string `json:"ResponseHeaders,omitempty"`
	// Response body
	ResponseBody *string `json:"ResponseBody,omitempty"`
	// Request headers send
	RequestHeaders *string `json:"RequestHeaders,omitempty"`
	// Request body send
	RequestBody *string `json:"RequestBody,omitempty"`
	// Resolved IP address
	ResolvedIpAddress *string `json:"ResolvedIpAddress,omitempty"`
}

// NewHttpEngineStep instantiates a new HttpEngineStep object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHttpEngineStep(responseCompleted bool, stepExecuted bool, totalTime int64) *HttpEngineStep {
	this := HttpEngineStep{}
	this.ResponseCompleted = responseCompleted
	this.StepExecuted = stepExecuted
	this.TotalTime = totalTime
	return &this
}

// NewHttpEngineStepWithDefaults instantiates a new HttpEngineStep object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHttpEngineStepWithDefaults() *HttpEngineStep {
	this := HttpEngineStep{}
	return &this
}

// GetStepName returns the StepName field value if set, zero value otherwise.
func (o *HttpEngineStep) GetStepName() string {
	if o == nil || isNil(o.StepName) {
		var ret string
		return ret
	}
	return *o.StepName
}

// GetStepNameOk returns a tuple with the StepName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpEngineStep) GetStepNameOk() (*string, bool) {
	if o == nil || isNil(o.StepName) {
    return nil, false
	}
	return o.StepName, true
}

// HasStepName returns a boolean if a field has been set.
func (o *HttpEngineStep) HasStepName() bool {
	if o != nil && !isNil(o.StepName) {
		return true
	}

	return false
}

// SetStepName gets a reference to the given string and assigns it to the StepName field.
func (o *HttpEngineStep) SetStepName(v string) {
	o.StepName = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *HttpEngineStep) GetUrl() string {
	if o == nil || isNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpEngineStep) GetUrlOk() (*string, bool) {
	if o == nil || isNil(o.Url) {
    return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *HttpEngineStep) HasUrl() bool {
	if o != nil && !isNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *HttpEngineStep) SetUrl(v string) {
	o.Url = &v
}

// GetHttpStatusCode returns the HttpStatusCode field value if set, zero value otherwise.
func (o *HttpEngineStep) GetHttpStatusCode() string {
	if o == nil || isNil(o.HttpStatusCode) {
		var ret string
		return ret
	}
	return *o.HttpStatusCode
}

// GetHttpStatusCodeOk returns a tuple with the HttpStatusCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpEngineStep) GetHttpStatusCodeOk() (*string, bool) {
	if o == nil || isNil(o.HttpStatusCode) {
    return nil, false
	}
	return o.HttpStatusCode, true
}

// HasHttpStatusCode returns a boolean if a field has been set.
func (o *HttpEngineStep) HasHttpStatusCode() bool {
	if o != nil && !isNil(o.HttpStatusCode) {
		return true
	}

	return false
}

// SetHttpStatusCode gets a reference to the given string and assigns it to the HttpStatusCode field.
func (o *HttpEngineStep) SetHttpStatusCode(v string) {
	o.HttpStatusCode = &v
}

// GetHttpMethod returns the HttpMethod field value if set, zero value otherwise.
func (o *HttpEngineStep) GetHttpMethod() string {
	if o == nil || isNil(o.HttpMethod) {
		var ret string
		return ret
	}
	return *o.HttpMethod
}

// GetHttpMethodOk returns a tuple with the HttpMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpEngineStep) GetHttpMethodOk() (*string, bool) {
	if o == nil || isNil(o.HttpMethod) {
    return nil, false
	}
	return o.HttpMethod, true
}

// HasHttpMethod returns a boolean if a field has been set.
func (o *HttpEngineStep) HasHttpMethod() bool {
	if o != nil && !isNil(o.HttpMethod) {
		return true
	}

	return false
}

// SetHttpMethod gets a reference to the given string and assigns it to the HttpMethod field.
func (o *HttpEngineStep) SetHttpMethod(v string) {
	o.HttpMethod = &v
}

// GetHttpStatusDescription returns the HttpStatusDescription field value if set, zero value otherwise.
func (o *HttpEngineStep) GetHttpStatusDescription() string {
	if o == nil || isNil(o.HttpStatusDescription) {
		var ret string
		return ret
	}
	return *o.HttpStatusDescription
}

// GetHttpStatusDescriptionOk returns a tuple with the HttpStatusDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpEngineStep) GetHttpStatusDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.HttpStatusDescription) {
    return nil, false
	}
	return o.HttpStatusDescription, true
}

// HasHttpStatusDescription returns a boolean if a field has been set.
func (o *HttpEngineStep) HasHttpStatusDescription() bool {
	if o != nil && !isNil(o.HttpStatusDescription) {
		return true
	}

	return false
}

// SetHttpStatusDescription gets a reference to the given string and assigns it to the HttpStatusDescription field.
func (o *HttpEngineStep) SetHttpStatusDescription(v string) {
	o.HttpStatusDescription = &v
}

// GetResponseCompleted returns the ResponseCompleted field value
func (o *HttpEngineStep) GetResponseCompleted() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ResponseCompleted
}

// GetResponseCompletedOk returns a tuple with the ResponseCompleted field value
// and a boolean to check if the value has been set.
func (o *HttpEngineStep) GetResponseCompletedOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ResponseCompleted, true
}

// SetResponseCompleted sets field value
func (o *HttpEngineStep) SetResponseCompleted(v bool) {
	o.ResponseCompleted = v
}

// GetStepExecuted returns the StepExecuted field value
func (o *HttpEngineStep) GetStepExecuted() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.StepExecuted
}

// GetStepExecutedOk returns a tuple with the StepExecuted field value
// and a boolean to check if the value has been set.
func (o *HttpEngineStep) GetStepExecutedOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return &o.StepExecuted, true
}

// SetStepExecuted sets field value
func (o *HttpEngineStep) SetStepExecuted(v bool) {
	o.StepExecuted = v
}

// GetAssertionResultsInfo returns the AssertionResultsInfo field value if set, zero value otherwise.
func (o *HttpEngineStep) GetAssertionResultsInfo() HttpEngineStepAssertionResultsInfo {
	if o == nil || isNil(o.AssertionResultsInfo) {
		var ret HttpEngineStepAssertionResultsInfo
		return ret
	}
	return *o.AssertionResultsInfo
}

// GetAssertionResultsInfoOk returns a tuple with the AssertionResultsInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpEngineStep) GetAssertionResultsInfoOk() (*HttpEngineStepAssertionResultsInfo, bool) {
	if o == nil || isNil(o.AssertionResultsInfo) {
    return nil, false
	}
	return o.AssertionResultsInfo, true
}

// HasAssertionResultsInfo returns a boolean if a field has been set.
func (o *HttpEngineStep) HasAssertionResultsInfo() bool {
	if o != nil && !isNil(o.AssertionResultsInfo) {
		return true
	}

	return false
}

// SetAssertionResultsInfo gets a reference to the given HttpEngineStepAssertionResultsInfo and assigns it to the AssertionResultsInfo field.
func (o *HttpEngineStep) SetAssertionResultsInfo(v HttpEngineStepAssertionResultsInfo) {
	o.AssertionResultsInfo = &v
}

// GetTotalTime returns the TotalTime field value
func (o *HttpEngineStep) GetTotalTime() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.TotalTime
}

// GetTotalTimeOk returns a tuple with the TotalTime field value
// and a boolean to check if the value has been set.
func (o *HttpEngineStep) GetTotalTimeOk() (*int64, bool) {
	if o == nil {
    return nil, false
	}
	return &o.TotalTime, true
}

// SetTotalTime sets field value
func (o *HttpEngineStep) SetTotalTime(v int64) {
	o.TotalTime = v
}

// GetResponseHeaders returns the ResponseHeaders field value if set, zero value otherwise.
func (o *HttpEngineStep) GetResponseHeaders() string {
	if o == nil || isNil(o.ResponseHeaders) {
		var ret string
		return ret
	}
	return *o.ResponseHeaders
}

// GetResponseHeadersOk returns a tuple with the ResponseHeaders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpEngineStep) GetResponseHeadersOk() (*string, bool) {
	if o == nil || isNil(o.ResponseHeaders) {
    return nil, false
	}
	return o.ResponseHeaders, true
}

// HasResponseHeaders returns a boolean if a field has been set.
func (o *HttpEngineStep) HasResponseHeaders() bool {
	if o != nil && !isNil(o.ResponseHeaders) {
		return true
	}

	return false
}

// SetResponseHeaders gets a reference to the given string and assigns it to the ResponseHeaders field.
func (o *HttpEngineStep) SetResponseHeaders(v string) {
	o.ResponseHeaders = &v
}

// GetResponseBody returns the ResponseBody field value if set, zero value otherwise.
func (o *HttpEngineStep) GetResponseBody() string {
	if o == nil || isNil(o.ResponseBody) {
		var ret string
		return ret
	}
	return *o.ResponseBody
}

// GetResponseBodyOk returns a tuple with the ResponseBody field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpEngineStep) GetResponseBodyOk() (*string, bool) {
	if o == nil || isNil(o.ResponseBody) {
    return nil, false
	}
	return o.ResponseBody, true
}

// HasResponseBody returns a boolean if a field has been set.
func (o *HttpEngineStep) HasResponseBody() bool {
	if o != nil && !isNil(o.ResponseBody) {
		return true
	}

	return false
}

// SetResponseBody gets a reference to the given string and assigns it to the ResponseBody field.
func (o *HttpEngineStep) SetResponseBody(v string) {
	o.ResponseBody = &v
}

// GetRequestHeaders returns the RequestHeaders field value if set, zero value otherwise.
func (o *HttpEngineStep) GetRequestHeaders() string {
	if o == nil || isNil(o.RequestHeaders) {
		var ret string
		return ret
	}
	return *o.RequestHeaders
}

// GetRequestHeadersOk returns a tuple with the RequestHeaders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpEngineStep) GetRequestHeadersOk() (*string, bool) {
	if o == nil || isNil(o.RequestHeaders) {
    return nil, false
	}
	return o.RequestHeaders, true
}

// HasRequestHeaders returns a boolean if a field has been set.
func (o *HttpEngineStep) HasRequestHeaders() bool {
	if o != nil && !isNil(o.RequestHeaders) {
		return true
	}

	return false
}

// SetRequestHeaders gets a reference to the given string and assigns it to the RequestHeaders field.
func (o *HttpEngineStep) SetRequestHeaders(v string) {
	o.RequestHeaders = &v
}

// GetRequestBody returns the RequestBody field value if set, zero value otherwise.
func (o *HttpEngineStep) GetRequestBody() string {
	if o == nil || isNil(o.RequestBody) {
		var ret string
		return ret
	}
	return *o.RequestBody
}

// GetRequestBodyOk returns a tuple with the RequestBody field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpEngineStep) GetRequestBodyOk() (*string, bool) {
	if o == nil || isNil(o.RequestBody) {
    return nil, false
	}
	return o.RequestBody, true
}

// HasRequestBody returns a boolean if a field has been set.
func (o *HttpEngineStep) HasRequestBody() bool {
	if o != nil && !isNil(o.RequestBody) {
		return true
	}

	return false
}

// SetRequestBody gets a reference to the given string and assigns it to the RequestBody field.
func (o *HttpEngineStep) SetRequestBody(v string) {
	o.RequestBody = &v
}

// GetResolvedIpAddress returns the ResolvedIpAddress field value if set, zero value otherwise.
func (o *HttpEngineStep) GetResolvedIpAddress() string {
	if o == nil || isNil(o.ResolvedIpAddress) {
		var ret string
		return ret
	}
	return *o.ResolvedIpAddress
}

// GetResolvedIpAddressOk returns a tuple with the ResolvedIpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpEngineStep) GetResolvedIpAddressOk() (*string, bool) {
	if o == nil || isNil(o.ResolvedIpAddress) {
    return nil, false
	}
	return o.ResolvedIpAddress, true
}

// HasResolvedIpAddress returns a boolean if a field has been set.
func (o *HttpEngineStep) HasResolvedIpAddress() bool {
	if o != nil && !isNil(o.ResolvedIpAddress) {
		return true
	}

	return false
}

// SetResolvedIpAddress gets a reference to the given string and assigns it to the ResolvedIpAddress field.
func (o *HttpEngineStep) SetResolvedIpAddress(v string) {
	o.ResolvedIpAddress = &v
}

func (o HttpEngineStep) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.StepName) {
		toSerialize["StepName"] = o.StepName
	}
	if !isNil(o.Url) {
		toSerialize["Url"] = o.Url
	}
	if !isNil(o.HttpStatusCode) {
		toSerialize["HttpStatusCode"] = o.HttpStatusCode
	}
	if !isNil(o.HttpMethod) {
		toSerialize["HttpMethod"] = o.HttpMethod
	}
	if !isNil(o.HttpStatusDescription) {
		toSerialize["HttpStatusDescription"] = o.HttpStatusDescription
	}
	if true {
		toSerialize["ResponseCompleted"] = o.ResponseCompleted
	}
	if true {
		toSerialize["StepExecuted"] = o.StepExecuted
	}
	if !isNil(o.AssertionResultsInfo) {
		toSerialize["AssertionResultsInfo"] = o.AssertionResultsInfo
	}
	if true {
		toSerialize["TotalTime"] = o.TotalTime
	}
	if !isNil(o.ResponseHeaders) {
		toSerialize["ResponseHeaders"] = o.ResponseHeaders
	}
	if !isNil(o.ResponseBody) {
		toSerialize["ResponseBody"] = o.ResponseBody
	}
	if !isNil(o.RequestHeaders) {
		toSerialize["RequestHeaders"] = o.RequestHeaders
	}
	if !isNil(o.RequestBody) {
		toSerialize["RequestBody"] = o.RequestBody
	}
	if !isNil(o.ResolvedIpAddress) {
		toSerialize["ResolvedIpAddress"] = o.ResolvedIpAddress
	}
	return json.Marshal(toSerialize)
}

type NullableHttpEngineStep struct {
	value *HttpEngineStep
	isSet bool
}

func (v NullableHttpEngineStep) Get() *HttpEngineStep {
	return v.value
}

func (v *NullableHttpEngineStep) Set(val *HttpEngineStep) {
	v.value = val
	v.isSet = true
}

func (v NullableHttpEngineStep) IsSet() bool {
	return v.isSet
}

func (v *NullableHttpEngineStep) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHttpEngineStep(val *HttpEngineStep) *NullableHttpEngineStep {
	return &NullableHttpEngineStep{value: val, isSet: true}
}

func (v NullableHttpEngineStep) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHttpEngineStep) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


