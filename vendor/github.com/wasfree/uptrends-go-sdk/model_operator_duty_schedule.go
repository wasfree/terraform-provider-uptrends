/*
 * Uptrends API v4
 *
 * This document describes Uptrends API version 4. This Swagger environment also lets you execute API methods directly.  Please note that this is not a sandbox environment: these API methods operate directly on your actual Uptrends account.  For more information, please visit https://www.uptrends.com/api.
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package uptrends

import (
	"encoding/json"
	"time"
)

// OperatorDutySchedule struct for OperatorDutySchedule
type OperatorDutySchedule struct {
	// The unique ID of this maintenance period
	Id int32 `json:"Id"`
	// The schedule mode (one time, daily, weekly, monthly)
	ScheduleMode OperatorScheduleMode `json:"ScheduleMode"`
	// The start date/time for this schedule (for one-time schedules only)
	StartDateTime *time.Time `json:"StartDateTime,omitempty"`
	// The end date/time for this maintenance period (for one-time maintenance periods only)
	EndDateTime *time.Time `json:"EndDateTime,omitempty"`
	// The weekday for this maintenance period (for weekly maintenance periods only)
	WeekDay *DayOfWeek `json:"WeekDay,omitempty"`
	// the month day for this maintenance period (for montly maintenance periods only)
	MonthDay *int32 `json:"MonthDay,omitempty"`
	// The start time of this maintenance period
	StartTime *string `json:"StartTime,omitempty"`
	// The end time of this maintenance period
	EndTime *string `json:"EndTime,omitempty"`
}

// NewOperatorDutySchedule instantiates a new OperatorDutySchedule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOperatorDutySchedule(id int32, scheduleMode OperatorScheduleMode) *OperatorDutySchedule {
	this := OperatorDutySchedule{}
	this.Id = id
	this.ScheduleMode = scheduleMode
	return &this
}

// NewOperatorDutyScheduleWithDefaults instantiates a new OperatorDutySchedule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOperatorDutyScheduleWithDefaults() *OperatorDutySchedule {
	this := OperatorDutySchedule{}
	return &this
}

// GetId returns the Id field value
func (o *OperatorDutySchedule) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *OperatorDutySchedule) GetIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *OperatorDutySchedule) SetId(v int32) {
	o.Id = v
}

// GetScheduleMode returns the ScheduleMode field value
func (o *OperatorDutySchedule) GetScheduleMode() OperatorScheduleMode {
	if o == nil {
		var ret OperatorScheduleMode
		return ret
	}

	return o.ScheduleMode
}

// GetScheduleModeOk returns a tuple with the ScheduleMode field value
// and a boolean to check if the value has been set.
func (o *OperatorDutySchedule) GetScheduleModeOk() (*OperatorScheduleMode, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ScheduleMode, true
}

// SetScheduleMode sets field value
func (o *OperatorDutySchedule) SetScheduleMode(v OperatorScheduleMode) {
	o.ScheduleMode = v
}

// GetStartDateTime returns the StartDateTime field value if set, zero value otherwise.
func (o *OperatorDutySchedule) GetStartDateTime() time.Time {
	if o == nil || o.StartDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.StartDateTime
}

// GetStartDateTimeOk returns a tuple with the StartDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OperatorDutySchedule) GetStartDateTimeOk() (*time.Time, bool) {
	if o == nil || o.StartDateTime == nil {
		return nil, false
	}
	return o.StartDateTime, true
}

// HasStartDateTime returns a boolean if a field has been set.
func (o *OperatorDutySchedule) HasStartDateTime() bool {
	if o != nil && o.StartDateTime != nil {
		return true
	}

	return false
}

// SetStartDateTime gets a reference to the given time.Time and assigns it to the StartDateTime field.
func (o *OperatorDutySchedule) SetStartDateTime(v time.Time) {
	o.StartDateTime = &v
}

// GetEndDateTime returns the EndDateTime field value if set, zero value otherwise.
func (o *OperatorDutySchedule) GetEndDateTime() time.Time {
	if o == nil || o.EndDateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.EndDateTime
}

// GetEndDateTimeOk returns a tuple with the EndDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OperatorDutySchedule) GetEndDateTimeOk() (*time.Time, bool) {
	if o == nil || o.EndDateTime == nil {
		return nil, false
	}
	return o.EndDateTime, true
}

// HasEndDateTime returns a boolean if a field has been set.
func (o *OperatorDutySchedule) HasEndDateTime() bool {
	if o != nil && o.EndDateTime != nil {
		return true
	}

	return false
}

// SetEndDateTime gets a reference to the given time.Time and assigns it to the EndDateTime field.
func (o *OperatorDutySchedule) SetEndDateTime(v time.Time) {
	o.EndDateTime = &v
}

// GetWeekDay returns the WeekDay field value if set, zero value otherwise.
func (o *OperatorDutySchedule) GetWeekDay() DayOfWeek {
	if o == nil || o.WeekDay == nil {
		var ret DayOfWeek
		return ret
	}
	return *o.WeekDay
}

// GetWeekDayOk returns a tuple with the WeekDay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OperatorDutySchedule) GetWeekDayOk() (*DayOfWeek, bool) {
	if o == nil || o.WeekDay == nil {
		return nil, false
	}
	return o.WeekDay, true
}

// HasWeekDay returns a boolean if a field has been set.
func (o *OperatorDutySchedule) HasWeekDay() bool {
	if o != nil && o.WeekDay != nil {
		return true
	}

	return false
}

// SetWeekDay gets a reference to the given DayOfWeek and assigns it to the WeekDay field.
func (o *OperatorDutySchedule) SetWeekDay(v DayOfWeek) {
	o.WeekDay = &v
}

// GetMonthDay returns the MonthDay field value if set, zero value otherwise.
func (o *OperatorDutySchedule) GetMonthDay() int32 {
	if o == nil || o.MonthDay == nil {
		var ret int32
		return ret
	}
	return *o.MonthDay
}

// GetMonthDayOk returns a tuple with the MonthDay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OperatorDutySchedule) GetMonthDayOk() (*int32, bool) {
	if o == nil || o.MonthDay == nil {
		return nil, false
	}
	return o.MonthDay, true
}

// HasMonthDay returns a boolean if a field has been set.
func (o *OperatorDutySchedule) HasMonthDay() bool {
	if o != nil && o.MonthDay != nil {
		return true
	}

	return false
}

// SetMonthDay gets a reference to the given int32 and assigns it to the MonthDay field.
func (o *OperatorDutySchedule) SetMonthDay(v int32) {
	o.MonthDay = &v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *OperatorDutySchedule) GetStartTime() string {
	if o == nil || o.StartTime == nil {
		var ret string
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OperatorDutySchedule) GetStartTimeOk() (*string, bool) {
	if o == nil || o.StartTime == nil {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *OperatorDutySchedule) HasStartTime() bool {
	if o != nil && o.StartTime != nil {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given string and assigns it to the StartTime field.
func (o *OperatorDutySchedule) SetStartTime(v string) {
	o.StartTime = &v
}

// GetEndTime returns the EndTime field value if set, zero value otherwise.
func (o *OperatorDutySchedule) GetEndTime() string {
	if o == nil || o.EndTime == nil {
		var ret string
		return ret
	}
	return *o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OperatorDutySchedule) GetEndTimeOk() (*string, bool) {
	if o == nil || o.EndTime == nil {
		return nil, false
	}
	return o.EndTime, true
}

// HasEndTime returns a boolean if a field has been set.
func (o *OperatorDutySchedule) HasEndTime() bool {
	if o != nil && o.EndTime != nil {
		return true
	}

	return false
}

// SetEndTime gets a reference to the given string and assigns it to the EndTime field.
func (o *OperatorDutySchedule) SetEndTime(v string) {
	o.EndTime = &v
}

func (o OperatorDutySchedule) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["Id"] = o.Id
	}
	if true {
		toSerialize["ScheduleMode"] = o.ScheduleMode
	}
	if o.StartDateTime != nil {
		toSerialize["StartDateTime"] = o.StartDateTime
	}
	if o.EndDateTime != nil {
		toSerialize["EndDateTime"] = o.EndDateTime
	}
	if o.WeekDay != nil {
		toSerialize["WeekDay"] = o.WeekDay
	}
	if o.MonthDay != nil {
		toSerialize["MonthDay"] = o.MonthDay
	}
	if o.StartTime != nil {
		toSerialize["StartTime"] = o.StartTime
	}
	if o.EndTime != nil {
		toSerialize["EndTime"] = o.EndTime
	}
	return json.Marshal(toSerialize)
}

type NullableOperatorDutySchedule struct {
	value *OperatorDutySchedule
	isSet bool
}

func (v NullableOperatorDutySchedule) Get() *OperatorDutySchedule {
	return v.value
}

func (v *NullableOperatorDutySchedule) Set(val *OperatorDutySchedule) {
	v.value = val
	v.isSet = true
}

func (v NullableOperatorDutySchedule) IsSet() bool {
	return v.isSet
}

func (v *NullableOperatorDutySchedule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOperatorDutySchedule(val *OperatorDutySchedule) *NullableOperatorDutySchedule {
	return &NullableOperatorDutySchedule{value: val, isSet: true}
}

func (v NullableOperatorDutySchedule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOperatorDutySchedule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


