/*
Uptrends API v4

This document describes Uptrends API version 4. This Swagger environment also lets you execute API methods directly.  Please note that this is not a sandbox environment: these API methods operate directly on your actual Uptrends account.  For more information, please visit https://www.uptrends.com/api.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package uptrends

import (
	"encoding/json"
)

// ServerHealth ServerHealth
type ServerHealth struct {
	// The name of the checkpoint
	CheckpointName *string `json:"CheckpointName,omitempty"`
	// The status of the server
	Status *string `json:"Status,omitempty"`
	StatusDetails *ServerHealthStatusDetails `json:"StatusDetails,omitempty"`
}

// NewServerHealth instantiates a new ServerHealth object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServerHealth() *ServerHealth {
	this := ServerHealth{}
	return &this
}

// NewServerHealthWithDefaults instantiates a new ServerHealth object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServerHealthWithDefaults() *ServerHealth {
	this := ServerHealth{}
	return &this
}

// GetCheckpointName returns the CheckpointName field value if set, zero value otherwise.
func (o *ServerHealth) GetCheckpointName() string {
	if o == nil || isNil(o.CheckpointName) {
		var ret string
		return ret
	}
	return *o.CheckpointName
}

// GetCheckpointNameOk returns a tuple with the CheckpointName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerHealth) GetCheckpointNameOk() (*string, bool) {
	if o == nil || isNil(o.CheckpointName) {
    return nil, false
	}
	return o.CheckpointName, true
}

// HasCheckpointName returns a boolean if a field has been set.
func (o *ServerHealth) HasCheckpointName() bool {
	if o != nil && !isNil(o.CheckpointName) {
		return true
	}

	return false
}

// SetCheckpointName gets a reference to the given string and assigns it to the CheckpointName field.
func (o *ServerHealth) SetCheckpointName(v string) {
	o.CheckpointName = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ServerHealth) GetStatus() string {
	if o == nil || isNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerHealth) GetStatusOk() (*string, bool) {
	if o == nil || isNil(o.Status) {
    return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ServerHealth) HasStatus() bool {
	if o != nil && !isNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ServerHealth) SetStatus(v string) {
	o.Status = &v
}

// GetStatusDetails returns the StatusDetails field value if set, zero value otherwise.
func (o *ServerHealth) GetStatusDetails() ServerHealthStatusDetails {
	if o == nil || isNil(o.StatusDetails) {
		var ret ServerHealthStatusDetails
		return ret
	}
	return *o.StatusDetails
}

// GetStatusDetailsOk returns a tuple with the StatusDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerHealth) GetStatusDetailsOk() (*ServerHealthStatusDetails, bool) {
	if o == nil || isNil(o.StatusDetails) {
    return nil, false
	}
	return o.StatusDetails, true
}

// HasStatusDetails returns a boolean if a field has been set.
func (o *ServerHealth) HasStatusDetails() bool {
	if o != nil && !isNil(o.StatusDetails) {
		return true
	}

	return false
}

// SetStatusDetails gets a reference to the given ServerHealthStatusDetails and assigns it to the StatusDetails field.
func (o *ServerHealth) SetStatusDetails(v ServerHealthStatusDetails) {
	o.StatusDetails = &v
}

func (o ServerHealth) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.CheckpointName) {
		toSerialize["CheckpointName"] = o.CheckpointName
	}
	if !isNil(o.Status) {
		toSerialize["Status"] = o.Status
	}
	if !isNil(o.StatusDetails) {
		toSerialize["StatusDetails"] = o.StatusDetails
	}
	return json.Marshal(toSerialize)
}

type NullableServerHealth struct {
	value *ServerHealth
	isSet bool
}

func (v NullableServerHealth) Get() *ServerHealth {
	return v.value
}

func (v *NullableServerHealth) Set(val *ServerHealth) {
	v.value = val
	v.isSet = true
}

func (v NullableServerHealth) IsSet() bool {
	return v.isSet
}

func (v *NullableServerHealth) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServerHealth(val *ServerHealth) *NullableServerHealth {
	return &NullableServerHealth{value: val, isSet: true}
}

func (v NullableServerHealth) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServerHealth) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


