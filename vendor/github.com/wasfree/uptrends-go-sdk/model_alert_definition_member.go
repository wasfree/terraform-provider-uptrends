/*
Uptrends API v4

This document describes Uptrends API version 4. This Swagger environment also lets you execute API methods directly.  Please note that this is not a sandbox environment: these API methods operate directly on your actual Uptrends account.  For more information, please visit https://www.uptrends.com/api.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package uptrends

import (
	"encoding/json"
)

// AlertDefinitionMember struct for AlertDefinitionMember
type AlertDefinitionMember struct {
	// Guid of Monitor in Alert Definition
	MonitorGuid *string `json:"MonitorGuid,omitempty"`
	// Guid of GroupMonitor in Alert Definition
	MonitorGroupGuid *string `json:"MonitorGroupGuid,omitempty"`
}

// NewAlertDefinitionMember instantiates a new AlertDefinitionMember object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlertDefinitionMember() *AlertDefinitionMember {
	this := AlertDefinitionMember{}
	return &this
}

// NewAlertDefinitionMemberWithDefaults instantiates a new AlertDefinitionMember object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlertDefinitionMemberWithDefaults() *AlertDefinitionMember {
	this := AlertDefinitionMember{}
	return &this
}

// GetMonitorGuid returns the MonitorGuid field value if set, zero value otherwise.
func (o *AlertDefinitionMember) GetMonitorGuid() string {
	if o == nil || isNil(o.MonitorGuid) {
		var ret string
		return ret
	}
	return *o.MonitorGuid
}

// GetMonitorGuidOk returns a tuple with the MonitorGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertDefinitionMember) GetMonitorGuidOk() (*string, bool) {
	if o == nil || isNil(o.MonitorGuid) {
    return nil, false
	}
	return o.MonitorGuid, true
}

// HasMonitorGuid returns a boolean if a field has been set.
func (o *AlertDefinitionMember) HasMonitorGuid() bool {
	if o != nil && !isNil(o.MonitorGuid) {
		return true
	}

	return false
}

// SetMonitorGuid gets a reference to the given string and assigns it to the MonitorGuid field.
func (o *AlertDefinitionMember) SetMonitorGuid(v string) {
	o.MonitorGuid = &v
}

// GetMonitorGroupGuid returns the MonitorGroupGuid field value if set, zero value otherwise.
func (o *AlertDefinitionMember) GetMonitorGroupGuid() string {
	if o == nil || isNil(o.MonitorGroupGuid) {
		var ret string
		return ret
	}
	return *o.MonitorGroupGuid
}

// GetMonitorGroupGuidOk returns a tuple with the MonitorGroupGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertDefinitionMember) GetMonitorGroupGuidOk() (*string, bool) {
	if o == nil || isNil(o.MonitorGroupGuid) {
    return nil, false
	}
	return o.MonitorGroupGuid, true
}

// HasMonitorGroupGuid returns a boolean if a field has been set.
func (o *AlertDefinitionMember) HasMonitorGroupGuid() bool {
	if o != nil && !isNil(o.MonitorGroupGuid) {
		return true
	}

	return false
}

// SetMonitorGroupGuid gets a reference to the given string and assigns it to the MonitorGroupGuid field.
func (o *AlertDefinitionMember) SetMonitorGroupGuid(v string) {
	o.MonitorGroupGuid = &v
}

func (o AlertDefinitionMember) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.MonitorGuid) {
		toSerialize["MonitorGuid"] = o.MonitorGuid
	}
	if !isNil(o.MonitorGroupGuid) {
		toSerialize["MonitorGroupGuid"] = o.MonitorGroupGuid
	}
	return json.Marshal(toSerialize)
}

type NullableAlertDefinitionMember struct {
	value *AlertDefinitionMember
	isSet bool
}

func (v NullableAlertDefinitionMember) Get() *AlertDefinitionMember {
	return v.value
}

func (v *NullableAlertDefinitionMember) Set(val *AlertDefinitionMember) {
	v.value = val
	v.isSet = true
}

func (v NullableAlertDefinitionMember) IsSet() bool {
	return v.isSet
}

func (v *NullableAlertDefinitionMember) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlertDefinitionMember(val *AlertDefinitionMember) *NullableAlertDefinitionMember {
	return &NullableAlertDefinitionMember{value: val, isSet: true}
}

func (v NullableAlertDefinitionMember) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlertDefinitionMember) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


