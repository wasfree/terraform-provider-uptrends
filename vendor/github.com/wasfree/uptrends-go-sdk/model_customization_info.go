/*
Uptrends API v4

This document describes Uptrends API version 4. This Swagger environment also lets you execute API methods directly.  Please note that this is not a sandbox environment: these API methods operate directly on your actual Uptrends account.  For more information, please visit https://www.uptrends.com/api.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package uptrends

import (
	"encoding/json"
)

// CustomizationInfo struct for CustomizationInfo
type CustomizationInfo struct {
	MainColor *string `json:"MainColor,omitempty"`
	BackgroundColor *string `json:"BackgroundColor,omitempty"`
	TextColor *string `json:"TextColor,omitempty"`
	TitleText *string `json:"TitleText,omitempty"`
	FooterText *string `json:"FooterText,omitempty"`
	SortColumnsNewToOld bool `json:"SortColumnsNewToOld"`
	SortRowsProperty SortOrderEnum `json:"SortRowsProperty"`
	CommentTitle *string `json:"CommentTitle,omitempty"`
	CommentText *string `json:"CommentText,omitempty"`
}

// NewCustomizationInfo instantiates a new CustomizationInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomizationInfo(sortColumnsNewToOld bool, sortRowsProperty SortOrderEnum) *CustomizationInfo {
	this := CustomizationInfo{}
	this.SortColumnsNewToOld = sortColumnsNewToOld
	this.SortRowsProperty = sortRowsProperty
	return &this
}

// NewCustomizationInfoWithDefaults instantiates a new CustomizationInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomizationInfoWithDefaults() *CustomizationInfo {
	this := CustomizationInfo{}
	return &this
}

// GetMainColor returns the MainColor field value if set, zero value otherwise.
func (o *CustomizationInfo) GetMainColor() string {
	if o == nil || o.MainColor == nil {
		var ret string
		return ret
	}
	return *o.MainColor
}

// GetMainColorOk returns a tuple with the MainColor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomizationInfo) GetMainColorOk() (*string, bool) {
	if o == nil || o.MainColor == nil {
		return nil, false
	}
	return o.MainColor, true
}

// HasMainColor returns a boolean if a field has been set.
func (o *CustomizationInfo) HasMainColor() bool {
	if o != nil && o.MainColor != nil {
		return true
	}

	return false
}

// SetMainColor gets a reference to the given string and assigns it to the MainColor field.
func (o *CustomizationInfo) SetMainColor(v string) {
	o.MainColor = &v
}

// GetBackgroundColor returns the BackgroundColor field value if set, zero value otherwise.
func (o *CustomizationInfo) GetBackgroundColor() string {
	if o == nil || o.BackgroundColor == nil {
		var ret string
		return ret
	}
	return *o.BackgroundColor
}

// GetBackgroundColorOk returns a tuple with the BackgroundColor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomizationInfo) GetBackgroundColorOk() (*string, bool) {
	if o == nil || o.BackgroundColor == nil {
		return nil, false
	}
	return o.BackgroundColor, true
}

// HasBackgroundColor returns a boolean if a field has been set.
func (o *CustomizationInfo) HasBackgroundColor() bool {
	if o != nil && o.BackgroundColor != nil {
		return true
	}

	return false
}

// SetBackgroundColor gets a reference to the given string and assigns it to the BackgroundColor field.
func (o *CustomizationInfo) SetBackgroundColor(v string) {
	o.BackgroundColor = &v
}

// GetTextColor returns the TextColor field value if set, zero value otherwise.
func (o *CustomizationInfo) GetTextColor() string {
	if o == nil || o.TextColor == nil {
		var ret string
		return ret
	}
	return *o.TextColor
}

// GetTextColorOk returns a tuple with the TextColor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomizationInfo) GetTextColorOk() (*string, bool) {
	if o == nil || o.TextColor == nil {
		return nil, false
	}
	return o.TextColor, true
}

// HasTextColor returns a boolean if a field has been set.
func (o *CustomizationInfo) HasTextColor() bool {
	if o != nil && o.TextColor != nil {
		return true
	}

	return false
}

// SetTextColor gets a reference to the given string and assigns it to the TextColor field.
func (o *CustomizationInfo) SetTextColor(v string) {
	o.TextColor = &v
}

// GetTitleText returns the TitleText field value if set, zero value otherwise.
func (o *CustomizationInfo) GetTitleText() string {
	if o == nil || o.TitleText == nil {
		var ret string
		return ret
	}
	return *o.TitleText
}

// GetTitleTextOk returns a tuple with the TitleText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomizationInfo) GetTitleTextOk() (*string, bool) {
	if o == nil || o.TitleText == nil {
		return nil, false
	}
	return o.TitleText, true
}

// HasTitleText returns a boolean if a field has been set.
func (o *CustomizationInfo) HasTitleText() bool {
	if o != nil && o.TitleText != nil {
		return true
	}

	return false
}

// SetTitleText gets a reference to the given string and assigns it to the TitleText field.
func (o *CustomizationInfo) SetTitleText(v string) {
	o.TitleText = &v
}

// GetFooterText returns the FooterText field value if set, zero value otherwise.
func (o *CustomizationInfo) GetFooterText() string {
	if o == nil || o.FooterText == nil {
		var ret string
		return ret
	}
	return *o.FooterText
}

// GetFooterTextOk returns a tuple with the FooterText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomizationInfo) GetFooterTextOk() (*string, bool) {
	if o == nil || o.FooterText == nil {
		return nil, false
	}
	return o.FooterText, true
}

// HasFooterText returns a boolean if a field has been set.
func (o *CustomizationInfo) HasFooterText() bool {
	if o != nil && o.FooterText != nil {
		return true
	}

	return false
}

// SetFooterText gets a reference to the given string and assigns it to the FooterText field.
func (o *CustomizationInfo) SetFooterText(v string) {
	o.FooterText = &v
}

// GetSortColumnsNewToOld returns the SortColumnsNewToOld field value
func (o *CustomizationInfo) GetSortColumnsNewToOld() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.SortColumnsNewToOld
}

// GetSortColumnsNewToOldOk returns a tuple with the SortColumnsNewToOld field value
// and a boolean to check if the value has been set.
func (o *CustomizationInfo) GetSortColumnsNewToOldOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SortColumnsNewToOld, true
}

// SetSortColumnsNewToOld sets field value
func (o *CustomizationInfo) SetSortColumnsNewToOld(v bool) {
	o.SortColumnsNewToOld = v
}

// GetSortRowsProperty returns the SortRowsProperty field value
func (o *CustomizationInfo) GetSortRowsProperty() SortOrderEnum {
	if o == nil {
		var ret SortOrderEnum
		return ret
	}

	return o.SortRowsProperty
}

// GetSortRowsPropertyOk returns a tuple with the SortRowsProperty field value
// and a boolean to check if the value has been set.
func (o *CustomizationInfo) GetSortRowsPropertyOk() (*SortOrderEnum, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SortRowsProperty, true
}

// SetSortRowsProperty sets field value
func (o *CustomizationInfo) SetSortRowsProperty(v SortOrderEnum) {
	o.SortRowsProperty = v
}

// GetCommentTitle returns the CommentTitle field value if set, zero value otherwise.
func (o *CustomizationInfo) GetCommentTitle() string {
	if o == nil || o.CommentTitle == nil {
		var ret string
		return ret
	}
	return *o.CommentTitle
}

// GetCommentTitleOk returns a tuple with the CommentTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomizationInfo) GetCommentTitleOk() (*string, bool) {
	if o == nil || o.CommentTitle == nil {
		return nil, false
	}
	return o.CommentTitle, true
}

// HasCommentTitle returns a boolean if a field has been set.
func (o *CustomizationInfo) HasCommentTitle() bool {
	if o != nil && o.CommentTitle != nil {
		return true
	}

	return false
}

// SetCommentTitle gets a reference to the given string and assigns it to the CommentTitle field.
func (o *CustomizationInfo) SetCommentTitle(v string) {
	o.CommentTitle = &v
}

// GetCommentText returns the CommentText field value if set, zero value otherwise.
func (o *CustomizationInfo) GetCommentText() string {
	if o == nil || o.CommentText == nil {
		var ret string
		return ret
	}
	return *o.CommentText
}

// GetCommentTextOk returns a tuple with the CommentText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomizationInfo) GetCommentTextOk() (*string, bool) {
	if o == nil || o.CommentText == nil {
		return nil, false
	}
	return o.CommentText, true
}

// HasCommentText returns a boolean if a field has been set.
func (o *CustomizationInfo) HasCommentText() bool {
	if o != nil && o.CommentText != nil {
		return true
	}

	return false
}

// SetCommentText gets a reference to the given string and assigns it to the CommentText field.
func (o *CustomizationInfo) SetCommentText(v string) {
	o.CommentText = &v
}

func (o CustomizationInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MainColor != nil {
		toSerialize["MainColor"] = o.MainColor
	}
	if o.BackgroundColor != nil {
		toSerialize["BackgroundColor"] = o.BackgroundColor
	}
	if o.TextColor != nil {
		toSerialize["TextColor"] = o.TextColor
	}
	if o.TitleText != nil {
		toSerialize["TitleText"] = o.TitleText
	}
	if o.FooterText != nil {
		toSerialize["FooterText"] = o.FooterText
	}
	if true {
		toSerialize["SortColumnsNewToOld"] = o.SortColumnsNewToOld
	}
	if true {
		toSerialize["SortRowsProperty"] = o.SortRowsProperty
	}
	if o.CommentTitle != nil {
		toSerialize["CommentTitle"] = o.CommentTitle
	}
	if o.CommentText != nil {
		toSerialize["CommentText"] = o.CommentText
	}
	return json.Marshal(toSerialize)
}

type NullableCustomizationInfo struct {
	value *CustomizationInfo
	isSet bool
}

func (v NullableCustomizationInfo) Get() *CustomizationInfo {
	return v.value
}

func (v *NullableCustomizationInfo) Set(val *CustomizationInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomizationInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomizationInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomizationInfo(val *CustomizationInfo) *NullableCustomizationInfo {
	return &NullableCustomizationInfo{value: val, isSet: true}
}

func (v NullableCustomizationInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomizationInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


