/*
Uptrends API v4

This document describes Uptrends API version 4. This Swagger environment also lets you execute API methods directly.  Please note that this is not a sandbox environment: these API methods operate directly on your actual Uptrends account.  For more information, please visit https://www.uptrends.com/api.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package uptrends

import (
	"encoding/json"
)

// RegistrationResponse struct for RegistrationResponse
type RegistrationResponse struct {
	// The username of the new API account
	UserName *string `json:"UserName,omitempty"`
	// The password of the new API account
	Password *string `json:"Password,omitempty"`
	// The Uptrends Account Id for which the new API account was created
	AccountId *string `json:"AccountId,omitempty"`
	// The Uptrends Operator on behalf of whom the new API account was created
	OperatorName *string `json:"OperatorName,omitempty"`
	Status RegisterStatus `json:"status"`
	Message *string `json:"message,omitempty"`
}

// NewRegistrationResponse instantiates a new RegistrationResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRegistrationResponse(status RegisterStatus) *RegistrationResponse {
	this := RegistrationResponse{}
	this.Status = status
	return &this
}

// NewRegistrationResponseWithDefaults instantiates a new RegistrationResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRegistrationResponseWithDefaults() *RegistrationResponse {
	this := RegistrationResponse{}
	return &this
}

// GetUserName returns the UserName field value if set, zero value otherwise.
func (o *RegistrationResponse) GetUserName() string {
	if o == nil || o.UserName == nil {
		var ret string
		return ret
	}
	return *o.UserName
}

// GetUserNameOk returns a tuple with the UserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegistrationResponse) GetUserNameOk() (*string, bool) {
	if o == nil || o.UserName == nil {
		return nil, false
	}
	return o.UserName, true
}

// HasUserName returns a boolean if a field has been set.
func (o *RegistrationResponse) HasUserName() bool {
	if o != nil && o.UserName != nil {
		return true
	}

	return false
}

// SetUserName gets a reference to the given string and assigns it to the UserName field.
func (o *RegistrationResponse) SetUserName(v string) {
	o.UserName = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *RegistrationResponse) GetPassword() string {
	if o == nil || o.Password == nil {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegistrationResponse) GetPasswordOk() (*string, bool) {
	if o == nil || o.Password == nil {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *RegistrationResponse) HasPassword() bool {
	if o != nil && o.Password != nil {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *RegistrationResponse) SetPassword(v string) {
	o.Password = &v
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *RegistrationResponse) GetAccountId() string {
	if o == nil || o.AccountId == nil {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegistrationResponse) GetAccountIdOk() (*string, bool) {
	if o == nil || o.AccountId == nil {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *RegistrationResponse) HasAccountId() bool {
	if o != nil && o.AccountId != nil {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *RegistrationResponse) SetAccountId(v string) {
	o.AccountId = &v
}

// GetOperatorName returns the OperatorName field value if set, zero value otherwise.
func (o *RegistrationResponse) GetOperatorName() string {
	if o == nil || o.OperatorName == nil {
		var ret string
		return ret
	}
	return *o.OperatorName
}

// GetOperatorNameOk returns a tuple with the OperatorName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegistrationResponse) GetOperatorNameOk() (*string, bool) {
	if o == nil || o.OperatorName == nil {
		return nil, false
	}
	return o.OperatorName, true
}

// HasOperatorName returns a boolean if a field has been set.
func (o *RegistrationResponse) HasOperatorName() bool {
	if o != nil && o.OperatorName != nil {
		return true
	}

	return false
}

// SetOperatorName gets a reference to the given string and assigns it to the OperatorName field.
func (o *RegistrationResponse) SetOperatorName(v string) {
	o.OperatorName = &v
}

// GetStatus returns the Status field value
func (o *RegistrationResponse) GetStatus() RegisterStatus {
	if o == nil {
		var ret RegisterStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *RegistrationResponse) GetStatusOk() (*RegisterStatus, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *RegistrationResponse) SetStatus(v RegisterStatus) {
	o.Status = v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *RegistrationResponse) GetMessage() string {
	if o == nil || o.Message == nil {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegistrationResponse) GetMessageOk() (*string, bool) {
	if o == nil || o.Message == nil {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *RegistrationResponse) HasMessage() bool {
	if o != nil && o.Message != nil {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *RegistrationResponse) SetMessage(v string) {
	o.Message = &v
}

func (o RegistrationResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.UserName != nil {
		toSerialize["UserName"] = o.UserName
	}
	if o.Password != nil {
		toSerialize["Password"] = o.Password
	}
	if o.AccountId != nil {
		toSerialize["AccountId"] = o.AccountId
	}
	if o.OperatorName != nil {
		toSerialize["OperatorName"] = o.OperatorName
	}
	if true {
		toSerialize["status"] = o.Status
	}
	if o.Message != nil {
		toSerialize["message"] = o.Message
	}
	return json.Marshal(toSerialize)
}

type NullableRegistrationResponse struct {
	value *RegistrationResponse
	isSet bool
}

func (v NullableRegistrationResponse) Get() *RegistrationResponse {
	return v.value
}

func (v *NullableRegistrationResponse) Set(val *RegistrationResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRegistrationResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRegistrationResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRegistrationResponse(val *RegistrationResponse) *NullableRegistrationResponse {
	return &NullableRegistrationResponse{value: val, isSet: true}
}

func (v NullableRegistrationResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRegistrationResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


