/*
Uptrends API v4

This document describes Uptrends API version 4. This Swagger environment also lets you execute API methods directly.  Please note that this is not a sandbox environment: these API methods operate directly on your actual Uptrends account.  For more information, please visit https://www.uptrends.com/api.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package uptrends

import (
	"encoding/json"
)

// AccountSettings struct for AccountSettings
type AccountSettings struct {
	TimezoneId int32 `json:"TimezoneId"`
}

// NewAccountSettings instantiates a new AccountSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountSettings(timezoneId int32) *AccountSettings {
	this := AccountSettings{}
	this.TimezoneId = timezoneId
	return &this
}

// NewAccountSettingsWithDefaults instantiates a new AccountSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountSettingsWithDefaults() *AccountSettings {
	this := AccountSettings{}
	return &this
}

// GetTimezoneId returns the TimezoneId field value
func (o *AccountSettings) GetTimezoneId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TimezoneId
}

// GetTimezoneIdOk returns a tuple with the TimezoneId field value
// and a boolean to check if the value has been set.
func (o *AccountSettings) GetTimezoneIdOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.TimezoneId, true
}

// SetTimezoneId sets field value
func (o *AccountSettings) SetTimezoneId(v int32) {
	o.TimezoneId = v
}

func (o AccountSettings) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["TimezoneId"] = o.TimezoneId
	}
	return json.Marshal(toSerialize)
}

type NullableAccountSettings struct {
	value *AccountSettings
	isSet bool
}

func (v NullableAccountSettings) Get() *AccountSettings {
	return v.value
}

func (v *NullableAccountSettings) Set(val *AccountSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountSettings(val *AccountSettings) *NullableAccountSettings {
	return &NullableAccountSettings{value: val, isSet: true}
}

func (v NullableAccountSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


