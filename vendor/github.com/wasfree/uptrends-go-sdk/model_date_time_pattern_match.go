/*
Uptrends API v4

This document describes Uptrends API version 4. This Swagger environment also lets you execute API methods directly.  Please note that this is not a sandbox environment: these API methods operate directly on your actual Uptrends account.  For more information, please visit https://www.uptrends.com/api.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package uptrends

import (
	"encoding/json"
)

// DateTimePatternMatch struct for DateTimePatternMatch
type DateTimePatternMatch struct {
	OffsetUTC int32 `json:"OffsetUTC"`
	MaxDifference int32 `json:"MaxDifference"`
}

// NewDateTimePatternMatch instantiates a new DateTimePatternMatch object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDateTimePatternMatch(offsetUTC int32, maxDifference int32) *DateTimePatternMatch {
	this := DateTimePatternMatch{}
	this.OffsetUTC = offsetUTC
	this.MaxDifference = maxDifference
	return &this
}

// NewDateTimePatternMatchWithDefaults instantiates a new DateTimePatternMatch object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDateTimePatternMatchWithDefaults() *DateTimePatternMatch {
	this := DateTimePatternMatch{}
	return &this
}

// GetOffsetUTC returns the OffsetUTC field value
func (o *DateTimePatternMatch) GetOffsetUTC() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.OffsetUTC
}

// GetOffsetUTCOk returns a tuple with the OffsetUTC field value
// and a boolean to check if the value has been set.
func (o *DateTimePatternMatch) GetOffsetUTCOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.OffsetUTC, true
}

// SetOffsetUTC sets field value
func (o *DateTimePatternMatch) SetOffsetUTC(v int32) {
	o.OffsetUTC = v
}

// GetMaxDifference returns the MaxDifference field value
func (o *DateTimePatternMatch) GetMaxDifference() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MaxDifference
}

// GetMaxDifferenceOk returns a tuple with the MaxDifference field value
// and a boolean to check if the value has been set.
func (o *DateTimePatternMatch) GetMaxDifferenceOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.MaxDifference, true
}

// SetMaxDifference sets field value
func (o *DateTimePatternMatch) SetMaxDifference(v int32) {
	o.MaxDifference = v
}

func (o DateTimePatternMatch) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["OffsetUTC"] = o.OffsetUTC
	}
	if true {
		toSerialize["MaxDifference"] = o.MaxDifference
	}
	return json.Marshal(toSerialize)
}

type NullableDateTimePatternMatch struct {
	value *DateTimePatternMatch
	isSet bool
}

func (v NullableDateTimePatternMatch) Get() *DateTimePatternMatch {
	return v.value
}

func (v *NullableDateTimePatternMatch) Set(val *DateTimePatternMatch) {
	v.value = val
	v.isSet = true
}

func (v NullableDateTimePatternMatch) IsSet() bool {
	return v.isSet
}

func (v *NullableDateTimePatternMatch) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDateTimePatternMatch(val *DateTimePatternMatch) *NullableDateTimePatternMatch {
	return &NullableDateTimePatternMatch{value: val, isSet: true}
}

func (v NullableDateTimePatternMatch) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDateTimePatternMatch) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


