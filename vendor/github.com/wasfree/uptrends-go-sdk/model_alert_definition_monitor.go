/*
Uptrends API v4

This document describes Uptrends API version 4. This Swagger environment also lets you execute API methods directly.  Please note that this is not a sandbox environment: these API methods operate directly on your actual Uptrends account.  For more information, please visit https://www.uptrends.com/api.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package uptrends

import (
	"encoding/json"
)

// AlertDefinitionMonitor struct for AlertDefinitionMonitor
type AlertDefinitionMonitor struct {
	AlertDefinition string `json:"AlertDefinition"`
	Monitor string `json:"Monitor"`
}

// NewAlertDefinitionMonitor instantiates a new AlertDefinitionMonitor object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlertDefinitionMonitor(alertDefinition string, monitor string) *AlertDefinitionMonitor {
	this := AlertDefinitionMonitor{}
	this.AlertDefinition = alertDefinition
	this.Monitor = monitor
	return &this
}

// NewAlertDefinitionMonitorWithDefaults instantiates a new AlertDefinitionMonitor object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlertDefinitionMonitorWithDefaults() *AlertDefinitionMonitor {
	this := AlertDefinitionMonitor{}
	return &this
}

// GetAlertDefinition returns the AlertDefinition field value
func (o *AlertDefinitionMonitor) GetAlertDefinition() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AlertDefinition
}

// GetAlertDefinitionOk returns a tuple with the AlertDefinition field value
// and a boolean to check if the value has been set.
func (o *AlertDefinitionMonitor) GetAlertDefinitionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AlertDefinition, true
}

// SetAlertDefinition sets field value
func (o *AlertDefinitionMonitor) SetAlertDefinition(v string) {
	o.AlertDefinition = v
}

// GetMonitor returns the Monitor field value
func (o *AlertDefinitionMonitor) GetMonitor() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Monitor
}

// GetMonitorOk returns a tuple with the Monitor field value
// and a boolean to check if the value has been set.
func (o *AlertDefinitionMonitor) GetMonitorOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Monitor, true
}

// SetMonitor sets field value
func (o *AlertDefinitionMonitor) SetMonitor(v string) {
	o.Monitor = v
}

func (o AlertDefinitionMonitor) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["AlertDefinition"] = o.AlertDefinition
	}
	if true {
		toSerialize["Monitor"] = o.Monitor
	}
	return json.Marshal(toSerialize)
}

type NullableAlertDefinitionMonitor struct {
	value *AlertDefinitionMonitor
	isSet bool
}

func (v NullableAlertDefinitionMonitor) Get() *AlertDefinitionMonitor {
	return v.value
}

func (v *NullableAlertDefinitionMonitor) Set(val *AlertDefinitionMonitor) {
	v.value = val
	v.isSet = true
}

func (v NullableAlertDefinitionMonitor) IsSet() bool {
	return v.isSet
}

func (v *NullableAlertDefinitionMonitor) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlertDefinitionMonitor(val *AlertDefinitionMonitor) *NullableAlertDefinitionMonitor {
	return &NullableAlertDefinitionMonitor{value: val, isSet: true}
}

func (v NullableAlertDefinitionMonitor) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlertDefinitionMonitor) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


