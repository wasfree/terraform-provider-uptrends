/*
Uptrends API v4

This document describes Uptrends API version 4. This Swagger environment also lets you execute API methods directly.  Please note that this is not a sandbox environment: these API methods operate directly on your actual Uptrends account.  For more information, please visit https://www.uptrends.com/api.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package uptrends

import (
	"encoding/json"
)

// Monitor struct for Monitor
type Monitor struct {
	// The name of this monitor.
	Name *string `json:"Name,omitempty"`
	// Indicates whether this monitor is actively running according to the monitoring interval.
	IsActive *bool `json:"IsActive,omitempty"`
	// The unique key of this monitor.
	MonitorGuid *string `json:"MonitorGuid,omitempty"`
	// Hash corresponding with this monitor.
	Hash *string `json:"Hash,omitempty"`
	// Indicates whether this monitor should generate alerts.
	GenerateAlert *bool `json:"GenerateAlert,omitempty"`
	// Indicates whether this monitor is locked.
	IsLocked *bool `json:"IsLocked,omitempty"`
	// Indicates the interval in seconds
	CheckInterval *int32 `json:"CheckInterval,omitempty"`
	Credits *int32 `json:"Credits,omitempty"`
	MonitorMode *MonitorMode `json:"MonitorMode,omitempty"`
	PredefinedVariables []PredefinedVariable `json:"PredefinedVariables,omitempty"`
	MsaSteps []MsaStep `json:"MsaSteps,omitempty"`
	UserDefinedFunctions []UserDefinedFunction `json:"UserDefinedFunctions,omitempty"`
	CustomMetrics []CustomMetric `json:"CustomMetrics,omitempty"`
	CustomFields []CustomField `json:"CustomFields,omitempty"`
	SelectedCheckpoints *SelectedCheckpoints `json:"SelectedCheckpoints,omitempty"`
	UsePrimaryCheckpointsOnly *bool `json:"UsePrimaryCheckpointsOnly,omitempty"`
	SelfServiceTransactionScript *string `json:"SelfServiceTransactionScript,omitempty"`
	MonitorType *MonitorType `json:"MonitorType,omitempty"`
	Notes *string `json:"Notes,omitempty"`
	AlertOnLoadTimeLimit1 *bool `json:"AlertOnLoadTimeLimit1,omitempty"`
	MultiStepApiTransactionScript *string `json:"MultiStepApiTransactionScript,omitempty"`
	LoadTimeLimit1 *int32 `json:"LoadTimeLimit1,omitempty"`
	AlertOnLoadTimeLimit2 *bool `json:"AlertOnLoadTimeLimit2,omitempty"`
	LoadTimeLimit2 *int32 `json:"LoadTimeLimit2,omitempty"`
	BlockGoogleAnalytics *bool `json:"BlockGoogleAnalytics,omitempty"`
	BlockUptrendsRum *bool `json:"BlockUptrendsRum,omitempty"`
	BlockUrls []string `json:"BlockUrls,omitempty"`
	RequestHeaders []RequestHeader `json:"RequestHeaders,omitempty"`
	UserAgent *string `json:"UserAgent,omitempty"`
	Username *string `json:"Username,omitempty"`
	Password *string `json:"Password,omitempty"`
	NameForPhoneAlerts *string `json:"NameForPhoneAlerts,omitempty"`
	AuthenticationType *ApiHttpAuthenticationType `json:"AuthenticationType,omitempty"`
	ThrottlingOptions *ThrottlingOptions `json:"ThrottlingOptions,omitempty"`
	DnsBypasses []DnsBypass `json:"DnsBypasses,omitempty"`
	TransactionStepDefinition *MonitorTransactionStepDefinition `json:"TransactionStepDefinition,omitempty"`
	CertificateName *string `json:"CertificateName,omitempty"`
	CertificateOrganization *string `json:"CertificateOrganization,omitempty"`
	CertificateOrganizationalUnit *string `json:"CertificateOrganizationalUnit,omitempty"`
	CertificateSerialNumber *string `json:"CertificateSerialNumber,omitempty"`
	CertificateFingerprint *string `json:"CertificateFingerprint,omitempty"`
	CertificateIssuerName *string `json:"CertificateIssuerName,omitempty"`
	CertificateIssuerCompanyName *string `json:"CertificateIssuerCompanyName,omitempty"`
	CertificateIssuerOrganizationalUnit *string `json:"CertificateIssuerOrganizationalUnit,omitempty"`
	CertificateExpirationWarningDays *int32 `json:"CertificateExpirationWarningDays,omitempty"`
	CheckCertificateErrors *bool `json:"CheckCertificateErrors,omitempty"`
	AlertOnMaximumBytes *bool `json:"AlertOnMaximumBytes,omitempty"`
	MaximumBytes *int32 `json:"MaximumBytes,omitempty"`
	AlertOnMaximumSize *bool `json:"AlertOnMaximumSize,omitempty"`
	ElementMaximumSize *int32 `json:"ElementMaximumSize,omitempty"`
	IgnoreExternalElements *bool `json:"IgnoreExternalElements,omitempty"`
	AlertOnPercentageFail *bool `json:"AlertOnPercentageFail,omitempty"`
	FailedObjectPercentage *int32 `json:"FailedObjectPercentage,omitempty"`
	DomainGroupGuid *string `json:"DomainGroupGuid,omitempty"`
	DomainGroupGuidSpecified *bool `json:"DomainGroupGuidSpecified,omitempty"`
	DnsServer *string `json:"DnsServer,omitempty"`
	DnsQuery *DnsQuery `json:"DnsQuery,omitempty"`
	DnsExpectedResult *string `json:"DnsExpectedResult,omitempty"`
	DnsTestValue *string `json:"DnsTestValue,omitempty"`
	Port *int32 `json:"Port,omitempty"`
	IpVersion *IpVersion `json:"IpVersion,omitempty"`
	AlertOnMinimumBytes *bool `json:"AlertOnMinimumBytes,omitempty"`
	MinimumBytes *int32 `json:"MinimumBytes,omitempty"`
	DatabaseName *string `json:"DatabaseName,omitempty"`
	NetworkAddress *string `json:"NetworkAddress,omitempty"`
	ImapSecureConnection *bool `json:"ImapSecureConnection,omitempty"`
	SftpAction *SftpAction `json:"SftpAction,omitempty"`
	SftpActionPath *string `json:"SftpActionPath,omitempty"`
	HttpMethod *HttpMethod `json:"HttpMethod,omitempty"`
	ExpectedHttpStatusCode *int32 `json:"ExpectedHttpStatusCode,omitempty"`
	ExpectedHttpStatusCodeSpecified *bool `json:"ExpectedHttpStatusCodeSpecified,omitempty"`
	TlsVersion *TlsVersion `json:"TlsVersion,omitempty"`
	RequestBody *string `json:"RequestBody,omitempty"`
	MatchPatterns []PatternMatch `json:"MatchPatterns,omitempty"`
	Url *string `json:"Url,omitempty"`
	BrowserType *BrowserType `json:"BrowserType,omitempty"`
	BrowserWindowDimensions *BrowserWindowDimensions `json:"BrowserWindowDimensions,omitempty"`
	UseConcurrentMonitoring *bool `json:"UseConcurrentMonitoring,omitempty"`
	ConcurrentUnconfirmedErrorThreshold *int32 `json:"ConcurrentUnconfirmedErrorThreshold,omitempty"`
	ConcurrentConfirmedErrorThreshold *int32 `json:"ConcurrentConfirmedErrorThreshold,omitempty"`
	ErrorConditions []ErrorCondition `json:"ErrorConditions,omitempty"`
}

// NewMonitor instantiates a new Monitor object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMonitor() *Monitor {
	this := Monitor{}
	var isActive bool = true
	this.IsActive = &isActive
	var generateAlert bool = true
	this.GenerateAlert = &generateAlert
	return &this
}

// NewMonitorWithDefaults instantiates a new Monitor object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMonitorWithDefaults() *Monitor {
	this := Monitor{}
	var isActive bool = true
	this.IsActive = &isActive
	var generateAlert bool = true
	this.GenerateAlert = &generateAlert
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Monitor) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
    return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Monitor) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Monitor) SetName(v string) {
	o.Name = &v
}

// GetIsActive returns the IsActive field value if set, zero value otherwise.
func (o *Monitor) GetIsActive() bool {
	if o == nil || isNil(o.IsActive) {
		var ret bool
		return ret
	}
	return *o.IsActive
}

// GetIsActiveOk returns a tuple with the IsActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetIsActiveOk() (*bool, bool) {
	if o == nil || isNil(o.IsActive) {
    return nil, false
	}
	return o.IsActive, true
}

// HasIsActive returns a boolean if a field has been set.
func (o *Monitor) HasIsActive() bool {
	if o != nil && !isNil(o.IsActive) {
		return true
	}

	return false
}

// SetIsActive gets a reference to the given bool and assigns it to the IsActive field.
func (o *Monitor) SetIsActive(v bool) {
	o.IsActive = &v
}

// GetMonitorGuid returns the MonitorGuid field value if set, zero value otherwise.
func (o *Monitor) GetMonitorGuid() string {
	if o == nil || isNil(o.MonitorGuid) {
		var ret string
		return ret
	}
	return *o.MonitorGuid
}

// GetMonitorGuidOk returns a tuple with the MonitorGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetMonitorGuidOk() (*string, bool) {
	if o == nil || isNil(o.MonitorGuid) {
    return nil, false
	}
	return o.MonitorGuid, true
}

// HasMonitorGuid returns a boolean if a field has been set.
func (o *Monitor) HasMonitorGuid() bool {
	if o != nil && !isNil(o.MonitorGuid) {
		return true
	}

	return false
}

// SetMonitorGuid gets a reference to the given string and assigns it to the MonitorGuid field.
func (o *Monitor) SetMonitorGuid(v string) {
	o.MonitorGuid = &v
}

// GetHash returns the Hash field value if set, zero value otherwise.
func (o *Monitor) GetHash() string {
	if o == nil || isNil(o.Hash) {
		var ret string
		return ret
	}
	return *o.Hash
}

// GetHashOk returns a tuple with the Hash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetHashOk() (*string, bool) {
	if o == nil || isNil(o.Hash) {
    return nil, false
	}
	return o.Hash, true
}

// HasHash returns a boolean if a field has been set.
func (o *Monitor) HasHash() bool {
	if o != nil && !isNil(o.Hash) {
		return true
	}

	return false
}

// SetHash gets a reference to the given string and assigns it to the Hash field.
func (o *Monitor) SetHash(v string) {
	o.Hash = &v
}

// GetGenerateAlert returns the GenerateAlert field value if set, zero value otherwise.
func (o *Monitor) GetGenerateAlert() bool {
	if o == nil || isNil(o.GenerateAlert) {
		var ret bool
		return ret
	}
	return *o.GenerateAlert
}

// GetGenerateAlertOk returns a tuple with the GenerateAlert field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetGenerateAlertOk() (*bool, bool) {
	if o == nil || isNil(o.GenerateAlert) {
    return nil, false
	}
	return o.GenerateAlert, true
}

// HasGenerateAlert returns a boolean if a field has been set.
func (o *Monitor) HasGenerateAlert() bool {
	if o != nil && !isNil(o.GenerateAlert) {
		return true
	}

	return false
}

// SetGenerateAlert gets a reference to the given bool and assigns it to the GenerateAlert field.
func (o *Monitor) SetGenerateAlert(v bool) {
	o.GenerateAlert = &v
}

// GetIsLocked returns the IsLocked field value if set, zero value otherwise.
func (o *Monitor) GetIsLocked() bool {
	if o == nil || isNil(o.IsLocked) {
		var ret bool
		return ret
	}
	return *o.IsLocked
}

// GetIsLockedOk returns a tuple with the IsLocked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetIsLockedOk() (*bool, bool) {
	if o == nil || isNil(o.IsLocked) {
    return nil, false
	}
	return o.IsLocked, true
}

// HasIsLocked returns a boolean if a field has been set.
func (o *Monitor) HasIsLocked() bool {
	if o != nil && !isNil(o.IsLocked) {
		return true
	}

	return false
}

// SetIsLocked gets a reference to the given bool and assigns it to the IsLocked field.
func (o *Monitor) SetIsLocked(v bool) {
	o.IsLocked = &v
}

// GetCheckInterval returns the CheckInterval field value if set, zero value otherwise.
func (o *Monitor) GetCheckInterval() int32 {
	if o == nil || isNil(o.CheckInterval) {
		var ret int32
		return ret
	}
	return *o.CheckInterval
}

// GetCheckIntervalOk returns a tuple with the CheckInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetCheckIntervalOk() (*int32, bool) {
	if o == nil || isNil(o.CheckInterval) {
    return nil, false
	}
	return o.CheckInterval, true
}

// HasCheckInterval returns a boolean if a field has been set.
func (o *Monitor) HasCheckInterval() bool {
	if o != nil && !isNil(o.CheckInterval) {
		return true
	}

	return false
}

// SetCheckInterval gets a reference to the given int32 and assigns it to the CheckInterval field.
func (o *Monitor) SetCheckInterval(v int32) {
	o.CheckInterval = &v
}

// GetCredits returns the Credits field value if set, zero value otherwise.
func (o *Monitor) GetCredits() int32 {
	if o == nil || isNil(o.Credits) {
		var ret int32
		return ret
	}
	return *o.Credits
}

// GetCreditsOk returns a tuple with the Credits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetCreditsOk() (*int32, bool) {
	if o == nil || isNil(o.Credits) {
    return nil, false
	}
	return o.Credits, true
}

// HasCredits returns a boolean if a field has been set.
func (o *Monitor) HasCredits() bool {
	if o != nil && !isNil(o.Credits) {
		return true
	}

	return false
}

// SetCredits gets a reference to the given int32 and assigns it to the Credits field.
func (o *Monitor) SetCredits(v int32) {
	o.Credits = &v
}

// GetMonitorMode returns the MonitorMode field value if set, zero value otherwise.
func (o *Monitor) GetMonitorMode() MonitorMode {
	if o == nil || isNil(o.MonitorMode) {
		var ret MonitorMode
		return ret
	}
	return *o.MonitorMode
}

// GetMonitorModeOk returns a tuple with the MonitorMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetMonitorModeOk() (*MonitorMode, bool) {
	if o == nil || isNil(o.MonitorMode) {
    return nil, false
	}
	return o.MonitorMode, true
}

// HasMonitorMode returns a boolean if a field has been set.
func (o *Monitor) HasMonitorMode() bool {
	if o != nil && !isNil(o.MonitorMode) {
		return true
	}

	return false
}

// SetMonitorMode gets a reference to the given MonitorMode and assigns it to the MonitorMode field.
func (o *Monitor) SetMonitorMode(v MonitorMode) {
	o.MonitorMode = &v
}

// GetPredefinedVariables returns the PredefinedVariables field value if set, zero value otherwise.
func (o *Monitor) GetPredefinedVariables() []PredefinedVariable {
	if o == nil || isNil(o.PredefinedVariables) {
		var ret []PredefinedVariable
		return ret
	}
	return o.PredefinedVariables
}

// GetPredefinedVariablesOk returns a tuple with the PredefinedVariables field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetPredefinedVariablesOk() ([]PredefinedVariable, bool) {
	if o == nil || isNil(o.PredefinedVariables) {
    return nil, false
	}
	return o.PredefinedVariables, true
}

// HasPredefinedVariables returns a boolean if a field has been set.
func (o *Monitor) HasPredefinedVariables() bool {
	if o != nil && !isNil(o.PredefinedVariables) {
		return true
	}

	return false
}

// SetPredefinedVariables gets a reference to the given []PredefinedVariable and assigns it to the PredefinedVariables field.
func (o *Monitor) SetPredefinedVariables(v []PredefinedVariable) {
	o.PredefinedVariables = v
}

// GetMsaSteps returns the MsaSteps field value if set, zero value otherwise.
func (o *Monitor) GetMsaSteps() []MsaStep {
	if o == nil || isNil(o.MsaSteps) {
		var ret []MsaStep
		return ret
	}
	return o.MsaSteps
}

// GetMsaStepsOk returns a tuple with the MsaSteps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetMsaStepsOk() ([]MsaStep, bool) {
	if o == nil || isNil(o.MsaSteps) {
    return nil, false
	}
	return o.MsaSteps, true
}

// HasMsaSteps returns a boolean if a field has been set.
func (o *Monitor) HasMsaSteps() bool {
	if o != nil && !isNil(o.MsaSteps) {
		return true
	}

	return false
}

// SetMsaSteps gets a reference to the given []MsaStep and assigns it to the MsaSteps field.
func (o *Monitor) SetMsaSteps(v []MsaStep) {
	o.MsaSteps = v
}

// GetUserDefinedFunctions returns the UserDefinedFunctions field value if set, zero value otherwise.
func (o *Monitor) GetUserDefinedFunctions() []UserDefinedFunction {
	if o == nil || isNil(o.UserDefinedFunctions) {
		var ret []UserDefinedFunction
		return ret
	}
	return o.UserDefinedFunctions
}

// GetUserDefinedFunctionsOk returns a tuple with the UserDefinedFunctions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetUserDefinedFunctionsOk() ([]UserDefinedFunction, bool) {
	if o == nil || isNil(o.UserDefinedFunctions) {
    return nil, false
	}
	return o.UserDefinedFunctions, true
}

// HasUserDefinedFunctions returns a boolean if a field has been set.
func (o *Monitor) HasUserDefinedFunctions() bool {
	if o != nil && !isNil(o.UserDefinedFunctions) {
		return true
	}

	return false
}

// SetUserDefinedFunctions gets a reference to the given []UserDefinedFunction and assigns it to the UserDefinedFunctions field.
func (o *Monitor) SetUserDefinedFunctions(v []UserDefinedFunction) {
	o.UserDefinedFunctions = v
}

// GetCustomMetrics returns the CustomMetrics field value if set, zero value otherwise.
func (o *Monitor) GetCustomMetrics() []CustomMetric {
	if o == nil || isNil(o.CustomMetrics) {
		var ret []CustomMetric
		return ret
	}
	return o.CustomMetrics
}

// GetCustomMetricsOk returns a tuple with the CustomMetrics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetCustomMetricsOk() ([]CustomMetric, bool) {
	if o == nil || isNil(o.CustomMetrics) {
    return nil, false
	}
	return o.CustomMetrics, true
}

// HasCustomMetrics returns a boolean if a field has been set.
func (o *Monitor) HasCustomMetrics() bool {
	if o != nil && !isNil(o.CustomMetrics) {
		return true
	}

	return false
}

// SetCustomMetrics gets a reference to the given []CustomMetric and assigns it to the CustomMetrics field.
func (o *Monitor) SetCustomMetrics(v []CustomMetric) {
	o.CustomMetrics = v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise.
func (o *Monitor) GetCustomFields() []CustomField {
	if o == nil || isNil(o.CustomFields) {
		var ret []CustomField
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetCustomFieldsOk() ([]CustomField, bool) {
	if o == nil || isNil(o.CustomFields) {
    return nil, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *Monitor) HasCustomFields() bool {
	if o != nil && !isNil(o.CustomFields) {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given []CustomField and assigns it to the CustomFields field.
func (o *Monitor) SetCustomFields(v []CustomField) {
	o.CustomFields = v
}

// GetSelectedCheckpoints returns the SelectedCheckpoints field value if set, zero value otherwise.
func (o *Monitor) GetSelectedCheckpoints() SelectedCheckpoints {
	if o == nil || isNil(o.SelectedCheckpoints) {
		var ret SelectedCheckpoints
		return ret
	}
	return *o.SelectedCheckpoints
}

// GetSelectedCheckpointsOk returns a tuple with the SelectedCheckpoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetSelectedCheckpointsOk() (*SelectedCheckpoints, bool) {
	if o == nil || isNil(o.SelectedCheckpoints) {
    return nil, false
	}
	return o.SelectedCheckpoints, true
}

// HasSelectedCheckpoints returns a boolean if a field has been set.
func (o *Monitor) HasSelectedCheckpoints() bool {
	if o != nil && !isNil(o.SelectedCheckpoints) {
		return true
	}

	return false
}

// SetSelectedCheckpoints gets a reference to the given SelectedCheckpoints and assigns it to the SelectedCheckpoints field.
func (o *Monitor) SetSelectedCheckpoints(v SelectedCheckpoints) {
	o.SelectedCheckpoints = &v
}

// GetUsePrimaryCheckpointsOnly returns the UsePrimaryCheckpointsOnly field value if set, zero value otherwise.
func (o *Monitor) GetUsePrimaryCheckpointsOnly() bool {
	if o == nil || isNil(o.UsePrimaryCheckpointsOnly) {
		var ret bool
		return ret
	}
	return *o.UsePrimaryCheckpointsOnly
}

// GetUsePrimaryCheckpointsOnlyOk returns a tuple with the UsePrimaryCheckpointsOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetUsePrimaryCheckpointsOnlyOk() (*bool, bool) {
	if o == nil || isNil(o.UsePrimaryCheckpointsOnly) {
    return nil, false
	}
	return o.UsePrimaryCheckpointsOnly, true
}

// HasUsePrimaryCheckpointsOnly returns a boolean if a field has been set.
func (o *Monitor) HasUsePrimaryCheckpointsOnly() bool {
	if o != nil && !isNil(o.UsePrimaryCheckpointsOnly) {
		return true
	}

	return false
}

// SetUsePrimaryCheckpointsOnly gets a reference to the given bool and assigns it to the UsePrimaryCheckpointsOnly field.
func (o *Monitor) SetUsePrimaryCheckpointsOnly(v bool) {
	o.UsePrimaryCheckpointsOnly = &v
}

// GetSelfServiceTransactionScript returns the SelfServiceTransactionScript field value if set, zero value otherwise.
func (o *Monitor) GetSelfServiceTransactionScript() string {
	if o == nil || isNil(o.SelfServiceTransactionScript) {
		var ret string
		return ret
	}
	return *o.SelfServiceTransactionScript
}

// GetSelfServiceTransactionScriptOk returns a tuple with the SelfServiceTransactionScript field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetSelfServiceTransactionScriptOk() (*string, bool) {
	if o == nil || isNil(o.SelfServiceTransactionScript) {
    return nil, false
	}
	return o.SelfServiceTransactionScript, true
}

// HasSelfServiceTransactionScript returns a boolean if a field has been set.
func (o *Monitor) HasSelfServiceTransactionScript() bool {
	if o != nil && !isNil(o.SelfServiceTransactionScript) {
		return true
	}

	return false
}

// SetSelfServiceTransactionScript gets a reference to the given string and assigns it to the SelfServiceTransactionScript field.
func (o *Monitor) SetSelfServiceTransactionScript(v string) {
	o.SelfServiceTransactionScript = &v
}

// GetMonitorType returns the MonitorType field value if set, zero value otherwise.
func (o *Monitor) GetMonitorType() MonitorType {
	if o == nil || isNil(o.MonitorType) {
		var ret MonitorType
		return ret
	}
	return *o.MonitorType
}

// GetMonitorTypeOk returns a tuple with the MonitorType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetMonitorTypeOk() (*MonitorType, bool) {
	if o == nil || isNil(o.MonitorType) {
    return nil, false
	}
	return o.MonitorType, true
}

// HasMonitorType returns a boolean if a field has been set.
func (o *Monitor) HasMonitorType() bool {
	if o != nil && !isNil(o.MonitorType) {
		return true
	}

	return false
}

// SetMonitorType gets a reference to the given MonitorType and assigns it to the MonitorType field.
func (o *Monitor) SetMonitorType(v MonitorType) {
	o.MonitorType = &v
}

// GetNotes returns the Notes field value if set, zero value otherwise.
func (o *Monitor) GetNotes() string {
	if o == nil || isNil(o.Notes) {
		var ret string
		return ret
	}
	return *o.Notes
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetNotesOk() (*string, bool) {
	if o == nil || isNil(o.Notes) {
    return nil, false
	}
	return o.Notes, true
}

// HasNotes returns a boolean if a field has been set.
func (o *Monitor) HasNotes() bool {
	if o != nil && !isNil(o.Notes) {
		return true
	}

	return false
}

// SetNotes gets a reference to the given string and assigns it to the Notes field.
func (o *Monitor) SetNotes(v string) {
	o.Notes = &v
}

// GetAlertOnLoadTimeLimit1 returns the AlertOnLoadTimeLimit1 field value if set, zero value otherwise.
func (o *Monitor) GetAlertOnLoadTimeLimit1() bool {
	if o == nil || isNil(o.AlertOnLoadTimeLimit1) {
		var ret bool
		return ret
	}
	return *o.AlertOnLoadTimeLimit1
}

// GetAlertOnLoadTimeLimit1Ok returns a tuple with the AlertOnLoadTimeLimit1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetAlertOnLoadTimeLimit1Ok() (*bool, bool) {
	if o == nil || isNil(o.AlertOnLoadTimeLimit1) {
    return nil, false
	}
	return o.AlertOnLoadTimeLimit1, true
}

// HasAlertOnLoadTimeLimit1 returns a boolean if a field has been set.
func (o *Monitor) HasAlertOnLoadTimeLimit1() bool {
	if o != nil && !isNil(o.AlertOnLoadTimeLimit1) {
		return true
	}

	return false
}

// SetAlertOnLoadTimeLimit1 gets a reference to the given bool and assigns it to the AlertOnLoadTimeLimit1 field.
func (o *Monitor) SetAlertOnLoadTimeLimit1(v bool) {
	o.AlertOnLoadTimeLimit1 = &v
}

// GetMultiStepApiTransactionScript returns the MultiStepApiTransactionScript field value if set, zero value otherwise.
func (o *Monitor) GetMultiStepApiTransactionScript() string {
	if o == nil || isNil(o.MultiStepApiTransactionScript) {
		var ret string
		return ret
	}
	return *o.MultiStepApiTransactionScript
}

// GetMultiStepApiTransactionScriptOk returns a tuple with the MultiStepApiTransactionScript field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetMultiStepApiTransactionScriptOk() (*string, bool) {
	if o == nil || isNil(o.MultiStepApiTransactionScript) {
    return nil, false
	}
	return o.MultiStepApiTransactionScript, true
}

// HasMultiStepApiTransactionScript returns a boolean if a field has been set.
func (o *Monitor) HasMultiStepApiTransactionScript() bool {
	if o != nil && !isNil(o.MultiStepApiTransactionScript) {
		return true
	}

	return false
}

// SetMultiStepApiTransactionScript gets a reference to the given string and assigns it to the MultiStepApiTransactionScript field.
func (o *Monitor) SetMultiStepApiTransactionScript(v string) {
	o.MultiStepApiTransactionScript = &v
}

// GetLoadTimeLimit1 returns the LoadTimeLimit1 field value if set, zero value otherwise.
func (o *Monitor) GetLoadTimeLimit1() int32 {
	if o == nil || isNil(o.LoadTimeLimit1) {
		var ret int32
		return ret
	}
	return *o.LoadTimeLimit1
}

// GetLoadTimeLimit1Ok returns a tuple with the LoadTimeLimit1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetLoadTimeLimit1Ok() (*int32, bool) {
	if o == nil || isNil(o.LoadTimeLimit1) {
    return nil, false
	}
	return o.LoadTimeLimit1, true
}

// HasLoadTimeLimit1 returns a boolean if a field has been set.
func (o *Monitor) HasLoadTimeLimit1() bool {
	if o != nil && !isNil(o.LoadTimeLimit1) {
		return true
	}

	return false
}

// SetLoadTimeLimit1 gets a reference to the given int32 and assigns it to the LoadTimeLimit1 field.
func (o *Monitor) SetLoadTimeLimit1(v int32) {
	o.LoadTimeLimit1 = &v
}

// GetAlertOnLoadTimeLimit2 returns the AlertOnLoadTimeLimit2 field value if set, zero value otherwise.
func (o *Monitor) GetAlertOnLoadTimeLimit2() bool {
	if o == nil || isNil(o.AlertOnLoadTimeLimit2) {
		var ret bool
		return ret
	}
	return *o.AlertOnLoadTimeLimit2
}

// GetAlertOnLoadTimeLimit2Ok returns a tuple with the AlertOnLoadTimeLimit2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetAlertOnLoadTimeLimit2Ok() (*bool, bool) {
	if o == nil || isNil(o.AlertOnLoadTimeLimit2) {
    return nil, false
	}
	return o.AlertOnLoadTimeLimit2, true
}

// HasAlertOnLoadTimeLimit2 returns a boolean if a field has been set.
func (o *Monitor) HasAlertOnLoadTimeLimit2() bool {
	if o != nil && !isNil(o.AlertOnLoadTimeLimit2) {
		return true
	}

	return false
}

// SetAlertOnLoadTimeLimit2 gets a reference to the given bool and assigns it to the AlertOnLoadTimeLimit2 field.
func (o *Monitor) SetAlertOnLoadTimeLimit2(v bool) {
	o.AlertOnLoadTimeLimit2 = &v
}

// GetLoadTimeLimit2 returns the LoadTimeLimit2 field value if set, zero value otherwise.
func (o *Monitor) GetLoadTimeLimit2() int32 {
	if o == nil || isNil(o.LoadTimeLimit2) {
		var ret int32
		return ret
	}
	return *o.LoadTimeLimit2
}

// GetLoadTimeLimit2Ok returns a tuple with the LoadTimeLimit2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetLoadTimeLimit2Ok() (*int32, bool) {
	if o == nil || isNil(o.LoadTimeLimit2) {
    return nil, false
	}
	return o.LoadTimeLimit2, true
}

// HasLoadTimeLimit2 returns a boolean if a field has been set.
func (o *Monitor) HasLoadTimeLimit2() bool {
	if o != nil && !isNil(o.LoadTimeLimit2) {
		return true
	}

	return false
}

// SetLoadTimeLimit2 gets a reference to the given int32 and assigns it to the LoadTimeLimit2 field.
func (o *Monitor) SetLoadTimeLimit2(v int32) {
	o.LoadTimeLimit2 = &v
}

// GetBlockGoogleAnalytics returns the BlockGoogleAnalytics field value if set, zero value otherwise.
func (o *Monitor) GetBlockGoogleAnalytics() bool {
	if o == nil || isNil(o.BlockGoogleAnalytics) {
		var ret bool
		return ret
	}
	return *o.BlockGoogleAnalytics
}

// GetBlockGoogleAnalyticsOk returns a tuple with the BlockGoogleAnalytics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetBlockGoogleAnalyticsOk() (*bool, bool) {
	if o == nil || isNil(o.BlockGoogleAnalytics) {
    return nil, false
	}
	return o.BlockGoogleAnalytics, true
}

// HasBlockGoogleAnalytics returns a boolean if a field has been set.
func (o *Monitor) HasBlockGoogleAnalytics() bool {
	if o != nil && !isNil(o.BlockGoogleAnalytics) {
		return true
	}

	return false
}

// SetBlockGoogleAnalytics gets a reference to the given bool and assigns it to the BlockGoogleAnalytics field.
func (o *Monitor) SetBlockGoogleAnalytics(v bool) {
	o.BlockGoogleAnalytics = &v
}

// GetBlockUptrendsRum returns the BlockUptrendsRum field value if set, zero value otherwise.
func (o *Monitor) GetBlockUptrendsRum() bool {
	if o == nil || isNil(o.BlockUptrendsRum) {
		var ret bool
		return ret
	}
	return *o.BlockUptrendsRum
}

// GetBlockUptrendsRumOk returns a tuple with the BlockUptrendsRum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetBlockUptrendsRumOk() (*bool, bool) {
	if o == nil || isNil(o.BlockUptrendsRum) {
    return nil, false
	}
	return o.BlockUptrendsRum, true
}

// HasBlockUptrendsRum returns a boolean if a field has been set.
func (o *Monitor) HasBlockUptrendsRum() bool {
	if o != nil && !isNil(o.BlockUptrendsRum) {
		return true
	}

	return false
}

// SetBlockUptrendsRum gets a reference to the given bool and assigns it to the BlockUptrendsRum field.
func (o *Monitor) SetBlockUptrendsRum(v bool) {
	o.BlockUptrendsRum = &v
}

// GetBlockUrls returns the BlockUrls field value if set, zero value otherwise.
func (o *Monitor) GetBlockUrls() []string {
	if o == nil || isNil(o.BlockUrls) {
		var ret []string
		return ret
	}
	return o.BlockUrls
}

// GetBlockUrlsOk returns a tuple with the BlockUrls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetBlockUrlsOk() ([]string, bool) {
	if o == nil || isNil(o.BlockUrls) {
    return nil, false
	}
	return o.BlockUrls, true
}

// HasBlockUrls returns a boolean if a field has been set.
func (o *Monitor) HasBlockUrls() bool {
	if o != nil && !isNil(o.BlockUrls) {
		return true
	}

	return false
}

// SetBlockUrls gets a reference to the given []string and assigns it to the BlockUrls field.
func (o *Monitor) SetBlockUrls(v []string) {
	o.BlockUrls = v
}

// GetRequestHeaders returns the RequestHeaders field value if set, zero value otherwise.
func (o *Monitor) GetRequestHeaders() []RequestHeader {
	if o == nil || isNil(o.RequestHeaders) {
		var ret []RequestHeader
		return ret
	}
	return o.RequestHeaders
}

// GetRequestHeadersOk returns a tuple with the RequestHeaders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetRequestHeadersOk() ([]RequestHeader, bool) {
	if o == nil || isNil(o.RequestHeaders) {
    return nil, false
	}
	return o.RequestHeaders, true
}

// HasRequestHeaders returns a boolean if a field has been set.
func (o *Monitor) HasRequestHeaders() bool {
	if o != nil && !isNil(o.RequestHeaders) {
		return true
	}

	return false
}

// SetRequestHeaders gets a reference to the given []RequestHeader and assigns it to the RequestHeaders field.
func (o *Monitor) SetRequestHeaders(v []RequestHeader) {
	o.RequestHeaders = v
}

// GetUserAgent returns the UserAgent field value if set, zero value otherwise.
func (o *Monitor) GetUserAgent() string {
	if o == nil || isNil(o.UserAgent) {
		var ret string
		return ret
	}
	return *o.UserAgent
}

// GetUserAgentOk returns a tuple with the UserAgent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetUserAgentOk() (*string, bool) {
	if o == nil || isNil(o.UserAgent) {
    return nil, false
	}
	return o.UserAgent, true
}

// HasUserAgent returns a boolean if a field has been set.
func (o *Monitor) HasUserAgent() bool {
	if o != nil && !isNil(o.UserAgent) {
		return true
	}

	return false
}

// SetUserAgent gets a reference to the given string and assigns it to the UserAgent field.
func (o *Monitor) SetUserAgent(v string) {
	o.UserAgent = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *Monitor) GetUsername() string {
	if o == nil || isNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetUsernameOk() (*string, bool) {
	if o == nil || isNil(o.Username) {
    return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *Monitor) HasUsername() bool {
	if o != nil && !isNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *Monitor) SetUsername(v string) {
	o.Username = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *Monitor) GetPassword() string {
	if o == nil || isNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetPasswordOk() (*string, bool) {
	if o == nil || isNil(o.Password) {
    return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *Monitor) HasPassword() bool {
	if o != nil && !isNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *Monitor) SetPassword(v string) {
	o.Password = &v
}

// GetNameForPhoneAlerts returns the NameForPhoneAlerts field value if set, zero value otherwise.
func (o *Monitor) GetNameForPhoneAlerts() string {
	if o == nil || isNil(o.NameForPhoneAlerts) {
		var ret string
		return ret
	}
	return *o.NameForPhoneAlerts
}

// GetNameForPhoneAlertsOk returns a tuple with the NameForPhoneAlerts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetNameForPhoneAlertsOk() (*string, bool) {
	if o == nil || isNil(o.NameForPhoneAlerts) {
    return nil, false
	}
	return o.NameForPhoneAlerts, true
}

// HasNameForPhoneAlerts returns a boolean if a field has been set.
func (o *Monitor) HasNameForPhoneAlerts() bool {
	if o != nil && !isNil(o.NameForPhoneAlerts) {
		return true
	}

	return false
}

// SetNameForPhoneAlerts gets a reference to the given string and assigns it to the NameForPhoneAlerts field.
func (o *Monitor) SetNameForPhoneAlerts(v string) {
	o.NameForPhoneAlerts = &v
}

// GetAuthenticationType returns the AuthenticationType field value if set, zero value otherwise.
func (o *Monitor) GetAuthenticationType() ApiHttpAuthenticationType {
	if o == nil || isNil(o.AuthenticationType) {
		var ret ApiHttpAuthenticationType
		return ret
	}
	return *o.AuthenticationType
}

// GetAuthenticationTypeOk returns a tuple with the AuthenticationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetAuthenticationTypeOk() (*ApiHttpAuthenticationType, bool) {
	if o == nil || isNil(o.AuthenticationType) {
    return nil, false
	}
	return o.AuthenticationType, true
}

// HasAuthenticationType returns a boolean if a field has been set.
func (o *Monitor) HasAuthenticationType() bool {
	if o != nil && !isNil(o.AuthenticationType) {
		return true
	}

	return false
}

// SetAuthenticationType gets a reference to the given ApiHttpAuthenticationType and assigns it to the AuthenticationType field.
func (o *Monitor) SetAuthenticationType(v ApiHttpAuthenticationType) {
	o.AuthenticationType = &v
}

// GetThrottlingOptions returns the ThrottlingOptions field value if set, zero value otherwise.
func (o *Monitor) GetThrottlingOptions() ThrottlingOptions {
	if o == nil || isNil(o.ThrottlingOptions) {
		var ret ThrottlingOptions
		return ret
	}
	return *o.ThrottlingOptions
}

// GetThrottlingOptionsOk returns a tuple with the ThrottlingOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetThrottlingOptionsOk() (*ThrottlingOptions, bool) {
	if o == nil || isNil(o.ThrottlingOptions) {
    return nil, false
	}
	return o.ThrottlingOptions, true
}

// HasThrottlingOptions returns a boolean if a field has been set.
func (o *Monitor) HasThrottlingOptions() bool {
	if o != nil && !isNil(o.ThrottlingOptions) {
		return true
	}

	return false
}

// SetThrottlingOptions gets a reference to the given ThrottlingOptions and assigns it to the ThrottlingOptions field.
func (o *Monitor) SetThrottlingOptions(v ThrottlingOptions) {
	o.ThrottlingOptions = &v
}

// GetDnsBypasses returns the DnsBypasses field value if set, zero value otherwise.
func (o *Monitor) GetDnsBypasses() []DnsBypass {
	if o == nil || isNil(o.DnsBypasses) {
		var ret []DnsBypass
		return ret
	}
	return o.DnsBypasses
}

// GetDnsBypassesOk returns a tuple with the DnsBypasses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetDnsBypassesOk() ([]DnsBypass, bool) {
	if o == nil || isNil(o.DnsBypasses) {
    return nil, false
	}
	return o.DnsBypasses, true
}

// HasDnsBypasses returns a boolean if a field has been set.
func (o *Monitor) HasDnsBypasses() bool {
	if o != nil && !isNil(o.DnsBypasses) {
		return true
	}

	return false
}

// SetDnsBypasses gets a reference to the given []DnsBypass and assigns it to the DnsBypasses field.
func (o *Monitor) SetDnsBypasses(v []DnsBypass) {
	o.DnsBypasses = v
}

// GetTransactionStepDefinition returns the TransactionStepDefinition field value if set, zero value otherwise.
func (o *Monitor) GetTransactionStepDefinition() MonitorTransactionStepDefinition {
	if o == nil || isNil(o.TransactionStepDefinition) {
		var ret MonitorTransactionStepDefinition
		return ret
	}
	return *o.TransactionStepDefinition
}

// GetTransactionStepDefinitionOk returns a tuple with the TransactionStepDefinition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetTransactionStepDefinitionOk() (*MonitorTransactionStepDefinition, bool) {
	if o == nil || isNil(o.TransactionStepDefinition) {
    return nil, false
	}
	return o.TransactionStepDefinition, true
}

// HasTransactionStepDefinition returns a boolean if a field has been set.
func (o *Monitor) HasTransactionStepDefinition() bool {
	if o != nil && !isNil(o.TransactionStepDefinition) {
		return true
	}

	return false
}

// SetTransactionStepDefinition gets a reference to the given MonitorTransactionStepDefinition and assigns it to the TransactionStepDefinition field.
func (o *Monitor) SetTransactionStepDefinition(v MonitorTransactionStepDefinition) {
	o.TransactionStepDefinition = &v
}

// GetCertificateName returns the CertificateName field value if set, zero value otherwise.
func (o *Monitor) GetCertificateName() string {
	if o == nil || isNil(o.CertificateName) {
		var ret string
		return ret
	}
	return *o.CertificateName
}

// GetCertificateNameOk returns a tuple with the CertificateName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetCertificateNameOk() (*string, bool) {
	if o == nil || isNil(o.CertificateName) {
    return nil, false
	}
	return o.CertificateName, true
}

// HasCertificateName returns a boolean if a field has been set.
func (o *Monitor) HasCertificateName() bool {
	if o != nil && !isNil(o.CertificateName) {
		return true
	}

	return false
}

// SetCertificateName gets a reference to the given string and assigns it to the CertificateName field.
func (o *Monitor) SetCertificateName(v string) {
	o.CertificateName = &v
}

// GetCertificateOrganization returns the CertificateOrganization field value if set, zero value otherwise.
func (o *Monitor) GetCertificateOrganization() string {
	if o == nil || isNil(o.CertificateOrganization) {
		var ret string
		return ret
	}
	return *o.CertificateOrganization
}

// GetCertificateOrganizationOk returns a tuple with the CertificateOrganization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetCertificateOrganizationOk() (*string, bool) {
	if o == nil || isNil(o.CertificateOrganization) {
    return nil, false
	}
	return o.CertificateOrganization, true
}

// HasCertificateOrganization returns a boolean if a field has been set.
func (o *Monitor) HasCertificateOrganization() bool {
	if o != nil && !isNil(o.CertificateOrganization) {
		return true
	}

	return false
}

// SetCertificateOrganization gets a reference to the given string and assigns it to the CertificateOrganization field.
func (o *Monitor) SetCertificateOrganization(v string) {
	o.CertificateOrganization = &v
}

// GetCertificateOrganizationalUnit returns the CertificateOrganizationalUnit field value if set, zero value otherwise.
func (o *Monitor) GetCertificateOrganizationalUnit() string {
	if o == nil || isNil(o.CertificateOrganizationalUnit) {
		var ret string
		return ret
	}
	return *o.CertificateOrganizationalUnit
}

// GetCertificateOrganizationalUnitOk returns a tuple with the CertificateOrganizationalUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetCertificateOrganizationalUnitOk() (*string, bool) {
	if o == nil || isNil(o.CertificateOrganizationalUnit) {
    return nil, false
	}
	return o.CertificateOrganizationalUnit, true
}

// HasCertificateOrganizationalUnit returns a boolean if a field has been set.
func (o *Monitor) HasCertificateOrganizationalUnit() bool {
	if o != nil && !isNil(o.CertificateOrganizationalUnit) {
		return true
	}

	return false
}

// SetCertificateOrganizationalUnit gets a reference to the given string and assigns it to the CertificateOrganizationalUnit field.
func (o *Monitor) SetCertificateOrganizationalUnit(v string) {
	o.CertificateOrganizationalUnit = &v
}

// GetCertificateSerialNumber returns the CertificateSerialNumber field value if set, zero value otherwise.
func (o *Monitor) GetCertificateSerialNumber() string {
	if o == nil || isNil(o.CertificateSerialNumber) {
		var ret string
		return ret
	}
	return *o.CertificateSerialNumber
}

// GetCertificateSerialNumberOk returns a tuple with the CertificateSerialNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetCertificateSerialNumberOk() (*string, bool) {
	if o == nil || isNil(o.CertificateSerialNumber) {
    return nil, false
	}
	return o.CertificateSerialNumber, true
}

// HasCertificateSerialNumber returns a boolean if a field has been set.
func (o *Monitor) HasCertificateSerialNumber() bool {
	if o != nil && !isNil(o.CertificateSerialNumber) {
		return true
	}

	return false
}

// SetCertificateSerialNumber gets a reference to the given string and assigns it to the CertificateSerialNumber field.
func (o *Monitor) SetCertificateSerialNumber(v string) {
	o.CertificateSerialNumber = &v
}

// GetCertificateFingerprint returns the CertificateFingerprint field value if set, zero value otherwise.
func (o *Monitor) GetCertificateFingerprint() string {
	if o == nil || isNil(o.CertificateFingerprint) {
		var ret string
		return ret
	}
	return *o.CertificateFingerprint
}

// GetCertificateFingerprintOk returns a tuple with the CertificateFingerprint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetCertificateFingerprintOk() (*string, bool) {
	if o == nil || isNil(o.CertificateFingerprint) {
    return nil, false
	}
	return o.CertificateFingerprint, true
}

// HasCertificateFingerprint returns a boolean if a field has been set.
func (o *Monitor) HasCertificateFingerprint() bool {
	if o != nil && !isNil(o.CertificateFingerprint) {
		return true
	}

	return false
}

// SetCertificateFingerprint gets a reference to the given string and assigns it to the CertificateFingerprint field.
func (o *Monitor) SetCertificateFingerprint(v string) {
	o.CertificateFingerprint = &v
}

// GetCertificateIssuerName returns the CertificateIssuerName field value if set, zero value otherwise.
func (o *Monitor) GetCertificateIssuerName() string {
	if o == nil || isNil(o.CertificateIssuerName) {
		var ret string
		return ret
	}
	return *o.CertificateIssuerName
}

// GetCertificateIssuerNameOk returns a tuple with the CertificateIssuerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetCertificateIssuerNameOk() (*string, bool) {
	if o == nil || isNil(o.CertificateIssuerName) {
    return nil, false
	}
	return o.CertificateIssuerName, true
}

// HasCertificateIssuerName returns a boolean if a field has been set.
func (o *Monitor) HasCertificateIssuerName() bool {
	if o != nil && !isNil(o.CertificateIssuerName) {
		return true
	}

	return false
}

// SetCertificateIssuerName gets a reference to the given string and assigns it to the CertificateIssuerName field.
func (o *Monitor) SetCertificateIssuerName(v string) {
	o.CertificateIssuerName = &v
}

// GetCertificateIssuerCompanyName returns the CertificateIssuerCompanyName field value if set, zero value otherwise.
func (o *Monitor) GetCertificateIssuerCompanyName() string {
	if o == nil || isNil(o.CertificateIssuerCompanyName) {
		var ret string
		return ret
	}
	return *o.CertificateIssuerCompanyName
}

// GetCertificateIssuerCompanyNameOk returns a tuple with the CertificateIssuerCompanyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetCertificateIssuerCompanyNameOk() (*string, bool) {
	if o == nil || isNil(o.CertificateIssuerCompanyName) {
    return nil, false
	}
	return o.CertificateIssuerCompanyName, true
}

// HasCertificateIssuerCompanyName returns a boolean if a field has been set.
func (o *Monitor) HasCertificateIssuerCompanyName() bool {
	if o != nil && !isNil(o.CertificateIssuerCompanyName) {
		return true
	}

	return false
}

// SetCertificateIssuerCompanyName gets a reference to the given string and assigns it to the CertificateIssuerCompanyName field.
func (o *Monitor) SetCertificateIssuerCompanyName(v string) {
	o.CertificateIssuerCompanyName = &v
}

// GetCertificateIssuerOrganizationalUnit returns the CertificateIssuerOrganizationalUnit field value if set, zero value otherwise.
func (o *Monitor) GetCertificateIssuerOrganizationalUnit() string {
	if o == nil || isNil(o.CertificateIssuerOrganizationalUnit) {
		var ret string
		return ret
	}
	return *o.CertificateIssuerOrganizationalUnit
}

// GetCertificateIssuerOrganizationalUnitOk returns a tuple with the CertificateIssuerOrganizationalUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetCertificateIssuerOrganizationalUnitOk() (*string, bool) {
	if o == nil || isNil(o.CertificateIssuerOrganizationalUnit) {
    return nil, false
	}
	return o.CertificateIssuerOrganizationalUnit, true
}

// HasCertificateIssuerOrganizationalUnit returns a boolean if a field has been set.
func (o *Monitor) HasCertificateIssuerOrganizationalUnit() bool {
	if o != nil && !isNil(o.CertificateIssuerOrganizationalUnit) {
		return true
	}

	return false
}

// SetCertificateIssuerOrganizationalUnit gets a reference to the given string and assigns it to the CertificateIssuerOrganizationalUnit field.
func (o *Monitor) SetCertificateIssuerOrganizationalUnit(v string) {
	o.CertificateIssuerOrganizationalUnit = &v
}

// GetCertificateExpirationWarningDays returns the CertificateExpirationWarningDays field value if set, zero value otherwise.
func (o *Monitor) GetCertificateExpirationWarningDays() int32 {
	if o == nil || isNil(o.CertificateExpirationWarningDays) {
		var ret int32
		return ret
	}
	return *o.CertificateExpirationWarningDays
}

// GetCertificateExpirationWarningDaysOk returns a tuple with the CertificateExpirationWarningDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetCertificateExpirationWarningDaysOk() (*int32, bool) {
	if o == nil || isNil(o.CertificateExpirationWarningDays) {
    return nil, false
	}
	return o.CertificateExpirationWarningDays, true
}

// HasCertificateExpirationWarningDays returns a boolean if a field has been set.
func (o *Monitor) HasCertificateExpirationWarningDays() bool {
	if o != nil && !isNil(o.CertificateExpirationWarningDays) {
		return true
	}

	return false
}

// SetCertificateExpirationWarningDays gets a reference to the given int32 and assigns it to the CertificateExpirationWarningDays field.
func (o *Monitor) SetCertificateExpirationWarningDays(v int32) {
	o.CertificateExpirationWarningDays = &v
}

// GetCheckCertificateErrors returns the CheckCertificateErrors field value if set, zero value otherwise.
func (o *Monitor) GetCheckCertificateErrors() bool {
	if o == nil || isNil(o.CheckCertificateErrors) {
		var ret bool
		return ret
	}
	return *o.CheckCertificateErrors
}

// GetCheckCertificateErrorsOk returns a tuple with the CheckCertificateErrors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetCheckCertificateErrorsOk() (*bool, bool) {
	if o == nil || isNil(o.CheckCertificateErrors) {
    return nil, false
	}
	return o.CheckCertificateErrors, true
}

// HasCheckCertificateErrors returns a boolean if a field has been set.
func (o *Monitor) HasCheckCertificateErrors() bool {
	if o != nil && !isNil(o.CheckCertificateErrors) {
		return true
	}

	return false
}

// SetCheckCertificateErrors gets a reference to the given bool and assigns it to the CheckCertificateErrors field.
func (o *Monitor) SetCheckCertificateErrors(v bool) {
	o.CheckCertificateErrors = &v
}

// GetAlertOnMaximumBytes returns the AlertOnMaximumBytes field value if set, zero value otherwise.
func (o *Monitor) GetAlertOnMaximumBytes() bool {
	if o == nil || isNil(o.AlertOnMaximumBytes) {
		var ret bool
		return ret
	}
	return *o.AlertOnMaximumBytes
}

// GetAlertOnMaximumBytesOk returns a tuple with the AlertOnMaximumBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetAlertOnMaximumBytesOk() (*bool, bool) {
	if o == nil || isNil(o.AlertOnMaximumBytes) {
    return nil, false
	}
	return o.AlertOnMaximumBytes, true
}

// HasAlertOnMaximumBytes returns a boolean if a field has been set.
func (o *Monitor) HasAlertOnMaximumBytes() bool {
	if o != nil && !isNil(o.AlertOnMaximumBytes) {
		return true
	}

	return false
}

// SetAlertOnMaximumBytes gets a reference to the given bool and assigns it to the AlertOnMaximumBytes field.
func (o *Monitor) SetAlertOnMaximumBytes(v bool) {
	o.AlertOnMaximumBytes = &v
}

// GetMaximumBytes returns the MaximumBytes field value if set, zero value otherwise.
func (o *Monitor) GetMaximumBytes() int32 {
	if o == nil || isNil(o.MaximumBytes) {
		var ret int32
		return ret
	}
	return *o.MaximumBytes
}

// GetMaximumBytesOk returns a tuple with the MaximumBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetMaximumBytesOk() (*int32, bool) {
	if o == nil || isNil(o.MaximumBytes) {
    return nil, false
	}
	return o.MaximumBytes, true
}

// HasMaximumBytes returns a boolean if a field has been set.
func (o *Monitor) HasMaximumBytes() bool {
	if o != nil && !isNil(o.MaximumBytes) {
		return true
	}

	return false
}

// SetMaximumBytes gets a reference to the given int32 and assigns it to the MaximumBytes field.
func (o *Monitor) SetMaximumBytes(v int32) {
	o.MaximumBytes = &v
}

// GetAlertOnMaximumSize returns the AlertOnMaximumSize field value if set, zero value otherwise.
func (o *Monitor) GetAlertOnMaximumSize() bool {
	if o == nil || isNil(o.AlertOnMaximumSize) {
		var ret bool
		return ret
	}
	return *o.AlertOnMaximumSize
}

// GetAlertOnMaximumSizeOk returns a tuple with the AlertOnMaximumSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetAlertOnMaximumSizeOk() (*bool, bool) {
	if o == nil || isNil(o.AlertOnMaximumSize) {
    return nil, false
	}
	return o.AlertOnMaximumSize, true
}

// HasAlertOnMaximumSize returns a boolean if a field has been set.
func (o *Monitor) HasAlertOnMaximumSize() bool {
	if o != nil && !isNil(o.AlertOnMaximumSize) {
		return true
	}

	return false
}

// SetAlertOnMaximumSize gets a reference to the given bool and assigns it to the AlertOnMaximumSize field.
func (o *Monitor) SetAlertOnMaximumSize(v bool) {
	o.AlertOnMaximumSize = &v
}

// GetElementMaximumSize returns the ElementMaximumSize field value if set, zero value otherwise.
func (o *Monitor) GetElementMaximumSize() int32 {
	if o == nil || isNil(o.ElementMaximumSize) {
		var ret int32
		return ret
	}
	return *o.ElementMaximumSize
}

// GetElementMaximumSizeOk returns a tuple with the ElementMaximumSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetElementMaximumSizeOk() (*int32, bool) {
	if o == nil || isNil(o.ElementMaximumSize) {
    return nil, false
	}
	return o.ElementMaximumSize, true
}

// HasElementMaximumSize returns a boolean if a field has been set.
func (o *Monitor) HasElementMaximumSize() bool {
	if o != nil && !isNil(o.ElementMaximumSize) {
		return true
	}

	return false
}

// SetElementMaximumSize gets a reference to the given int32 and assigns it to the ElementMaximumSize field.
func (o *Monitor) SetElementMaximumSize(v int32) {
	o.ElementMaximumSize = &v
}

// GetIgnoreExternalElements returns the IgnoreExternalElements field value if set, zero value otherwise.
func (o *Monitor) GetIgnoreExternalElements() bool {
	if o == nil || isNil(o.IgnoreExternalElements) {
		var ret bool
		return ret
	}
	return *o.IgnoreExternalElements
}

// GetIgnoreExternalElementsOk returns a tuple with the IgnoreExternalElements field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetIgnoreExternalElementsOk() (*bool, bool) {
	if o == nil || isNil(o.IgnoreExternalElements) {
    return nil, false
	}
	return o.IgnoreExternalElements, true
}

// HasIgnoreExternalElements returns a boolean if a field has been set.
func (o *Monitor) HasIgnoreExternalElements() bool {
	if o != nil && !isNil(o.IgnoreExternalElements) {
		return true
	}

	return false
}

// SetIgnoreExternalElements gets a reference to the given bool and assigns it to the IgnoreExternalElements field.
func (o *Monitor) SetIgnoreExternalElements(v bool) {
	o.IgnoreExternalElements = &v
}

// GetAlertOnPercentageFail returns the AlertOnPercentageFail field value if set, zero value otherwise.
func (o *Monitor) GetAlertOnPercentageFail() bool {
	if o == nil || isNil(o.AlertOnPercentageFail) {
		var ret bool
		return ret
	}
	return *o.AlertOnPercentageFail
}

// GetAlertOnPercentageFailOk returns a tuple with the AlertOnPercentageFail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetAlertOnPercentageFailOk() (*bool, bool) {
	if o == nil || isNil(o.AlertOnPercentageFail) {
    return nil, false
	}
	return o.AlertOnPercentageFail, true
}

// HasAlertOnPercentageFail returns a boolean if a field has been set.
func (o *Monitor) HasAlertOnPercentageFail() bool {
	if o != nil && !isNil(o.AlertOnPercentageFail) {
		return true
	}

	return false
}

// SetAlertOnPercentageFail gets a reference to the given bool and assigns it to the AlertOnPercentageFail field.
func (o *Monitor) SetAlertOnPercentageFail(v bool) {
	o.AlertOnPercentageFail = &v
}

// GetFailedObjectPercentage returns the FailedObjectPercentage field value if set, zero value otherwise.
func (o *Monitor) GetFailedObjectPercentage() int32 {
	if o == nil || isNil(o.FailedObjectPercentage) {
		var ret int32
		return ret
	}
	return *o.FailedObjectPercentage
}

// GetFailedObjectPercentageOk returns a tuple with the FailedObjectPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetFailedObjectPercentageOk() (*int32, bool) {
	if o == nil || isNil(o.FailedObjectPercentage) {
    return nil, false
	}
	return o.FailedObjectPercentage, true
}

// HasFailedObjectPercentage returns a boolean if a field has been set.
func (o *Monitor) HasFailedObjectPercentage() bool {
	if o != nil && !isNil(o.FailedObjectPercentage) {
		return true
	}

	return false
}

// SetFailedObjectPercentage gets a reference to the given int32 and assigns it to the FailedObjectPercentage field.
func (o *Monitor) SetFailedObjectPercentage(v int32) {
	o.FailedObjectPercentage = &v
}

// GetDomainGroupGuid returns the DomainGroupGuid field value if set, zero value otherwise.
func (o *Monitor) GetDomainGroupGuid() string {
	if o == nil || isNil(o.DomainGroupGuid) {
		var ret string
		return ret
	}
	return *o.DomainGroupGuid
}

// GetDomainGroupGuidOk returns a tuple with the DomainGroupGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetDomainGroupGuidOk() (*string, bool) {
	if o == nil || isNil(o.DomainGroupGuid) {
    return nil, false
	}
	return o.DomainGroupGuid, true
}

// HasDomainGroupGuid returns a boolean if a field has been set.
func (o *Monitor) HasDomainGroupGuid() bool {
	if o != nil && !isNil(o.DomainGroupGuid) {
		return true
	}

	return false
}

// SetDomainGroupGuid gets a reference to the given string and assigns it to the DomainGroupGuid field.
func (o *Monitor) SetDomainGroupGuid(v string) {
	o.DomainGroupGuid = &v
}

// GetDomainGroupGuidSpecified returns the DomainGroupGuidSpecified field value if set, zero value otherwise.
func (o *Monitor) GetDomainGroupGuidSpecified() bool {
	if o == nil || isNil(o.DomainGroupGuidSpecified) {
		var ret bool
		return ret
	}
	return *o.DomainGroupGuidSpecified
}

// GetDomainGroupGuidSpecifiedOk returns a tuple with the DomainGroupGuidSpecified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetDomainGroupGuidSpecifiedOk() (*bool, bool) {
	if o == nil || isNil(o.DomainGroupGuidSpecified) {
    return nil, false
	}
	return o.DomainGroupGuidSpecified, true
}

// HasDomainGroupGuidSpecified returns a boolean if a field has been set.
func (o *Monitor) HasDomainGroupGuidSpecified() bool {
	if o != nil && !isNil(o.DomainGroupGuidSpecified) {
		return true
	}

	return false
}

// SetDomainGroupGuidSpecified gets a reference to the given bool and assigns it to the DomainGroupGuidSpecified field.
func (o *Monitor) SetDomainGroupGuidSpecified(v bool) {
	o.DomainGroupGuidSpecified = &v
}

// GetDnsServer returns the DnsServer field value if set, zero value otherwise.
func (o *Monitor) GetDnsServer() string {
	if o == nil || isNil(o.DnsServer) {
		var ret string
		return ret
	}
	return *o.DnsServer
}

// GetDnsServerOk returns a tuple with the DnsServer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetDnsServerOk() (*string, bool) {
	if o == nil || isNil(o.DnsServer) {
    return nil, false
	}
	return o.DnsServer, true
}

// HasDnsServer returns a boolean if a field has been set.
func (o *Monitor) HasDnsServer() bool {
	if o != nil && !isNil(o.DnsServer) {
		return true
	}

	return false
}

// SetDnsServer gets a reference to the given string and assigns it to the DnsServer field.
func (o *Monitor) SetDnsServer(v string) {
	o.DnsServer = &v
}

// GetDnsQuery returns the DnsQuery field value if set, zero value otherwise.
func (o *Monitor) GetDnsQuery() DnsQuery {
	if o == nil || isNil(o.DnsQuery) {
		var ret DnsQuery
		return ret
	}
	return *o.DnsQuery
}

// GetDnsQueryOk returns a tuple with the DnsQuery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetDnsQueryOk() (*DnsQuery, bool) {
	if o == nil || isNil(o.DnsQuery) {
    return nil, false
	}
	return o.DnsQuery, true
}

// HasDnsQuery returns a boolean if a field has been set.
func (o *Monitor) HasDnsQuery() bool {
	if o != nil && !isNil(o.DnsQuery) {
		return true
	}

	return false
}

// SetDnsQuery gets a reference to the given DnsQuery and assigns it to the DnsQuery field.
func (o *Monitor) SetDnsQuery(v DnsQuery) {
	o.DnsQuery = &v
}

// GetDnsExpectedResult returns the DnsExpectedResult field value if set, zero value otherwise.
func (o *Monitor) GetDnsExpectedResult() string {
	if o == nil || isNil(o.DnsExpectedResult) {
		var ret string
		return ret
	}
	return *o.DnsExpectedResult
}

// GetDnsExpectedResultOk returns a tuple with the DnsExpectedResult field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetDnsExpectedResultOk() (*string, bool) {
	if o == nil || isNil(o.DnsExpectedResult) {
    return nil, false
	}
	return o.DnsExpectedResult, true
}

// HasDnsExpectedResult returns a boolean if a field has been set.
func (o *Monitor) HasDnsExpectedResult() bool {
	if o != nil && !isNil(o.DnsExpectedResult) {
		return true
	}

	return false
}

// SetDnsExpectedResult gets a reference to the given string and assigns it to the DnsExpectedResult field.
func (o *Monitor) SetDnsExpectedResult(v string) {
	o.DnsExpectedResult = &v
}

// GetDnsTestValue returns the DnsTestValue field value if set, zero value otherwise.
func (o *Monitor) GetDnsTestValue() string {
	if o == nil || isNil(o.DnsTestValue) {
		var ret string
		return ret
	}
	return *o.DnsTestValue
}

// GetDnsTestValueOk returns a tuple with the DnsTestValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetDnsTestValueOk() (*string, bool) {
	if o == nil || isNil(o.DnsTestValue) {
    return nil, false
	}
	return o.DnsTestValue, true
}

// HasDnsTestValue returns a boolean if a field has been set.
func (o *Monitor) HasDnsTestValue() bool {
	if o != nil && !isNil(o.DnsTestValue) {
		return true
	}

	return false
}

// SetDnsTestValue gets a reference to the given string and assigns it to the DnsTestValue field.
func (o *Monitor) SetDnsTestValue(v string) {
	o.DnsTestValue = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *Monitor) GetPort() int32 {
	if o == nil || isNil(o.Port) {
		var ret int32
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetPortOk() (*int32, bool) {
	if o == nil || isNil(o.Port) {
    return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *Monitor) HasPort() bool {
	if o != nil && !isNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given int32 and assigns it to the Port field.
func (o *Monitor) SetPort(v int32) {
	o.Port = &v
}

// GetIpVersion returns the IpVersion field value if set, zero value otherwise.
func (o *Monitor) GetIpVersion() IpVersion {
	if o == nil || isNil(o.IpVersion) {
		var ret IpVersion
		return ret
	}
	return *o.IpVersion
}

// GetIpVersionOk returns a tuple with the IpVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetIpVersionOk() (*IpVersion, bool) {
	if o == nil || isNil(o.IpVersion) {
    return nil, false
	}
	return o.IpVersion, true
}

// HasIpVersion returns a boolean if a field has been set.
func (o *Monitor) HasIpVersion() bool {
	if o != nil && !isNil(o.IpVersion) {
		return true
	}

	return false
}

// SetIpVersion gets a reference to the given IpVersion and assigns it to the IpVersion field.
func (o *Monitor) SetIpVersion(v IpVersion) {
	o.IpVersion = &v
}

// GetAlertOnMinimumBytes returns the AlertOnMinimumBytes field value if set, zero value otherwise.
func (o *Monitor) GetAlertOnMinimumBytes() bool {
	if o == nil || isNil(o.AlertOnMinimumBytes) {
		var ret bool
		return ret
	}
	return *o.AlertOnMinimumBytes
}

// GetAlertOnMinimumBytesOk returns a tuple with the AlertOnMinimumBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetAlertOnMinimumBytesOk() (*bool, bool) {
	if o == nil || isNil(o.AlertOnMinimumBytes) {
    return nil, false
	}
	return o.AlertOnMinimumBytes, true
}

// HasAlertOnMinimumBytes returns a boolean if a field has been set.
func (o *Monitor) HasAlertOnMinimumBytes() bool {
	if o != nil && !isNil(o.AlertOnMinimumBytes) {
		return true
	}

	return false
}

// SetAlertOnMinimumBytes gets a reference to the given bool and assigns it to the AlertOnMinimumBytes field.
func (o *Monitor) SetAlertOnMinimumBytes(v bool) {
	o.AlertOnMinimumBytes = &v
}

// GetMinimumBytes returns the MinimumBytes field value if set, zero value otherwise.
func (o *Monitor) GetMinimumBytes() int32 {
	if o == nil || isNil(o.MinimumBytes) {
		var ret int32
		return ret
	}
	return *o.MinimumBytes
}

// GetMinimumBytesOk returns a tuple with the MinimumBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetMinimumBytesOk() (*int32, bool) {
	if o == nil || isNil(o.MinimumBytes) {
    return nil, false
	}
	return o.MinimumBytes, true
}

// HasMinimumBytes returns a boolean if a field has been set.
func (o *Monitor) HasMinimumBytes() bool {
	if o != nil && !isNil(o.MinimumBytes) {
		return true
	}

	return false
}

// SetMinimumBytes gets a reference to the given int32 and assigns it to the MinimumBytes field.
func (o *Monitor) SetMinimumBytes(v int32) {
	o.MinimumBytes = &v
}

// GetDatabaseName returns the DatabaseName field value if set, zero value otherwise.
func (o *Monitor) GetDatabaseName() string {
	if o == nil || isNil(o.DatabaseName) {
		var ret string
		return ret
	}
	return *o.DatabaseName
}

// GetDatabaseNameOk returns a tuple with the DatabaseName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetDatabaseNameOk() (*string, bool) {
	if o == nil || isNil(o.DatabaseName) {
    return nil, false
	}
	return o.DatabaseName, true
}

// HasDatabaseName returns a boolean if a field has been set.
func (o *Monitor) HasDatabaseName() bool {
	if o != nil && !isNil(o.DatabaseName) {
		return true
	}

	return false
}

// SetDatabaseName gets a reference to the given string and assigns it to the DatabaseName field.
func (o *Monitor) SetDatabaseName(v string) {
	o.DatabaseName = &v
}

// GetNetworkAddress returns the NetworkAddress field value if set, zero value otherwise.
func (o *Monitor) GetNetworkAddress() string {
	if o == nil || isNil(o.NetworkAddress) {
		var ret string
		return ret
	}
	return *o.NetworkAddress
}

// GetNetworkAddressOk returns a tuple with the NetworkAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetNetworkAddressOk() (*string, bool) {
	if o == nil || isNil(o.NetworkAddress) {
    return nil, false
	}
	return o.NetworkAddress, true
}

// HasNetworkAddress returns a boolean if a field has been set.
func (o *Monitor) HasNetworkAddress() bool {
	if o != nil && !isNil(o.NetworkAddress) {
		return true
	}

	return false
}

// SetNetworkAddress gets a reference to the given string and assigns it to the NetworkAddress field.
func (o *Monitor) SetNetworkAddress(v string) {
	o.NetworkAddress = &v
}

// GetImapSecureConnection returns the ImapSecureConnection field value if set, zero value otherwise.
func (o *Monitor) GetImapSecureConnection() bool {
	if o == nil || isNil(o.ImapSecureConnection) {
		var ret bool
		return ret
	}
	return *o.ImapSecureConnection
}

// GetImapSecureConnectionOk returns a tuple with the ImapSecureConnection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetImapSecureConnectionOk() (*bool, bool) {
	if o == nil || isNil(o.ImapSecureConnection) {
    return nil, false
	}
	return o.ImapSecureConnection, true
}

// HasImapSecureConnection returns a boolean if a field has been set.
func (o *Monitor) HasImapSecureConnection() bool {
	if o != nil && !isNil(o.ImapSecureConnection) {
		return true
	}

	return false
}

// SetImapSecureConnection gets a reference to the given bool and assigns it to the ImapSecureConnection field.
func (o *Monitor) SetImapSecureConnection(v bool) {
	o.ImapSecureConnection = &v
}

// GetSftpAction returns the SftpAction field value if set, zero value otherwise.
func (o *Monitor) GetSftpAction() SftpAction {
	if o == nil || isNil(o.SftpAction) {
		var ret SftpAction
		return ret
	}
	return *o.SftpAction
}

// GetSftpActionOk returns a tuple with the SftpAction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetSftpActionOk() (*SftpAction, bool) {
	if o == nil || isNil(o.SftpAction) {
    return nil, false
	}
	return o.SftpAction, true
}

// HasSftpAction returns a boolean if a field has been set.
func (o *Monitor) HasSftpAction() bool {
	if o != nil && !isNil(o.SftpAction) {
		return true
	}

	return false
}

// SetSftpAction gets a reference to the given SftpAction and assigns it to the SftpAction field.
func (o *Monitor) SetSftpAction(v SftpAction) {
	o.SftpAction = &v
}

// GetSftpActionPath returns the SftpActionPath field value if set, zero value otherwise.
func (o *Monitor) GetSftpActionPath() string {
	if o == nil || isNil(o.SftpActionPath) {
		var ret string
		return ret
	}
	return *o.SftpActionPath
}

// GetSftpActionPathOk returns a tuple with the SftpActionPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetSftpActionPathOk() (*string, bool) {
	if o == nil || isNil(o.SftpActionPath) {
    return nil, false
	}
	return o.SftpActionPath, true
}

// HasSftpActionPath returns a boolean if a field has been set.
func (o *Monitor) HasSftpActionPath() bool {
	if o != nil && !isNil(o.SftpActionPath) {
		return true
	}

	return false
}

// SetSftpActionPath gets a reference to the given string and assigns it to the SftpActionPath field.
func (o *Monitor) SetSftpActionPath(v string) {
	o.SftpActionPath = &v
}

// GetHttpMethod returns the HttpMethod field value if set, zero value otherwise.
func (o *Monitor) GetHttpMethod() HttpMethod {
	if o == nil || isNil(o.HttpMethod) {
		var ret HttpMethod
		return ret
	}
	return *o.HttpMethod
}

// GetHttpMethodOk returns a tuple with the HttpMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetHttpMethodOk() (*HttpMethod, bool) {
	if o == nil || isNil(o.HttpMethod) {
    return nil, false
	}
	return o.HttpMethod, true
}

// HasHttpMethod returns a boolean if a field has been set.
func (o *Monitor) HasHttpMethod() bool {
	if o != nil && !isNil(o.HttpMethod) {
		return true
	}

	return false
}

// SetHttpMethod gets a reference to the given HttpMethod and assigns it to the HttpMethod field.
func (o *Monitor) SetHttpMethod(v HttpMethod) {
	o.HttpMethod = &v
}

// GetExpectedHttpStatusCode returns the ExpectedHttpStatusCode field value if set, zero value otherwise.
func (o *Monitor) GetExpectedHttpStatusCode() int32 {
	if o == nil || isNil(o.ExpectedHttpStatusCode) {
		var ret int32
		return ret
	}
	return *o.ExpectedHttpStatusCode
}

// GetExpectedHttpStatusCodeOk returns a tuple with the ExpectedHttpStatusCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetExpectedHttpStatusCodeOk() (*int32, bool) {
	if o == nil || isNil(o.ExpectedHttpStatusCode) {
    return nil, false
	}
	return o.ExpectedHttpStatusCode, true
}

// HasExpectedHttpStatusCode returns a boolean if a field has been set.
func (o *Monitor) HasExpectedHttpStatusCode() bool {
	if o != nil && !isNil(o.ExpectedHttpStatusCode) {
		return true
	}

	return false
}

// SetExpectedHttpStatusCode gets a reference to the given int32 and assigns it to the ExpectedHttpStatusCode field.
func (o *Monitor) SetExpectedHttpStatusCode(v int32) {
	o.ExpectedHttpStatusCode = &v
}

// GetExpectedHttpStatusCodeSpecified returns the ExpectedHttpStatusCodeSpecified field value if set, zero value otherwise.
func (o *Monitor) GetExpectedHttpStatusCodeSpecified() bool {
	if o == nil || isNil(o.ExpectedHttpStatusCodeSpecified) {
		var ret bool
		return ret
	}
	return *o.ExpectedHttpStatusCodeSpecified
}

// GetExpectedHttpStatusCodeSpecifiedOk returns a tuple with the ExpectedHttpStatusCodeSpecified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetExpectedHttpStatusCodeSpecifiedOk() (*bool, bool) {
	if o == nil || isNil(o.ExpectedHttpStatusCodeSpecified) {
    return nil, false
	}
	return o.ExpectedHttpStatusCodeSpecified, true
}

// HasExpectedHttpStatusCodeSpecified returns a boolean if a field has been set.
func (o *Monitor) HasExpectedHttpStatusCodeSpecified() bool {
	if o != nil && !isNil(o.ExpectedHttpStatusCodeSpecified) {
		return true
	}

	return false
}

// SetExpectedHttpStatusCodeSpecified gets a reference to the given bool and assigns it to the ExpectedHttpStatusCodeSpecified field.
func (o *Monitor) SetExpectedHttpStatusCodeSpecified(v bool) {
	o.ExpectedHttpStatusCodeSpecified = &v
}

// GetTlsVersion returns the TlsVersion field value if set, zero value otherwise.
func (o *Monitor) GetTlsVersion() TlsVersion {
	if o == nil || isNil(o.TlsVersion) {
		var ret TlsVersion
		return ret
	}
	return *o.TlsVersion
}

// GetTlsVersionOk returns a tuple with the TlsVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetTlsVersionOk() (*TlsVersion, bool) {
	if o == nil || isNil(o.TlsVersion) {
    return nil, false
	}
	return o.TlsVersion, true
}

// HasTlsVersion returns a boolean if a field has been set.
func (o *Monitor) HasTlsVersion() bool {
	if o != nil && !isNil(o.TlsVersion) {
		return true
	}

	return false
}

// SetTlsVersion gets a reference to the given TlsVersion and assigns it to the TlsVersion field.
func (o *Monitor) SetTlsVersion(v TlsVersion) {
	o.TlsVersion = &v
}

// GetRequestBody returns the RequestBody field value if set, zero value otherwise.
func (o *Monitor) GetRequestBody() string {
	if o == nil || isNil(o.RequestBody) {
		var ret string
		return ret
	}
	return *o.RequestBody
}

// GetRequestBodyOk returns a tuple with the RequestBody field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetRequestBodyOk() (*string, bool) {
	if o == nil || isNil(o.RequestBody) {
    return nil, false
	}
	return o.RequestBody, true
}

// HasRequestBody returns a boolean if a field has been set.
func (o *Monitor) HasRequestBody() bool {
	if o != nil && !isNil(o.RequestBody) {
		return true
	}

	return false
}

// SetRequestBody gets a reference to the given string and assigns it to the RequestBody field.
func (o *Monitor) SetRequestBody(v string) {
	o.RequestBody = &v
}

// GetMatchPatterns returns the MatchPatterns field value if set, zero value otherwise.
func (o *Monitor) GetMatchPatterns() []PatternMatch {
	if o == nil || isNil(o.MatchPatterns) {
		var ret []PatternMatch
		return ret
	}
	return o.MatchPatterns
}

// GetMatchPatternsOk returns a tuple with the MatchPatterns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetMatchPatternsOk() ([]PatternMatch, bool) {
	if o == nil || isNil(o.MatchPatterns) {
    return nil, false
	}
	return o.MatchPatterns, true
}

// HasMatchPatterns returns a boolean if a field has been set.
func (o *Monitor) HasMatchPatterns() bool {
	if o != nil && !isNil(o.MatchPatterns) {
		return true
	}

	return false
}

// SetMatchPatterns gets a reference to the given []PatternMatch and assigns it to the MatchPatterns field.
func (o *Monitor) SetMatchPatterns(v []PatternMatch) {
	o.MatchPatterns = v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *Monitor) GetUrl() string {
	if o == nil || isNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetUrlOk() (*string, bool) {
	if o == nil || isNil(o.Url) {
    return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *Monitor) HasUrl() bool {
	if o != nil && !isNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *Monitor) SetUrl(v string) {
	o.Url = &v
}

// GetBrowserType returns the BrowserType field value if set, zero value otherwise.
func (o *Monitor) GetBrowserType() BrowserType {
	if o == nil || isNil(o.BrowserType) {
		var ret BrowserType
		return ret
	}
	return *o.BrowserType
}

// GetBrowserTypeOk returns a tuple with the BrowserType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetBrowserTypeOk() (*BrowserType, bool) {
	if o == nil || isNil(o.BrowserType) {
    return nil, false
	}
	return o.BrowserType, true
}

// HasBrowserType returns a boolean if a field has been set.
func (o *Monitor) HasBrowserType() bool {
	if o != nil && !isNil(o.BrowserType) {
		return true
	}

	return false
}

// SetBrowserType gets a reference to the given BrowserType and assigns it to the BrowserType field.
func (o *Monitor) SetBrowserType(v BrowserType) {
	o.BrowserType = &v
}

// GetBrowserWindowDimensions returns the BrowserWindowDimensions field value if set, zero value otherwise.
func (o *Monitor) GetBrowserWindowDimensions() BrowserWindowDimensions {
	if o == nil || isNil(o.BrowserWindowDimensions) {
		var ret BrowserWindowDimensions
		return ret
	}
	return *o.BrowserWindowDimensions
}

// GetBrowserWindowDimensionsOk returns a tuple with the BrowserWindowDimensions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetBrowserWindowDimensionsOk() (*BrowserWindowDimensions, bool) {
	if o == nil || isNil(o.BrowserWindowDimensions) {
    return nil, false
	}
	return o.BrowserWindowDimensions, true
}

// HasBrowserWindowDimensions returns a boolean if a field has been set.
func (o *Monitor) HasBrowserWindowDimensions() bool {
	if o != nil && !isNil(o.BrowserWindowDimensions) {
		return true
	}

	return false
}

// SetBrowserWindowDimensions gets a reference to the given BrowserWindowDimensions and assigns it to the BrowserWindowDimensions field.
func (o *Monitor) SetBrowserWindowDimensions(v BrowserWindowDimensions) {
	o.BrowserWindowDimensions = &v
}

// GetUseConcurrentMonitoring returns the UseConcurrentMonitoring field value if set, zero value otherwise.
func (o *Monitor) GetUseConcurrentMonitoring() bool {
	if o == nil || isNil(o.UseConcurrentMonitoring) {
		var ret bool
		return ret
	}
	return *o.UseConcurrentMonitoring
}

// GetUseConcurrentMonitoringOk returns a tuple with the UseConcurrentMonitoring field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetUseConcurrentMonitoringOk() (*bool, bool) {
	if o == nil || isNil(o.UseConcurrentMonitoring) {
    return nil, false
	}
	return o.UseConcurrentMonitoring, true
}

// HasUseConcurrentMonitoring returns a boolean if a field has been set.
func (o *Monitor) HasUseConcurrentMonitoring() bool {
	if o != nil && !isNil(o.UseConcurrentMonitoring) {
		return true
	}

	return false
}

// SetUseConcurrentMonitoring gets a reference to the given bool and assigns it to the UseConcurrentMonitoring field.
func (o *Monitor) SetUseConcurrentMonitoring(v bool) {
	o.UseConcurrentMonitoring = &v
}

// GetConcurrentUnconfirmedErrorThreshold returns the ConcurrentUnconfirmedErrorThreshold field value if set, zero value otherwise.
func (o *Monitor) GetConcurrentUnconfirmedErrorThreshold() int32 {
	if o == nil || isNil(o.ConcurrentUnconfirmedErrorThreshold) {
		var ret int32
		return ret
	}
	return *o.ConcurrentUnconfirmedErrorThreshold
}

// GetConcurrentUnconfirmedErrorThresholdOk returns a tuple with the ConcurrentUnconfirmedErrorThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetConcurrentUnconfirmedErrorThresholdOk() (*int32, bool) {
	if o == nil || isNil(o.ConcurrentUnconfirmedErrorThreshold) {
    return nil, false
	}
	return o.ConcurrentUnconfirmedErrorThreshold, true
}

// HasConcurrentUnconfirmedErrorThreshold returns a boolean if a field has been set.
func (o *Monitor) HasConcurrentUnconfirmedErrorThreshold() bool {
	if o != nil && !isNil(o.ConcurrentUnconfirmedErrorThreshold) {
		return true
	}

	return false
}

// SetConcurrentUnconfirmedErrorThreshold gets a reference to the given int32 and assigns it to the ConcurrentUnconfirmedErrorThreshold field.
func (o *Monitor) SetConcurrentUnconfirmedErrorThreshold(v int32) {
	o.ConcurrentUnconfirmedErrorThreshold = &v
}

// GetConcurrentConfirmedErrorThreshold returns the ConcurrentConfirmedErrorThreshold field value if set, zero value otherwise.
func (o *Monitor) GetConcurrentConfirmedErrorThreshold() int32 {
	if o == nil || isNil(o.ConcurrentConfirmedErrorThreshold) {
		var ret int32
		return ret
	}
	return *o.ConcurrentConfirmedErrorThreshold
}

// GetConcurrentConfirmedErrorThresholdOk returns a tuple with the ConcurrentConfirmedErrorThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetConcurrentConfirmedErrorThresholdOk() (*int32, bool) {
	if o == nil || isNil(o.ConcurrentConfirmedErrorThreshold) {
    return nil, false
	}
	return o.ConcurrentConfirmedErrorThreshold, true
}

// HasConcurrentConfirmedErrorThreshold returns a boolean if a field has been set.
func (o *Monitor) HasConcurrentConfirmedErrorThreshold() bool {
	if o != nil && !isNil(o.ConcurrentConfirmedErrorThreshold) {
		return true
	}

	return false
}

// SetConcurrentConfirmedErrorThreshold gets a reference to the given int32 and assigns it to the ConcurrentConfirmedErrorThreshold field.
func (o *Monitor) SetConcurrentConfirmedErrorThreshold(v int32) {
	o.ConcurrentConfirmedErrorThreshold = &v
}

// GetErrorConditions returns the ErrorConditions field value if set, zero value otherwise.
func (o *Monitor) GetErrorConditions() []ErrorCondition {
	if o == nil || isNil(o.ErrorConditions) {
		var ret []ErrorCondition
		return ret
	}
	return o.ErrorConditions
}

// GetErrorConditionsOk returns a tuple with the ErrorConditions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Monitor) GetErrorConditionsOk() ([]ErrorCondition, bool) {
	if o == nil || isNil(o.ErrorConditions) {
    return nil, false
	}
	return o.ErrorConditions, true
}

// HasErrorConditions returns a boolean if a field has been set.
func (o *Monitor) HasErrorConditions() bool {
	if o != nil && !isNil(o.ErrorConditions) {
		return true
	}

	return false
}

// SetErrorConditions gets a reference to the given []ErrorCondition and assigns it to the ErrorConditions field.
func (o *Monitor) SetErrorConditions(v []ErrorCondition) {
	o.ErrorConditions = v
}

func (o Monitor) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Name) {
		toSerialize["Name"] = o.Name
	}
	if !isNil(o.IsActive) {
		toSerialize["IsActive"] = o.IsActive
	}
	if !isNil(o.MonitorGuid) {
		toSerialize["MonitorGuid"] = o.MonitorGuid
	}
	if !isNil(o.Hash) {
		toSerialize["Hash"] = o.Hash
	}
	if !isNil(o.GenerateAlert) {
		toSerialize["GenerateAlert"] = o.GenerateAlert
	}
	if !isNil(o.IsLocked) {
		toSerialize["IsLocked"] = o.IsLocked
	}
	if !isNil(o.CheckInterval) {
		toSerialize["CheckInterval"] = o.CheckInterval
	}
	if !isNil(o.Credits) {
		toSerialize["Credits"] = o.Credits
	}
	if !isNil(o.MonitorMode) {
		toSerialize["MonitorMode"] = o.MonitorMode
	}
	if !isNil(o.PredefinedVariables) {
		toSerialize["PredefinedVariables"] = o.PredefinedVariables
	}
	if !isNil(o.MsaSteps) {
		toSerialize["MsaSteps"] = o.MsaSteps
	}
	if !isNil(o.UserDefinedFunctions) {
		toSerialize["UserDefinedFunctions"] = o.UserDefinedFunctions
	}
	if !isNil(o.CustomMetrics) {
		toSerialize["CustomMetrics"] = o.CustomMetrics
	}
	if !isNil(o.CustomFields) {
		toSerialize["CustomFields"] = o.CustomFields
	}
	if !isNil(o.SelectedCheckpoints) {
		toSerialize["SelectedCheckpoints"] = o.SelectedCheckpoints
	}
	if !isNil(o.UsePrimaryCheckpointsOnly) {
		toSerialize["UsePrimaryCheckpointsOnly"] = o.UsePrimaryCheckpointsOnly
	}
	if !isNil(o.SelfServiceTransactionScript) {
		toSerialize["SelfServiceTransactionScript"] = o.SelfServiceTransactionScript
	}
	if !isNil(o.MonitorType) {
		toSerialize["MonitorType"] = o.MonitorType
	}
	if !isNil(o.Notes) {
		toSerialize["Notes"] = o.Notes
	}
	if !isNil(o.AlertOnLoadTimeLimit1) {
		toSerialize["AlertOnLoadTimeLimit1"] = o.AlertOnLoadTimeLimit1
	}
	if !isNil(o.MultiStepApiTransactionScript) {
		toSerialize["MultiStepApiTransactionScript"] = o.MultiStepApiTransactionScript
	}
	if !isNil(o.LoadTimeLimit1) {
		toSerialize["LoadTimeLimit1"] = o.LoadTimeLimit1
	}
	if !isNil(o.AlertOnLoadTimeLimit2) {
		toSerialize["AlertOnLoadTimeLimit2"] = o.AlertOnLoadTimeLimit2
	}
	if !isNil(o.LoadTimeLimit2) {
		toSerialize["LoadTimeLimit2"] = o.LoadTimeLimit2
	}
	if !isNil(o.BlockGoogleAnalytics) {
		toSerialize["BlockGoogleAnalytics"] = o.BlockGoogleAnalytics
	}
	if !isNil(o.BlockUptrendsRum) {
		toSerialize["BlockUptrendsRum"] = o.BlockUptrendsRum
	}
	if !isNil(o.BlockUrls) {
		toSerialize["BlockUrls"] = o.BlockUrls
	}
	if !isNil(o.RequestHeaders) {
		toSerialize["RequestHeaders"] = o.RequestHeaders
	}
	if !isNil(o.UserAgent) {
		toSerialize["UserAgent"] = o.UserAgent
	}
	if !isNil(o.Username) {
		toSerialize["Username"] = o.Username
	}
	if !isNil(o.Password) {
		toSerialize["Password"] = o.Password
	}
	if !isNil(o.NameForPhoneAlerts) {
		toSerialize["NameForPhoneAlerts"] = o.NameForPhoneAlerts
	}
	if !isNil(o.AuthenticationType) {
		toSerialize["AuthenticationType"] = o.AuthenticationType
	}
	if !isNil(o.ThrottlingOptions) {
		toSerialize["ThrottlingOptions"] = o.ThrottlingOptions
	}
	if !isNil(o.DnsBypasses) {
		toSerialize["DnsBypasses"] = o.DnsBypasses
	}
	if !isNil(o.TransactionStepDefinition) {
		toSerialize["TransactionStepDefinition"] = o.TransactionStepDefinition
	}
	if !isNil(o.CertificateName) {
		toSerialize["CertificateName"] = o.CertificateName
	}
	if !isNil(o.CertificateOrganization) {
		toSerialize["CertificateOrganization"] = o.CertificateOrganization
	}
	if !isNil(o.CertificateOrganizationalUnit) {
		toSerialize["CertificateOrganizationalUnit"] = o.CertificateOrganizationalUnit
	}
	if !isNil(o.CertificateSerialNumber) {
		toSerialize["CertificateSerialNumber"] = o.CertificateSerialNumber
	}
	if !isNil(o.CertificateFingerprint) {
		toSerialize["CertificateFingerprint"] = o.CertificateFingerprint
	}
	if !isNil(o.CertificateIssuerName) {
		toSerialize["CertificateIssuerName"] = o.CertificateIssuerName
	}
	if !isNil(o.CertificateIssuerCompanyName) {
		toSerialize["CertificateIssuerCompanyName"] = o.CertificateIssuerCompanyName
	}
	if !isNil(o.CertificateIssuerOrganizationalUnit) {
		toSerialize["CertificateIssuerOrganizationalUnit"] = o.CertificateIssuerOrganizationalUnit
	}
	if !isNil(o.CertificateExpirationWarningDays) {
		toSerialize["CertificateExpirationWarningDays"] = o.CertificateExpirationWarningDays
	}
	if !isNil(o.CheckCertificateErrors) {
		toSerialize["CheckCertificateErrors"] = o.CheckCertificateErrors
	}
	if !isNil(o.AlertOnMaximumBytes) {
		toSerialize["AlertOnMaximumBytes"] = o.AlertOnMaximumBytes
	}
	if !isNil(o.MaximumBytes) {
		toSerialize["MaximumBytes"] = o.MaximumBytes
	}
	if !isNil(o.AlertOnMaximumSize) {
		toSerialize["AlertOnMaximumSize"] = o.AlertOnMaximumSize
	}
	if !isNil(o.ElementMaximumSize) {
		toSerialize["ElementMaximumSize"] = o.ElementMaximumSize
	}
	if !isNil(o.IgnoreExternalElements) {
		toSerialize["IgnoreExternalElements"] = o.IgnoreExternalElements
	}
	if !isNil(o.AlertOnPercentageFail) {
		toSerialize["AlertOnPercentageFail"] = o.AlertOnPercentageFail
	}
	if !isNil(o.FailedObjectPercentage) {
		toSerialize["FailedObjectPercentage"] = o.FailedObjectPercentage
	}
	if !isNil(o.DomainGroupGuid) {
		toSerialize["DomainGroupGuid"] = o.DomainGroupGuid
	}
	if !isNil(o.DomainGroupGuidSpecified) {
		toSerialize["DomainGroupGuidSpecified"] = o.DomainGroupGuidSpecified
	}
	if !isNil(o.DnsServer) {
		toSerialize["DnsServer"] = o.DnsServer
	}
	if !isNil(o.DnsQuery) {
		toSerialize["DnsQuery"] = o.DnsQuery
	}
	if !isNil(o.DnsExpectedResult) {
		toSerialize["DnsExpectedResult"] = o.DnsExpectedResult
	}
	if !isNil(o.DnsTestValue) {
		toSerialize["DnsTestValue"] = o.DnsTestValue
	}
	if !isNil(o.Port) {
		toSerialize["Port"] = o.Port
	}
	if !isNil(o.IpVersion) {
		toSerialize["IpVersion"] = o.IpVersion
	}
	if !isNil(o.AlertOnMinimumBytes) {
		toSerialize["AlertOnMinimumBytes"] = o.AlertOnMinimumBytes
	}
	if !isNil(o.MinimumBytes) {
		toSerialize["MinimumBytes"] = o.MinimumBytes
	}
	if !isNil(o.DatabaseName) {
		toSerialize["DatabaseName"] = o.DatabaseName
	}
	if !isNil(o.NetworkAddress) {
		toSerialize["NetworkAddress"] = o.NetworkAddress
	}
	if !isNil(o.ImapSecureConnection) {
		toSerialize["ImapSecureConnection"] = o.ImapSecureConnection
	}
	if !isNil(o.SftpAction) {
		toSerialize["SftpAction"] = o.SftpAction
	}
	if !isNil(o.SftpActionPath) {
		toSerialize["SftpActionPath"] = o.SftpActionPath
	}
	if !isNil(o.HttpMethod) {
		toSerialize["HttpMethod"] = o.HttpMethod
	}
	if !isNil(o.ExpectedHttpStatusCode) {
		toSerialize["ExpectedHttpStatusCode"] = o.ExpectedHttpStatusCode
	}
	if !isNil(o.ExpectedHttpStatusCodeSpecified) {
		toSerialize["ExpectedHttpStatusCodeSpecified"] = o.ExpectedHttpStatusCodeSpecified
	}
	if !isNil(o.TlsVersion) {
		toSerialize["TlsVersion"] = o.TlsVersion
	}
	if !isNil(o.RequestBody) {
		toSerialize["RequestBody"] = o.RequestBody
	}
	if !isNil(o.MatchPatterns) {
		toSerialize["MatchPatterns"] = o.MatchPatterns
	}
	if !isNil(o.Url) {
		toSerialize["Url"] = o.Url
	}
	if !isNil(o.BrowserType) {
		toSerialize["BrowserType"] = o.BrowserType
	}
	if !isNil(o.BrowserWindowDimensions) {
		toSerialize["BrowserWindowDimensions"] = o.BrowserWindowDimensions
	}
	if !isNil(o.UseConcurrentMonitoring) {
		toSerialize["UseConcurrentMonitoring"] = o.UseConcurrentMonitoring
	}
	if !isNil(o.ConcurrentUnconfirmedErrorThreshold) {
		toSerialize["ConcurrentUnconfirmedErrorThreshold"] = o.ConcurrentUnconfirmedErrorThreshold
	}
	if !isNil(o.ConcurrentConfirmedErrorThreshold) {
		toSerialize["ConcurrentConfirmedErrorThreshold"] = o.ConcurrentConfirmedErrorThreshold
	}
	if !isNil(o.ErrorConditions) {
		toSerialize["ErrorConditions"] = o.ErrorConditions
	}
	return json.Marshal(toSerialize)
}

type NullableMonitor struct {
	value *Monitor
	isSet bool
}

func (v NullableMonitor) Get() *Monitor {
	return v.value
}

func (v *NullableMonitor) Set(val *Monitor) {
	v.value = val
	v.isSet = true
}

func (v NullableMonitor) IsSet() bool {
	return v.isSet
}

func (v *NullableMonitor) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMonitor(val *Monitor) *NullableMonitor {
	return &NullableMonitor{value: val, isSet: true}
}

func (v NullableMonitor) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMonitor) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


