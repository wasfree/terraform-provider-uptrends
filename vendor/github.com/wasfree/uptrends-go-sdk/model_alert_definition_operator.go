/*
Uptrends API v4

This document describes Uptrends API version 4. This Swagger environment also lets you execute API methods directly.  Please note that this is not a sandbox environment: these API methods operate directly on your actual Uptrends account.  For more information, please visit https://www.uptrends.com/api.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package uptrends

import (
	"encoding/json"
)

// AlertDefinitionOperator struct for AlertDefinitionOperator
type AlertDefinitionOperator struct {
	AlertDefinition string `json:"AlertDefinition"`
	Escalationlevel int32 `json:"Escalationlevel"`
	Operator string `json:"Operator"`
}

// NewAlertDefinitionOperator instantiates a new AlertDefinitionOperator object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlertDefinitionOperator(alertDefinition string, escalationlevel int32, operator string) *AlertDefinitionOperator {
	this := AlertDefinitionOperator{}
	this.AlertDefinition = alertDefinition
	this.Escalationlevel = escalationlevel
	this.Operator = operator
	return &this
}

// NewAlertDefinitionOperatorWithDefaults instantiates a new AlertDefinitionOperator object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlertDefinitionOperatorWithDefaults() *AlertDefinitionOperator {
	this := AlertDefinitionOperator{}
	return &this
}

// GetAlertDefinition returns the AlertDefinition field value
func (o *AlertDefinitionOperator) GetAlertDefinition() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AlertDefinition
}

// GetAlertDefinitionOk returns a tuple with the AlertDefinition field value
// and a boolean to check if the value has been set.
func (o *AlertDefinitionOperator) GetAlertDefinitionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AlertDefinition, true
}

// SetAlertDefinition sets field value
func (o *AlertDefinitionOperator) SetAlertDefinition(v string) {
	o.AlertDefinition = v
}

// GetEscalationlevel returns the Escalationlevel field value
func (o *AlertDefinitionOperator) GetEscalationlevel() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Escalationlevel
}

// GetEscalationlevelOk returns a tuple with the Escalationlevel field value
// and a boolean to check if the value has been set.
func (o *AlertDefinitionOperator) GetEscalationlevelOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Escalationlevel, true
}

// SetEscalationlevel sets field value
func (o *AlertDefinitionOperator) SetEscalationlevel(v int32) {
	o.Escalationlevel = v
}

// GetOperator returns the Operator field value
func (o *AlertDefinitionOperator) GetOperator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Operator
}

// GetOperatorOk returns a tuple with the Operator field value
// and a boolean to check if the value has been set.
func (o *AlertDefinitionOperator) GetOperatorOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Operator, true
}

// SetOperator sets field value
func (o *AlertDefinitionOperator) SetOperator(v string) {
	o.Operator = v
}

func (o AlertDefinitionOperator) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["AlertDefinition"] = o.AlertDefinition
	}
	if true {
		toSerialize["Escalationlevel"] = o.Escalationlevel
	}
	if true {
		toSerialize["Operator"] = o.Operator
	}
	return json.Marshal(toSerialize)
}

type NullableAlertDefinitionOperator struct {
	value *AlertDefinitionOperator
	isSet bool
}

func (v NullableAlertDefinitionOperator) Get() *AlertDefinitionOperator {
	return v.value
}

func (v *NullableAlertDefinitionOperator) Set(val *AlertDefinitionOperator) {
	v.value = val
	v.isSet = true
}

func (v NullableAlertDefinitionOperator) IsSet() bool {
	return v.isSet
}

func (v *NullableAlertDefinitionOperator) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlertDefinitionOperator(val *AlertDefinitionOperator) *NullableAlertDefinitionOperator {
	return &NullableAlertDefinitionOperator{value: val, isSet: true}
}

func (v NullableAlertDefinitionOperator) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlertDefinitionOperator) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


