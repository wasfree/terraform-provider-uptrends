/*
Uptrends API v4

This document describes Uptrends API version 4. This Swagger environment also lets you execute API methods directly.  Please note that this is not a sandbox environment: these API methods operate directly on your actual Uptrends account.  For more information, please visit https://www.uptrends.com/api.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package uptrends

import (
	"encoding/json"
)

// TransactionStepOResourceObjectAttributes Object attributes 
type TransactionStepOResourceObjectAttributes struct {
	// Step (index) number
	StepNumber int32 `json:"StepNumber"`
	// The name of the step
	StepName *string `json:"StepName,omitempty"`
	// Number of milliseconds it took for this step to succeed
	TotalTime float64 `json:"TotalTime"`
	// Text representation of the step element results
	Elements []string `json:"Elements,omitempty"`
	// Did this step result in an error?
	HasError bool `json:"HasError"`
}

// NewTransactionStepOResourceObjectAttributes instantiates a new TransactionStepOResourceObjectAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransactionStepOResourceObjectAttributes(stepNumber int32, totalTime float64, hasError bool) *TransactionStepOResourceObjectAttributes {
	this := TransactionStepOResourceObjectAttributes{}
	this.StepNumber = stepNumber
	this.TotalTime = totalTime
	this.HasError = hasError
	return &this
}

// NewTransactionStepOResourceObjectAttributesWithDefaults instantiates a new TransactionStepOResourceObjectAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransactionStepOResourceObjectAttributesWithDefaults() *TransactionStepOResourceObjectAttributes {
	this := TransactionStepOResourceObjectAttributes{}
	return &this
}

// GetStepNumber returns the StepNumber field value
func (o *TransactionStepOResourceObjectAttributes) GetStepNumber() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.StepNumber
}

// GetStepNumberOk returns a tuple with the StepNumber field value
// and a boolean to check if the value has been set.
func (o *TransactionStepOResourceObjectAttributes) GetStepNumberOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.StepNumber, true
}

// SetStepNumber sets field value
func (o *TransactionStepOResourceObjectAttributes) SetStepNumber(v int32) {
	o.StepNumber = v
}

// GetStepName returns the StepName field value if set, zero value otherwise.
func (o *TransactionStepOResourceObjectAttributes) GetStepName() string {
	if o == nil || isNil(o.StepName) {
		var ret string
		return ret
	}
	return *o.StepName
}

// GetStepNameOk returns a tuple with the StepName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionStepOResourceObjectAttributes) GetStepNameOk() (*string, bool) {
	if o == nil || isNil(o.StepName) {
    return nil, false
	}
	return o.StepName, true
}

// HasStepName returns a boolean if a field has been set.
func (o *TransactionStepOResourceObjectAttributes) HasStepName() bool {
	if o != nil && !isNil(o.StepName) {
		return true
	}

	return false
}

// SetStepName gets a reference to the given string and assigns it to the StepName field.
func (o *TransactionStepOResourceObjectAttributes) SetStepName(v string) {
	o.StepName = &v
}

// GetTotalTime returns the TotalTime field value
func (o *TransactionStepOResourceObjectAttributes) GetTotalTime() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.TotalTime
}

// GetTotalTimeOk returns a tuple with the TotalTime field value
// and a boolean to check if the value has been set.
func (o *TransactionStepOResourceObjectAttributes) GetTotalTimeOk() (*float64, bool) {
	if o == nil {
    return nil, false
	}
	return &o.TotalTime, true
}

// SetTotalTime sets field value
func (o *TransactionStepOResourceObjectAttributes) SetTotalTime(v float64) {
	o.TotalTime = v
}

// GetElements returns the Elements field value if set, zero value otherwise.
func (o *TransactionStepOResourceObjectAttributes) GetElements() []string {
	if o == nil || isNil(o.Elements) {
		var ret []string
		return ret
	}
	return o.Elements
}

// GetElementsOk returns a tuple with the Elements field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransactionStepOResourceObjectAttributes) GetElementsOk() ([]string, bool) {
	if o == nil || isNil(o.Elements) {
    return nil, false
	}
	return o.Elements, true
}

// HasElements returns a boolean if a field has been set.
func (o *TransactionStepOResourceObjectAttributes) HasElements() bool {
	if o != nil && !isNil(o.Elements) {
		return true
	}

	return false
}

// SetElements gets a reference to the given []string and assigns it to the Elements field.
func (o *TransactionStepOResourceObjectAttributes) SetElements(v []string) {
	o.Elements = v
}

// GetHasError returns the HasError field value
func (o *TransactionStepOResourceObjectAttributes) GetHasError() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HasError
}

// GetHasErrorOk returns a tuple with the HasError field value
// and a boolean to check if the value has been set.
func (o *TransactionStepOResourceObjectAttributes) GetHasErrorOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return &o.HasError, true
}

// SetHasError sets field value
func (o *TransactionStepOResourceObjectAttributes) SetHasError(v bool) {
	o.HasError = v
}

func (o TransactionStepOResourceObjectAttributes) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["StepNumber"] = o.StepNumber
	}
	if !isNil(o.StepName) {
		toSerialize["StepName"] = o.StepName
	}
	if true {
		toSerialize["TotalTime"] = o.TotalTime
	}
	if !isNil(o.Elements) {
		toSerialize["Elements"] = o.Elements
	}
	if true {
		toSerialize["HasError"] = o.HasError
	}
	return json.Marshal(toSerialize)
}

type NullableTransactionStepOResourceObjectAttributes struct {
	value *TransactionStepOResourceObjectAttributes
	isSet bool
}

func (v NullableTransactionStepOResourceObjectAttributes) Get() *TransactionStepOResourceObjectAttributes {
	return v.value
}

func (v *NullableTransactionStepOResourceObjectAttributes) Set(val *TransactionStepOResourceObjectAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableTransactionStepOResourceObjectAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableTransactionStepOResourceObjectAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransactionStepOResourceObjectAttributes(val *TransactionStepOResourceObjectAttributes) *NullableTransactionStepOResourceObjectAttributes {
	return &NullableTransactionStepOResourceObjectAttributes{value: val, isSet: true}
}

func (v NullableTransactionStepOResourceObjectAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransactionStepOResourceObjectAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


