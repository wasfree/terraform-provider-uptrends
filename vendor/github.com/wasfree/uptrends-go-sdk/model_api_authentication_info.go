/*
Uptrends API v4

This document describes Uptrends API version 4. This Swagger environment also lets you execute API methods directly.  Please note that this is not a sandbox environment: these API methods operate directly on your actual Uptrends account.  For more information, please visit https://www.uptrends.com/api.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package uptrends

import (
	"encoding/json"
)

// ApiAuthenticationInfo struct for ApiAuthenticationInfo
type ApiAuthenticationInfo struct {
	Id string `json:"Id"`
	AuthenticationType ApiHttpAuthenticationType `json:"AuthenticationType"`
	UserName *string `json:"UserName,omitempty"`
	Password *string `json:"Password,omitempty"`
	PasswordSpecified bool `json:"PasswordSpecified"`
}

// NewApiAuthenticationInfo instantiates a new ApiAuthenticationInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiAuthenticationInfo(id string, authenticationType ApiHttpAuthenticationType, passwordSpecified bool) *ApiAuthenticationInfo {
	this := ApiAuthenticationInfo{}
	this.Id = id
	this.AuthenticationType = authenticationType
	this.PasswordSpecified = passwordSpecified
	return &this
}

// NewApiAuthenticationInfoWithDefaults instantiates a new ApiAuthenticationInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiAuthenticationInfoWithDefaults() *ApiAuthenticationInfo {
	this := ApiAuthenticationInfo{}
	return &this
}

// GetId returns the Id field value
func (o *ApiAuthenticationInfo) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ApiAuthenticationInfo) GetIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ApiAuthenticationInfo) SetId(v string) {
	o.Id = v
}

// GetAuthenticationType returns the AuthenticationType field value
func (o *ApiAuthenticationInfo) GetAuthenticationType() ApiHttpAuthenticationType {
	if o == nil {
		var ret ApiHttpAuthenticationType
		return ret
	}

	return o.AuthenticationType
}

// GetAuthenticationTypeOk returns a tuple with the AuthenticationType field value
// and a boolean to check if the value has been set.
func (o *ApiAuthenticationInfo) GetAuthenticationTypeOk() (*ApiHttpAuthenticationType, bool) {
	if o == nil {
    return nil, false
	}
	return &o.AuthenticationType, true
}

// SetAuthenticationType sets field value
func (o *ApiAuthenticationInfo) SetAuthenticationType(v ApiHttpAuthenticationType) {
	o.AuthenticationType = v
}

// GetUserName returns the UserName field value if set, zero value otherwise.
func (o *ApiAuthenticationInfo) GetUserName() string {
	if o == nil || isNil(o.UserName) {
		var ret string
		return ret
	}
	return *o.UserName
}

// GetUserNameOk returns a tuple with the UserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiAuthenticationInfo) GetUserNameOk() (*string, bool) {
	if o == nil || isNil(o.UserName) {
    return nil, false
	}
	return o.UserName, true
}

// HasUserName returns a boolean if a field has been set.
func (o *ApiAuthenticationInfo) HasUserName() bool {
	if o != nil && !isNil(o.UserName) {
		return true
	}

	return false
}

// SetUserName gets a reference to the given string and assigns it to the UserName field.
func (o *ApiAuthenticationInfo) SetUserName(v string) {
	o.UserName = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *ApiAuthenticationInfo) GetPassword() string {
	if o == nil || isNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiAuthenticationInfo) GetPasswordOk() (*string, bool) {
	if o == nil || isNil(o.Password) {
    return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *ApiAuthenticationInfo) HasPassword() bool {
	if o != nil && !isNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *ApiAuthenticationInfo) SetPassword(v string) {
	o.Password = &v
}

// GetPasswordSpecified returns the PasswordSpecified field value
func (o *ApiAuthenticationInfo) GetPasswordSpecified() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.PasswordSpecified
}

// GetPasswordSpecifiedOk returns a tuple with the PasswordSpecified field value
// and a boolean to check if the value has been set.
func (o *ApiAuthenticationInfo) GetPasswordSpecifiedOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return &o.PasswordSpecified, true
}

// SetPasswordSpecified sets field value
func (o *ApiAuthenticationInfo) SetPasswordSpecified(v bool) {
	o.PasswordSpecified = v
}

func (o ApiAuthenticationInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["Id"] = o.Id
	}
	if true {
		toSerialize["AuthenticationType"] = o.AuthenticationType
	}
	if !isNil(o.UserName) {
		toSerialize["UserName"] = o.UserName
	}
	if !isNil(o.Password) {
		toSerialize["Password"] = o.Password
	}
	if true {
		toSerialize["PasswordSpecified"] = o.PasswordSpecified
	}
	return json.Marshal(toSerialize)
}

type NullableApiAuthenticationInfo struct {
	value *ApiAuthenticationInfo
	isSet bool
}

func (v NullableApiAuthenticationInfo) Get() *ApiAuthenticationInfo {
	return v.value
}

func (v *NullableApiAuthenticationInfo) Set(val *ApiAuthenticationInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableApiAuthenticationInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableApiAuthenticationInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiAuthenticationInfo(val *ApiAuthenticationInfo) *NullableApiAuthenticationInfo {
	return &NullableApiAuthenticationInfo{value: val, isSet: true}
}

func (v NullableApiAuthenticationInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiAuthenticationInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


