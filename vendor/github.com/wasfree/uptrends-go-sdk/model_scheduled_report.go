/*
Uptrends API v4

This document describes Uptrends API version 4. This Swagger environment also lets you execute API methods directly.  Please note that this is not a sandbox environment: these API methods operate directly on your actual Uptrends account.  For more information, please visit https://www.uptrends.com/api.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package uptrends

import (
	"encoding/json"
)

// ScheduledReport struct for ScheduledReport
type ScheduledReport struct {
	ScheduledReportGuid *string `json:"ScheduledReportGuid,omitempty"`
	Hash *string `json:"Hash,omitempty"`
	DashboardGuid *string `json:"DashboardGuid,omitempty"`
	DashboardGuidSpecified *bool `json:"DashboardGuidSpecified,omitempty"`
	FileType *ScheduledReportFileType `json:"FileType,omitempty"`
	IsActive *bool `json:"IsActive,omitempty"`
	Schedule *Schedule `json:"Schedule,omitempty"`
	SelectedPeriod *PresetPeriodTypeWithExclusive `json:"SelectedPeriod,omitempty"`
	InternalNotes *string `json:"InternalNotes,omitempty"`
	Notes *string `json:"Notes,omitempty"`
	Recipients *Recipients `json:"Recipients,omitempty"`
}

// NewScheduledReport instantiates a new ScheduledReport object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScheduledReport() *ScheduledReport {
	this := ScheduledReport{}
	return &this
}

// NewScheduledReportWithDefaults instantiates a new ScheduledReport object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScheduledReportWithDefaults() *ScheduledReport {
	this := ScheduledReport{}
	return &this
}

// GetScheduledReportGuid returns the ScheduledReportGuid field value if set, zero value otherwise.
func (o *ScheduledReport) GetScheduledReportGuid() string {
	if o == nil || isNil(o.ScheduledReportGuid) {
		var ret string
		return ret
	}
	return *o.ScheduledReportGuid
}

// GetScheduledReportGuidOk returns a tuple with the ScheduledReportGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduledReport) GetScheduledReportGuidOk() (*string, bool) {
	if o == nil || isNil(o.ScheduledReportGuid) {
    return nil, false
	}
	return o.ScheduledReportGuid, true
}

// HasScheduledReportGuid returns a boolean if a field has been set.
func (o *ScheduledReport) HasScheduledReportGuid() bool {
	if o != nil && !isNil(o.ScheduledReportGuid) {
		return true
	}

	return false
}

// SetScheduledReportGuid gets a reference to the given string and assigns it to the ScheduledReportGuid field.
func (o *ScheduledReport) SetScheduledReportGuid(v string) {
	o.ScheduledReportGuid = &v
}

// GetHash returns the Hash field value if set, zero value otherwise.
func (o *ScheduledReport) GetHash() string {
	if o == nil || isNil(o.Hash) {
		var ret string
		return ret
	}
	return *o.Hash
}

// GetHashOk returns a tuple with the Hash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduledReport) GetHashOk() (*string, bool) {
	if o == nil || isNil(o.Hash) {
    return nil, false
	}
	return o.Hash, true
}

// HasHash returns a boolean if a field has been set.
func (o *ScheduledReport) HasHash() bool {
	if o != nil && !isNil(o.Hash) {
		return true
	}

	return false
}

// SetHash gets a reference to the given string and assigns it to the Hash field.
func (o *ScheduledReport) SetHash(v string) {
	o.Hash = &v
}

// GetDashboardGuid returns the DashboardGuid field value if set, zero value otherwise.
func (o *ScheduledReport) GetDashboardGuid() string {
	if o == nil || isNil(o.DashboardGuid) {
		var ret string
		return ret
	}
	return *o.DashboardGuid
}

// GetDashboardGuidOk returns a tuple with the DashboardGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduledReport) GetDashboardGuidOk() (*string, bool) {
	if o == nil || isNil(o.DashboardGuid) {
    return nil, false
	}
	return o.DashboardGuid, true
}

// HasDashboardGuid returns a boolean if a field has been set.
func (o *ScheduledReport) HasDashboardGuid() bool {
	if o != nil && !isNil(o.DashboardGuid) {
		return true
	}

	return false
}

// SetDashboardGuid gets a reference to the given string and assigns it to the DashboardGuid field.
func (o *ScheduledReport) SetDashboardGuid(v string) {
	o.DashboardGuid = &v
}

// GetDashboardGuidSpecified returns the DashboardGuidSpecified field value if set, zero value otherwise.
func (o *ScheduledReport) GetDashboardGuidSpecified() bool {
	if o == nil || isNil(o.DashboardGuidSpecified) {
		var ret bool
		return ret
	}
	return *o.DashboardGuidSpecified
}

// GetDashboardGuidSpecifiedOk returns a tuple with the DashboardGuidSpecified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduledReport) GetDashboardGuidSpecifiedOk() (*bool, bool) {
	if o == nil || isNil(o.DashboardGuidSpecified) {
    return nil, false
	}
	return o.DashboardGuidSpecified, true
}

// HasDashboardGuidSpecified returns a boolean if a field has been set.
func (o *ScheduledReport) HasDashboardGuidSpecified() bool {
	if o != nil && !isNil(o.DashboardGuidSpecified) {
		return true
	}

	return false
}

// SetDashboardGuidSpecified gets a reference to the given bool and assigns it to the DashboardGuidSpecified field.
func (o *ScheduledReport) SetDashboardGuidSpecified(v bool) {
	o.DashboardGuidSpecified = &v
}

// GetFileType returns the FileType field value if set, zero value otherwise.
func (o *ScheduledReport) GetFileType() ScheduledReportFileType {
	if o == nil || isNil(o.FileType) {
		var ret ScheduledReportFileType
		return ret
	}
	return *o.FileType
}

// GetFileTypeOk returns a tuple with the FileType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduledReport) GetFileTypeOk() (*ScheduledReportFileType, bool) {
	if o == nil || isNil(o.FileType) {
    return nil, false
	}
	return o.FileType, true
}

// HasFileType returns a boolean if a field has been set.
func (o *ScheduledReport) HasFileType() bool {
	if o != nil && !isNil(o.FileType) {
		return true
	}

	return false
}

// SetFileType gets a reference to the given ScheduledReportFileType and assigns it to the FileType field.
func (o *ScheduledReport) SetFileType(v ScheduledReportFileType) {
	o.FileType = &v
}

// GetIsActive returns the IsActive field value if set, zero value otherwise.
func (o *ScheduledReport) GetIsActive() bool {
	if o == nil || isNil(o.IsActive) {
		var ret bool
		return ret
	}
	return *o.IsActive
}

// GetIsActiveOk returns a tuple with the IsActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduledReport) GetIsActiveOk() (*bool, bool) {
	if o == nil || isNil(o.IsActive) {
    return nil, false
	}
	return o.IsActive, true
}

// HasIsActive returns a boolean if a field has been set.
func (o *ScheduledReport) HasIsActive() bool {
	if o != nil && !isNil(o.IsActive) {
		return true
	}

	return false
}

// SetIsActive gets a reference to the given bool and assigns it to the IsActive field.
func (o *ScheduledReport) SetIsActive(v bool) {
	o.IsActive = &v
}

// GetSchedule returns the Schedule field value if set, zero value otherwise.
func (o *ScheduledReport) GetSchedule() Schedule {
	if o == nil || isNil(o.Schedule) {
		var ret Schedule
		return ret
	}
	return *o.Schedule
}

// GetScheduleOk returns a tuple with the Schedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduledReport) GetScheduleOk() (*Schedule, bool) {
	if o == nil || isNil(o.Schedule) {
    return nil, false
	}
	return o.Schedule, true
}

// HasSchedule returns a boolean if a field has been set.
func (o *ScheduledReport) HasSchedule() bool {
	if o != nil && !isNil(o.Schedule) {
		return true
	}

	return false
}

// SetSchedule gets a reference to the given Schedule and assigns it to the Schedule field.
func (o *ScheduledReport) SetSchedule(v Schedule) {
	o.Schedule = &v
}

// GetSelectedPeriod returns the SelectedPeriod field value if set, zero value otherwise.
func (o *ScheduledReport) GetSelectedPeriod() PresetPeriodTypeWithExclusive {
	if o == nil || isNil(o.SelectedPeriod) {
		var ret PresetPeriodTypeWithExclusive
		return ret
	}
	return *o.SelectedPeriod
}

// GetSelectedPeriodOk returns a tuple with the SelectedPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduledReport) GetSelectedPeriodOk() (*PresetPeriodTypeWithExclusive, bool) {
	if o == nil || isNil(o.SelectedPeriod) {
    return nil, false
	}
	return o.SelectedPeriod, true
}

// HasSelectedPeriod returns a boolean if a field has been set.
func (o *ScheduledReport) HasSelectedPeriod() bool {
	if o != nil && !isNil(o.SelectedPeriod) {
		return true
	}

	return false
}

// SetSelectedPeriod gets a reference to the given PresetPeriodTypeWithExclusive and assigns it to the SelectedPeriod field.
func (o *ScheduledReport) SetSelectedPeriod(v PresetPeriodTypeWithExclusive) {
	o.SelectedPeriod = &v
}

// GetInternalNotes returns the InternalNotes field value if set, zero value otherwise.
func (o *ScheduledReport) GetInternalNotes() string {
	if o == nil || isNil(o.InternalNotes) {
		var ret string
		return ret
	}
	return *o.InternalNotes
}

// GetInternalNotesOk returns a tuple with the InternalNotes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduledReport) GetInternalNotesOk() (*string, bool) {
	if o == nil || isNil(o.InternalNotes) {
    return nil, false
	}
	return o.InternalNotes, true
}

// HasInternalNotes returns a boolean if a field has been set.
func (o *ScheduledReport) HasInternalNotes() bool {
	if o != nil && !isNil(o.InternalNotes) {
		return true
	}

	return false
}

// SetInternalNotes gets a reference to the given string and assigns it to the InternalNotes field.
func (o *ScheduledReport) SetInternalNotes(v string) {
	o.InternalNotes = &v
}

// GetNotes returns the Notes field value if set, zero value otherwise.
func (o *ScheduledReport) GetNotes() string {
	if o == nil || isNil(o.Notes) {
		var ret string
		return ret
	}
	return *o.Notes
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduledReport) GetNotesOk() (*string, bool) {
	if o == nil || isNil(o.Notes) {
    return nil, false
	}
	return o.Notes, true
}

// HasNotes returns a boolean if a field has been set.
func (o *ScheduledReport) HasNotes() bool {
	if o != nil && !isNil(o.Notes) {
		return true
	}

	return false
}

// SetNotes gets a reference to the given string and assigns it to the Notes field.
func (o *ScheduledReport) SetNotes(v string) {
	o.Notes = &v
}

// GetRecipients returns the Recipients field value if set, zero value otherwise.
func (o *ScheduledReport) GetRecipients() Recipients {
	if o == nil || isNil(o.Recipients) {
		var ret Recipients
		return ret
	}
	return *o.Recipients
}

// GetRecipientsOk returns a tuple with the Recipients field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduledReport) GetRecipientsOk() (*Recipients, bool) {
	if o == nil || isNil(o.Recipients) {
    return nil, false
	}
	return o.Recipients, true
}

// HasRecipients returns a boolean if a field has been set.
func (o *ScheduledReport) HasRecipients() bool {
	if o != nil && !isNil(o.Recipients) {
		return true
	}

	return false
}

// SetRecipients gets a reference to the given Recipients and assigns it to the Recipients field.
func (o *ScheduledReport) SetRecipients(v Recipients) {
	o.Recipients = &v
}

func (o ScheduledReport) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ScheduledReportGuid) {
		toSerialize["ScheduledReportGuid"] = o.ScheduledReportGuid
	}
	if !isNil(o.Hash) {
		toSerialize["Hash"] = o.Hash
	}
	if !isNil(o.DashboardGuid) {
		toSerialize["DashboardGuid"] = o.DashboardGuid
	}
	if !isNil(o.DashboardGuidSpecified) {
		toSerialize["DashboardGuidSpecified"] = o.DashboardGuidSpecified
	}
	if !isNil(o.FileType) {
		toSerialize["FileType"] = o.FileType
	}
	if !isNil(o.IsActive) {
		toSerialize["IsActive"] = o.IsActive
	}
	if !isNil(o.Schedule) {
		toSerialize["Schedule"] = o.Schedule
	}
	if !isNil(o.SelectedPeriod) {
		toSerialize["SelectedPeriod"] = o.SelectedPeriod
	}
	if !isNil(o.InternalNotes) {
		toSerialize["InternalNotes"] = o.InternalNotes
	}
	if !isNil(o.Notes) {
		toSerialize["Notes"] = o.Notes
	}
	if !isNil(o.Recipients) {
		toSerialize["Recipients"] = o.Recipients
	}
	return json.Marshal(toSerialize)
}

type NullableScheduledReport struct {
	value *ScheduledReport
	isSet bool
}

func (v NullableScheduledReport) Get() *ScheduledReport {
	return v.value
}

func (v *NullableScheduledReport) Set(val *ScheduledReport) {
	v.value = val
	v.isSet = true
}

func (v NullableScheduledReport) IsSet() bool {
	return v.isSet
}

func (v *NullableScheduledReport) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScheduledReport(val *ScheduledReport) *NullableScheduledReport {
	return &NullableScheduledReport{value: val, isSet: true}
}

func (v NullableScheduledReport) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScheduledReport) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


