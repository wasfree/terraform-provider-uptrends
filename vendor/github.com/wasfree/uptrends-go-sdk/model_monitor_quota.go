/*
Uptrends API v4

This document describes Uptrends API version 4. This Swagger environment also lets you execute API methods directly.  Please note that this is not a sandbox environment: these API methods operate directly on your actual Uptrends account.  For more information, please visit https://www.uptrends.com/api.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package uptrends

import (
	"encoding/json"
)

// MonitorQuota struct for MonitorQuota
type MonitorQuota struct {
	BasicMonitors *int32 `json:"BasicMonitors,omitempty"`
	BasicMonitorsInUse *int32 `json:"BasicMonitorsInUse,omitempty"`
	BrowserMonitors *int32 `json:"BrowserMonitors,omitempty"`
	BrowserMonitorsInUse *int32 `json:"BrowserMonitorsInUse,omitempty"`
	ApiMonitoringCredits *int32 `json:"ApiMonitoringCredits,omitempty"`
	ApiMonitoringCreditsInUse *int32 `json:"ApiMonitoringCreditsInUse,omitempty"`
	TransactionCredits *int32 `json:"TransactionCredits,omitempty"`
	TransactionCreditsInUse *int32 `json:"TransactionCreditsInUse,omitempty"`
	Monitors *int32 `json:"Monitors,omitempty"`
	MonitorsInUse *int32 `json:"MonitorsInUse,omitempty"`
}

// NewMonitorQuota instantiates a new MonitorQuota object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMonitorQuota() *MonitorQuota {
	this := MonitorQuota{}
	return &this
}

// NewMonitorQuotaWithDefaults instantiates a new MonitorQuota object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMonitorQuotaWithDefaults() *MonitorQuota {
	this := MonitorQuota{}
	return &this
}

// GetBasicMonitors returns the BasicMonitors field value if set, zero value otherwise.
func (o *MonitorQuota) GetBasicMonitors() int32 {
	if o == nil || isNil(o.BasicMonitors) {
		var ret int32
		return ret
	}
	return *o.BasicMonitors
}

// GetBasicMonitorsOk returns a tuple with the BasicMonitors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitorQuota) GetBasicMonitorsOk() (*int32, bool) {
	if o == nil || isNil(o.BasicMonitors) {
    return nil, false
	}
	return o.BasicMonitors, true
}

// HasBasicMonitors returns a boolean if a field has been set.
func (o *MonitorQuota) HasBasicMonitors() bool {
	if o != nil && !isNil(o.BasicMonitors) {
		return true
	}

	return false
}

// SetBasicMonitors gets a reference to the given int32 and assigns it to the BasicMonitors field.
func (o *MonitorQuota) SetBasicMonitors(v int32) {
	o.BasicMonitors = &v
}

// GetBasicMonitorsInUse returns the BasicMonitorsInUse field value if set, zero value otherwise.
func (o *MonitorQuota) GetBasicMonitorsInUse() int32 {
	if o == nil || isNil(o.BasicMonitorsInUse) {
		var ret int32
		return ret
	}
	return *o.BasicMonitorsInUse
}

// GetBasicMonitorsInUseOk returns a tuple with the BasicMonitorsInUse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitorQuota) GetBasicMonitorsInUseOk() (*int32, bool) {
	if o == nil || isNil(o.BasicMonitorsInUse) {
    return nil, false
	}
	return o.BasicMonitorsInUse, true
}

// HasBasicMonitorsInUse returns a boolean if a field has been set.
func (o *MonitorQuota) HasBasicMonitorsInUse() bool {
	if o != nil && !isNil(o.BasicMonitorsInUse) {
		return true
	}

	return false
}

// SetBasicMonitorsInUse gets a reference to the given int32 and assigns it to the BasicMonitorsInUse field.
func (o *MonitorQuota) SetBasicMonitorsInUse(v int32) {
	o.BasicMonitorsInUse = &v
}

// GetBrowserMonitors returns the BrowserMonitors field value if set, zero value otherwise.
func (o *MonitorQuota) GetBrowserMonitors() int32 {
	if o == nil || isNil(o.BrowserMonitors) {
		var ret int32
		return ret
	}
	return *o.BrowserMonitors
}

// GetBrowserMonitorsOk returns a tuple with the BrowserMonitors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitorQuota) GetBrowserMonitorsOk() (*int32, bool) {
	if o == nil || isNil(o.BrowserMonitors) {
    return nil, false
	}
	return o.BrowserMonitors, true
}

// HasBrowserMonitors returns a boolean if a field has been set.
func (o *MonitorQuota) HasBrowserMonitors() bool {
	if o != nil && !isNil(o.BrowserMonitors) {
		return true
	}

	return false
}

// SetBrowserMonitors gets a reference to the given int32 and assigns it to the BrowserMonitors field.
func (o *MonitorQuota) SetBrowserMonitors(v int32) {
	o.BrowserMonitors = &v
}

// GetBrowserMonitorsInUse returns the BrowserMonitorsInUse field value if set, zero value otherwise.
func (o *MonitorQuota) GetBrowserMonitorsInUse() int32 {
	if o == nil || isNil(o.BrowserMonitorsInUse) {
		var ret int32
		return ret
	}
	return *o.BrowserMonitorsInUse
}

// GetBrowserMonitorsInUseOk returns a tuple with the BrowserMonitorsInUse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitorQuota) GetBrowserMonitorsInUseOk() (*int32, bool) {
	if o == nil || isNil(o.BrowserMonitorsInUse) {
    return nil, false
	}
	return o.BrowserMonitorsInUse, true
}

// HasBrowserMonitorsInUse returns a boolean if a field has been set.
func (o *MonitorQuota) HasBrowserMonitorsInUse() bool {
	if o != nil && !isNil(o.BrowserMonitorsInUse) {
		return true
	}

	return false
}

// SetBrowserMonitorsInUse gets a reference to the given int32 and assigns it to the BrowserMonitorsInUse field.
func (o *MonitorQuota) SetBrowserMonitorsInUse(v int32) {
	o.BrowserMonitorsInUse = &v
}

// GetApiMonitoringCredits returns the ApiMonitoringCredits field value if set, zero value otherwise.
func (o *MonitorQuota) GetApiMonitoringCredits() int32 {
	if o == nil || isNil(o.ApiMonitoringCredits) {
		var ret int32
		return ret
	}
	return *o.ApiMonitoringCredits
}

// GetApiMonitoringCreditsOk returns a tuple with the ApiMonitoringCredits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitorQuota) GetApiMonitoringCreditsOk() (*int32, bool) {
	if o == nil || isNil(o.ApiMonitoringCredits) {
    return nil, false
	}
	return o.ApiMonitoringCredits, true
}

// HasApiMonitoringCredits returns a boolean if a field has been set.
func (o *MonitorQuota) HasApiMonitoringCredits() bool {
	if o != nil && !isNil(o.ApiMonitoringCredits) {
		return true
	}

	return false
}

// SetApiMonitoringCredits gets a reference to the given int32 and assigns it to the ApiMonitoringCredits field.
func (o *MonitorQuota) SetApiMonitoringCredits(v int32) {
	o.ApiMonitoringCredits = &v
}

// GetApiMonitoringCreditsInUse returns the ApiMonitoringCreditsInUse field value if set, zero value otherwise.
func (o *MonitorQuota) GetApiMonitoringCreditsInUse() int32 {
	if o == nil || isNil(o.ApiMonitoringCreditsInUse) {
		var ret int32
		return ret
	}
	return *o.ApiMonitoringCreditsInUse
}

// GetApiMonitoringCreditsInUseOk returns a tuple with the ApiMonitoringCreditsInUse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitorQuota) GetApiMonitoringCreditsInUseOk() (*int32, bool) {
	if o == nil || isNil(o.ApiMonitoringCreditsInUse) {
    return nil, false
	}
	return o.ApiMonitoringCreditsInUse, true
}

// HasApiMonitoringCreditsInUse returns a boolean if a field has been set.
func (o *MonitorQuota) HasApiMonitoringCreditsInUse() bool {
	if o != nil && !isNil(o.ApiMonitoringCreditsInUse) {
		return true
	}

	return false
}

// SetApiMonitoringCreditsInUse gets a reference to the given int32 and assigns it to the ApiMonitoringCreditsInUse field.
func (o *MonitorQuota) SetApiMonitoringCreditsInUse(v int32) {
	o.ApiMonitoringCreditsInUse = &v
}

// GetTransactionCredits returns the TransactionCredits field value if set, zero value otherwise.
func (o *MonitorQuota) GetTransactionCredits() int32 {
	if o == nil || isNil(o.TransactionCredits) {
		var ret int32
		return ret
	}
	return *o.TransactionCredits
}

// GetTransactionCreditsOk returns a tuple with the TransactionCredits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitorQuota) GetTransactionCreditsOk() (*int32, bool) {
	if o == nil || isNil(o.TransactionCredits) {
    return nil, false
	}
	return o.TransactionCredits, true
}

// HasTransactionCredits returns a boolean if a field has been set.
func (o *MonitorQuota) HasTransactionCredits() bool {
	if o != nil && !isNil(o.TransactionCredits) {
		return true
	}

	return false
}

// SetTransactionCredits gets a reference to the given int32 and assigns it to the TransactionCredits field.
func (o *MonitorQuota) SetTransactionCredits(v int32) {
	o.TransactionCredits = &v
}

// GetTransactionCreditsInUse returns the TransactionCreditsInUse field value if set, zero value otherwise.
func (o *MonitorQuota) GetTransactionCreditsInUse() int32 {
	if o == nil || isNil(o.TransactionCreditsInUse) {
		var ret int32
		return ret
	}
	return *o.TransactionCreditsInUse
}

// GetTransactionCreditsInUseOk returns a tuple with the TransactionCreditsInUse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitorQuota) GetTransactionCreditsInUseOk() (*int32, bool) {
	if o == nil || isNil(o.TransactionCreditsInUse) {
    return nil, false
	}
	return o.TransactionCreditsInUse, true
}

// HasTransactionCreditsInUse returns a boolean if a field has been set.
func (o *MonitorQuota) HasTransactionCreditsInUse() bool {
	if o != nil && !isNil(o.TransactionCreditsInUse) {
		return true
	}

	return false
}

// SetTransactionCreditsInUse gets a reference to the given int32 and assigns it to the TransactionCreditsInUse field.
func (o *MonitorQuota) SetTransactionCreditsInUse(v int32) {
	o.TransactionCreditsInUse = &v
}

// GetMonitors returns the Monitors field value if set, zero value otherwise.
func (o *MonitorQuota) GetMonitors() int32 {
	if o == nil || isNil(o.Monitors) {
		var ret int32
		return ret
	}
	return *o.Monitors
}

// GetMonitorsOk returns a tuple with the Monitors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitorQuota) GetMonitorsOk() (*int32, bool) {
	if o == nil || isNil(o.Monitors) {
    return nil, false
	}
	return o.Monitors, true
}

// HasMonitors returns a boolean if a field has been set.
func (o *MonitorQuota) HasMonitors() bool {
	if o != nil && !isNil(o.Monitors) {
		return true
	}

	return false
}

// SetMonitors gets a reference to the given int32 and assigns it to the Monitors field.
func (o *MonitorQuota) SetMonitors(v int32) {
	o.Monitors = &v
}

// GetMonitorsInUse returns the MonitorsInUse field value if set, zero value otherwise.
func (o *MonitorQuota) GetMonitorsInUse() int32 {
	if o == nil || isNil(o.MonitorsInUse) {
		var ret int32
		return ret
	}
	return *o.MonitorsInUse
}

// GetMonitorsInUseOk returns a tuple with the MonitorsInUse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitorQuota) GetMonitorsInUseOk() (*int32, bool) {
	if o == nil || isNil(o.MonitorsInUse) {
    return nil, false
	}
	return o.MonitorsInUse, true
}

// HasMonitorsInUse returns a boolean if a field has been set.
func (o *MonitorQuota) HasMonitorsInUse() bool {
	if o != nil && !isNil(o.MonitorsInUse) {
		return true
	}

	return false
}

// SetMonitorsInUse gets a reference to the given int32 and assigns it to the MonitorsInUse field.
func (o *MonitorQuota) SetMonitorsInUse(v int32) {
	o.MonitorsInUse = &v
}

func (o MonitorQuota) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.BasicMonitors) {
		toSerialize["BasicMonitors"] = o.BasicMonitors
	}
	if !isNil(o.BasicMonitorsInUse) {
		toSerialize["BasicMonitorsInUse"] = o.BasicMonitorsInUse
	}
	if !isNil(o.BrowserMonitors) {
		toSerialize["BrowserMonitors"] = o.BrowserMonitors
	}
	if !isNil(o.BrowserMonitorsInUse) {
		toSerialize["BrowserMonitorsInUse"] = o.BrowserMonitorsInUse
	}
	if !isNil(o.ApiMonitoringCredits) {
		toSerialize["ApiMonitoringCredits"] = o.ApiMonitoringCredits
	}
	if !isNil(o.ApiMonitoringCreditsInUse) {
		toSerialize["ApiMonitoringCreditsInUse"] = o.ApiMonitoringCreditsInUse
	}
	if !isNil(o.TransactionCredits) {
		toSerialize["TransactionCredits"] = o.TransactionCredits
	}
	if !isNil(o.TransactionCreditsInUse) {
		toSerialize["TransactionCreditsInUse"] = o.TransactionCreditsInUse
	}
	if !isNil(o.Monitors) {
		toSerialize["Monitors"] = o.Monitors
	}
	if !isNil(o.MonitorsInUse) {
		toSerialize["MonitorsInUse"] = o.MonitorsInUse
	}
	return json.Marshal(toSerialize)
}

type NullableMonitorQuota struct {
	value *MonitorQuota
	isSet bool
}

func (v NullableMonitorQuota) Get() *MonitorQuota {
	return v.value
}

func (v *NullableMonitorQuota) Set(val *MonitorQuota) {
	v.value = val
	v.isSet = true
}

func (v NullableMonitorQuota) IsSet() bool {
	return v.isSet
}

func (v *NullableMonitorQuota) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMonitorQuota(val *MonitorQuota) *NullableMonitorQuota {
	return &NullableMonitorQuota{value: val, isSet: true}
}

func (v NullableMonitorQuota) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMonitorQuota) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


