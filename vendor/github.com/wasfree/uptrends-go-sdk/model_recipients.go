/*
 * Uptrends API v4
 *
 * This document describes Uptrends API version 4. This Swagger environment also lets you execute API methods directly.  Please note that this is not a sandbox environment: these API methods operate directly on your actual Uptrends account.  For more information, please visit https://www.uptrends.com/api.
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package uptrends

import (
	"encoding/json"
)

// Recipients struct for Recipients
type Recipients struct {
	Operators *[]string `json:"Operators,omitempty"`
	OperatorGroups *[]string `json:"OperatorGroups,omitempty"`
	ExtraEmailAddresses *[]string `json:"ExtraEmailAddresses,omitempty"`
}

// NewRecipients instantiates a new Recipients object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecipients() *Recipients {
	this := Recipients{}
	return &this
}

// NewRecipientsWithDefaults instantiates a new Recipients object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecipientsWithDefaults() *Recipients {
	this := Recipients{}
	return &this
}

// GetOperators returns the Operators field value if set, zero value otherwise.
func (o *Recipients) GetOperators() []string {
	if o == nil || o.Operators == nil {
		var ret []string
		return ret
	}
	return *o.Operators
}

// GetOperatorsOk returns a tuple with the Operators field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recipients) GetOperatorsOk() (*[]string, bool) {
	if o == nil || o.Operators == nil {
		return nil, false
	}
	return o.Operators, true
}

// HasOperators returns a boolean if a field has been set.
func (o *Recipients) HasOperators() bool {
	if o != nil && o.Operators != nil {
		return true
	}

	return false
}

// SetOperators gets a reference to the given []string and assigns it to the Operators field.
func (o *Recipients) SetOperators(v []string) {
	o.Operators = &v
}

// GetOperatorGroups returns the OperatorGroups field value if set, zero value otherwise.
func (o *Recipients) GetOperatorGroups() []string {
	if o == nil || o.OperatorGroups == nil {
		var ret []string
		return ret
	}
	return *o.OperatorGroups
}

// GetOperatorGroupsOk returns a tuple with the OperatorGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recipients) GetOperatorGroupsOk() (*[]string, bool) {
	if o == nil || o.OperatorGroups == nil {
		return nil, false
	}
	return o.OperatorGroups, true
}

// HasOperatorGroups returns a boolean if a field has been set.
func (o *Recipients) HasOperatorGroups() bool {
	if o != nil && o.OperatorGroups != nil {
		return true
	}

	return false
}

// SetOperatorGroups gets a reference to the given []string and assigns it to the OperatorGroups field.
func (o *Recipients) SetOperatorGroups(v []string) {
	o.OperatorGroups = &v
}

// GetExtraEmailAddresses returns the ExtraEmailAddresses field value if set, zero value otherwise.
func (o *Recipients) GetExtraEmailAddresses() []string {
	if o == nil || o.ExtraEmailAddresses == nil {
		var ret []string
		return ret
	}
	return *o.ExtraEmailAddresses
}

// GetExtraEmailAddressesOk returns a tuple with the ExtraEmailAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Recipients) GetExtraEmailAddressesOk() (*[]string, bool) {
	if o == nil || o.ExtraEmailAddresses == nil {
		return nil, false
	}
	return o.ExtraEmailAddresses, true
}

// HasExtraEmailAddresses returns a boolean if a field has been set.
func (o *Recipients) HasExtraEmailAddresses() bool {
	if o != nil && o.ExtraEmailAddresses != nil {
		return true
	}

	return false
}

// SetExtraEmailAddresses gets a reference to the given []string and assigns it to the ExtraEmailAddresses field.
func (o *Recipients) SetExtraEmailAddresses(v []string) {
	o.ExtraEmailAddresses = &v
}

func (o Recipients) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Operators != nil {
		toSerialize["Operators"] = o.Operators
	}
	if o.OperatorGroups != nil {
		toSerialize["OperatorGroups"] = o.OperatorGroups
	}
	if o.ExtraEmailAddresses != nil {
		toSerialize["ExtraEmailAddresses"] = o.ExtraEmailAddresses
	}
	return json.Marshal(toSerialize)
}

type NullableRecipients struct {
	value *Recipients
	isSet bool
}

func (v NullableRecipients) Get() *Recipients {
	return v.value
}

func (v *NullableRecipients) Set(val *Recipients) {
	v.value = val
	v.isSet = true
}

func (v NullableRecipients) IsSet() bool {
	return v.isSet
}

func (v *NullableRecipients) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecipients(val *Recipients) *NullableRecipients {
	return &NullableRecipients{value: val, isSet: true}
}

func (v NullableRecipients) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecipients) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


