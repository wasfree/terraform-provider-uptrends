/*
Uptrends API v4

This document describes Uptrends API version 4. This Swagger environment also lets you execute API methods directly.  Please note that this is not a sandbox environment: these API methods operate directly on your actual Uptrends account.  For more information, please visit https://www.uptrends.com/api.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package uptrends

import (
	"encoding/json"
)

// CheckpointServerAttributes Object attributes 
type CheckpointServerAttributes struct {
	// The ipv4 address
	Ip4Address *string `json:"Ip4Address,omitempty"`
	// The ipv6 address
	IpV6Address *string `json:"IpV6Address,omitempty"`
	// List of server's capabilities
	Capabilities []CapabilityFilterEnum `json:"Capabilities,omitempty"`
}

// NewCheckpointServerAttributes instantiates a new CheckpointServerAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCheckpointServerAttributes() *CheckpointServerAttributes {
	this := CheckpointServerAttributes{}
	return &this
}

// NewCheckpointServerAttributesWithDefaults instantiates a new CheckpointServerAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCheckpointServerAttributesWithDefaults() *CheckpointServerAttributes {
	this := CheckpointServerAttributes{}
	return &this
}

// GetIp4Address returns the Ip4Address field value if set, zero value otherwise.
func (o *CheckpointServerAttributes) GetIp4Address() string {
	if o == nil || isNil(o.Ip4Address) {
		var ret string
		return ret
	}
	return *o.Ip4Address
}

// GetIp4AddressOk returns a tuple with the Ip4Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckpointServerAttributes) GetIp4AddressOk() (*string, bool) {
	if o == nil || isNil(o.Ip4Address) {
    return nil, false
	}
	return o.Ip4Address, true
}

// HasIp4Address returns a boolean if a field has been set.
func (o *CheckpointServerAttributes) HasIp4Address() bool {
	if o != nil && !isNil(o.Ip4Address) {
		return true
	}

	return false
}

// SetIp4Address gets a reference to the given string and assigns it to the Ip4Address field.
func (o *CheckpointServerAttributes) SetIp4Address(v string) {
	o.Ip4Address = &v
}

// GetIpV6Address returns the IpV6Address field value if set, zero value otherwise.
func (o *CheckpointServerAttributes) GetIpV6Address() string {
	if o == nil || isNil(o.IpV6Address) {
		var ret string
		return ret
	}
	return *o.IpV6Address
}

// GetIpV6AddressOk returns a tuple with the IpV6Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckpointServerAttributes) GetIpV6AddressOk() (*string, bool) {
	if o == nil || isNil(o.IpV6Address) {
    return nil, false
	}
	return o.IpV6Address, true
}

// HasIpV6Address returns a boolean if a field has been set.
func (o *CheckpointServerAttributes) HasIpV6Address() bool {
	if o != nil && !isNil(o.IpV6Address) {
		return true
	}

	return false
}

// SetIpV6Address gets a reference to the given string and assigns it to the IpV6Address field.
func (o *CheckpointServerAttributes) SetIpV6Address(v string) {
	o.IpV6Address = &v
}

// GetCapabilities returns the Capabilities field value if set, zero value otherwise.
func (o *CheckpointServerAttributes) GetCapabilities() []CapabilityFilterEnum {
	if o == nil || isNil(o.Capabilities) {
		var ret []CapabilityFilterEnum
		return ret
	}
	return o.Capabilities
}

// GetCapabilitiesOk returns a tuple with the Capabilities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckpointServerAttributes) GetCapabilitiesOk() ([]CapabilityFilterEnum, bool) {
	if o == nil || isNil(o.Capabilities) {
    return nil, false
	}
	return o.Capabilities, true
}

// HasCapabilities returns a boolean if a field has been set.
func (o *CheckpointServerAttributes) HasCapabilities() bool {
	if o != nil && !isNil(o.Capabilities) {
		return true
	}

	return false
}

// SetCapabilities gets a reference to the given []CapabilityFilterEnum and assigns it to the Capabilities field.
func (o *CheckpointServerAttributes) SetCapabilities(v []CapabilityFilterEnum) {
	o.Capabilities = v
}

func (o CheckpointServerAttributes) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Ip4Address) {
		toSerialize["Ip4Address"] = o.Ip4Address
	}
	if !isNil(o.IpV6Address) {
		toSerialize["IpV6Address"] = o.IpV6Address
	}
	if !isNil(o.Capabilities) {
		toSerialize["Capabilities"] = o.Capabilities
	}
	return json.Marshal(toSerialize)
}

type NullableCheckpointServerAttributes struct {
	value *CheckpointServerAttributes
	isSet bool
}

func (v NullableCheckpointServerAttributes) Get() *CheckpointServerAttributes {
	return v.value
}

func (v *NullableCheckpointServerAttributes) Set(val *CheckpointServerAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableCheckpointServerAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableCheckpointServerAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCheckpointServerAttributes(val *CheckpointServerAttributes) *NullableCheckpointServerAttributes {
	return &NullableCheckpointServerAttributes{value: val, isSet: true}
}

func (v NullableCheckpointServerAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCheckpointServerAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


