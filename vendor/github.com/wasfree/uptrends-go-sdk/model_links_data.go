/*
 * Uptrends API v4
 *
 * This document describes Uptrends API version 4. This Swagger environment also lets you execute API methods directly.  Please note that this is not a sandbox environment: these API methods operate directly on your actual Uptrends account.  For more information, please visit https://www.uptrends.com/api.
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package uptrends

import (
	"encoding/json"
)

// LinksData Links with reference to self and next data set
type LinksData struct {
	// Url for next data set
	Next *string `json:"Next,omitempty"`
	// Url for this data set (data might get updated, depending on your parameters)
	Self *string `json:"Self,omitempty"`
}

// NewLinksData instantiates a new LinksData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLinksData() *LinksData {
	this := LinksData{}
	return &this
}

// NewLinksDataWithDefaults instantiates a new LinksData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLinksDataWithDefaults() *LinksData {
	this := LinksData{}
	return &this
}

// GetNext returns the Next field value if set, zero value otherwise.
func (o *LinksData) GetNext() string {
	if o == nil || o.Next == nil {
		var ret string
		return ret
	}
	return *o.Next
}

// GetNextOk returns a tuple with the Next field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinksData) GetNextOk() (*string, bool) {
	if o == nil || o.Next == nil {
		return nil, false
	}
	return o.Next, true
}

// HasNext returns a boolean if a field has been set.
func (o *LinksData) HasNext() bool {
	if o != nil && o.Next != nil {
		return true
	}

	return false
}

// SetNext gets a reference to the given string and assigns it to the Next field.
func (o *LinksData) SetNext(v string) {
	o.Next = &v
}

// GetSelf returns the Self field value if set, zero value otherwise.
func (o *LinksData) GetSelf() string {
	if o == nil || o.Self == nil {
		var ret string
		return ret
	}
	return *o.Self
}

// GetSelfOk returns a tuple with the Self field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinksData) GetSelfOk() (*string, bool) {
	if o == nil || o.Self == nil {
		return nil, false
	}
	return o.Self, true
}

// HasSelf returns a boolean if a field has been set.
func (o *LinksData) HasSelf() bool {
	if o != nil && o.Self != nil {
		return true
	}

	return false
}

// SetSelf gets a reference to the given string and assigns it to the Self field.
func (o *LinksData) SetSelf(v string) {
	o.Self = &v
}

func (o LinksData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Next != nil {
		toSerialize["Next"] = o.Next
	}
	if o.Self != nil {
		toSerialize["Self"] = o.Self
	}
	return json.Marshal(toSerialize)
}

type NullableLinksData struct {
	value *LinksData
	isSet bool
}

func (v NullableLinksData) Get() *LinksData {
	return v.value
}

func (v *NullableLinksData) Set(val *LinksData) {
	v.value = val
	v.isSet = true
}

func (v NullableLinksData) IsSet() bool {
	return v.isSet
}

func (v *NullableLinksData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLinksData(val *LinksData) *NullableLinksData {
	return &NullableLinksData{value: val, isSet: true}
}

func (v NullableLinksData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLinksData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


