/*
Uptrends API v4

This document describes Uptrends API version 4. This Swagger environment also lets you execute API methods directly.  Please note that this is not a sandbox environment: these API methods operate directly on your actual Uptrends account.  For more information, please visit https://www.uptrends.com/api.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package uptrends

import (
	"encoding/json"
)

// MonitorCheckAttributes Object attributes 
type MonitorCheckAttributes struct {
	// Monitor identifier
	MonitorGuid string `json:"MonitorGuid"`
	// Date/time stamp of the check
	Timestamp map[string]interface{} `json:"Timestamp"`
	// The numeric Uptrends error code in case of an error result, or 0 in case of an OK result.
	ErrorCode int32 `json:"ErrorCode"`
	// The number of milliseconds needed to complete the monitor check.
	TotalTime float64 `json:"TotalTime"`
	// The number of milliseconds needed to perform the DNS query for this check, when appropriate.
	ResolveTime float64 `json:"ResolveTime"`
	// The number of milliseconds needed to establish a connection.
	ConnectionTime float64 `json:"ConnectionTime"`
	// The number of milliseconds needed to download the response data.
	DownloadTime float64 `json:"DownloadTime"`
	// The number of downloaded bytes for this check.
	TotalBytes *int32 `json:"TotalBytes,omitempty"`
	// The IP address that was found for the specified domain name as part of this monitor check.
	ResolvedIpAddress *string `json:"ResolvedIpAddress,omitempty"`
	// A value that represents the OK/Error state for this check: NoError if the result was OK, Unconfirmed if an error was found, Confirmed if an error was found as a double check, right after an Unconfirmed error.
	ErrorLevel ErrorLevel `json:"ErrorLevel"`
	// A text value that describes the error that was found, or OK if no error was found.
	ErrorDescription *string `json:"ErrorDescription,omitempty"`
	// Any additional error information, if available.
	ErrorMessage *string `json:"ErrorMessage,omitempty"`
	// Did the check come from a staging monitor?
	StagingMode bool `json:"StagingMode"`
	// The Id of the Uptrends checkpoint server that performed this check.
	ServerId *int32 `json:"ServerId,omitempty"`
	// The HTTP status code returned (if applicable)
	HttpStatusCode *int32 `json:"HttpStatusCode,omitempty"`
	// This is a partial concurrent measurement, part of a concurrent check
	IsPartialCheck bool `json:"IsPartialCheck"`
	// Is this a master concurrent check record
	IsConcurrentCheck *bool `json:"IsConcurrentCheck,omitempty"`
}

// NewMonitorCheckAttributes instantiates a new MonitorCheckAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMonitorCheckAttributes(monitorGuid string, timestamp map[string]interface{}, errorCode int32, totalTime float64, resolveTime float64, connectionTime float64, downloadTime float64, errorLevel ErrorLevel, stagingMode bool, isPartialCheck bool) *MonitorCheckAttributes {
	this := MonitorCheckAttributes{}
	this.MonitorGuid = monitorGuid
	this.Timestamp = timestamp
	this.ErrorCode = errorCode
	this.TotalTime = totalTime
	this.ResolveTime = resolveTime
	this.ConnectionTime = connectionTime
	this.DownloadTime = downloadTime
	this.ErrorLevel = errorLevel
	this.StagingMode = stagingMode
	this.IsPartialCheck = isPartialCheck
	return &this
}

// NewMonitorCheckAttributesWithDefaults instantiates a new MonitorCheckAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMonitorCheckAttributesWithDefaults() *MonitorCheckAttributes {
	this := MonitorCheckAttributes{}
	return &this
}

// GetMonitorGuid returns the MonitorGuid field value
func (o *MonitorCheckAttributes) GetMonitorGuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MonitorGuid
}

// GetMonitorGuidOk returns a tuple with the MonitorGuid field value
// and a boolean to check if the value has been set.
func (o *MonitorCheckAttributes) GetMonitorGuidOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.MonitorGuid, true
}

// SetMonitorGuid sets field value
func (o *MonitorCheckAttributes) SetMonitorGuid(v string) {
	o.MonitorGuid = v
}

// GetTimestamp returns the Timestamp field value
func (o *MonitorCheckAttributes) GetTimestamp() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value
// and a boolean to check if the value has been set.
func (o *MonitorCheckAttributes) GetTimestampOk() (map[string]interface{}, bool) {
	if o == nil {
    return map[string]interface{}{}, false
	}
	return o.Timestamp, true
}

// SetTimestamp sets field value
func (o *MonitorCheckAttributes) SetTimestamp(v map[string]interface{}) {
	o.Timestamp = v
}

// GetErrorCode returns the ErrorCode field value
func (o *MonitorCheckAttributes) GetErrorCode() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ErrorCode
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value
// and a boolean to check if the value has been set.
func (o *MonitorCheckAttributes) GetErrorCodeOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ErrorCode, true
}

// SetErrorCode sets field value
func (o *MonitorCheckAttributes) SetErrorCode(v int32) {
	o.ErrorCode = v
}

// GetTotalTime returns the TotalTime field value
func (o *MonitorCheckAttributes) GetTotalTime() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.TotalTime
}

// GetTotalTimeOk returns a tuple with the TotalTime field value
// and a boolean to check if the value has been set.
func (o *MonitorCheckAttributes) GetTotalTimeOk() (*float64, bool) {
	if o == nil {
    return nil, false
	}
	return &o.TotalTime, true
}

// SetTotalTime sets field value
func (o *MonitorCheckAttributes) SetTotalTime(v float64) {
	o.TotalTime = v
}

// GetResolveTime returns the ResolveTime field value
func (o *MonitorCheckAttributes) GetResolveTime() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.ResolveTime
}

// GetResolveTimeOk returns a tuple with the ResolveTime field value
// and a boolean to check if the value has been set.
func (o *MonitorCheckAttributes) GetResolveTimeOk() (*float64, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ResolveTime, true
}

// SetResolveTime sets field value
func (o *MonitorCheckAttributes) SetResolveTime(v float64) {
	o.ResolveTime = v
}

// GetConnectionTime returns the ConnectionTime field value
func (o *MonitorCheckAttributes) GetConnectionTime() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.ConnectionTime
}

// GetConnectionTimeOk returns a tuple with the ConnectionTime field value
// and a boolean to check if the value has been set.
func (o *MonitorCheckAttributes) GetConnectionTimeOk() (*float64, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ConnectionTime, true
}

// SetConnectionTime sets field value
func (o *MonitorCheckAttributes) SetConnectionTime(v float64) {
	o.ConnectionTime = v
}

// GetDownloadTime returns the DownloadTime field value
func (o *MonitorCheckAttributes) GetDownloadTime() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.DownloadTime
}

// GetDownloadTimeOk returns a tuple with the DownloadTime field value
// and a boolean to check if the value has been set.
func (o *MonitorCheckAttributes) GetDownloadTimeOk() (*float64, bool) {
	if o == nil {
    return nil, false
	}
	return &o.DownloadTime, true
}

// SetDownloadTime sets field value
func (o *MonitorCheckAttributes) SetDownloadTime(v float64) {
	o.DownloadTime = v
}

// GetTotalBytes returns the TotalBytes field value if set, zero value otherwise.
func (o *MonitorCheckAttributes) GetTotalBytes() int32 {
	if o == nil || isNil(o.TotalBytes) {
		var ret int32
		return ret
	}
	return *o.TotalBytes
}

// GetTotalBytesOk returns a tuple with the TotalBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitorCheckAttributes) GetTotalBytesOk() (*int32, bool) {
	if o == nil || isNil(o.TotalBytes) {
    return nil, false
	}
	return o.TotalBytes, true
}

// HasTotalBytes returns a boolean if a field has been set.
func (o *MonitorCheckAttributes) HasTotalBytes() bool {
	if o != nil && !isNil(o.TotalBytes) {
		return true
	}

	return false
}

// SetTotalBytes gets a reference to the given int32 and assigns it to the TotalBytes field.
func (o *MonitorCheckAttributes) SetTotalBytes(v int32) {
	o.TotalBytes = &v
}

// GetResolvedIpAddress returns the ResolvedIpAddress field value if set, zero value otherwise.
func (o *MonitorCheckAttributes) GetResolvedIpAddress() string {
	if o == nil || isNil(o.ResolvedIpAddress) {
		var ret string
		return ret
	}
	return *o.ResolvedIpAddress
}

// GetResolvedIpAddressOk returns a tuple with the ResolvedIpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitorCheckAttributes) GetResolvedIpAddressOk() (*string, bool) {
	if o == nil || isNil(o.ResolvedIpAddress) {
    return nil, false
	}
	return o.ResolvedIpAddress, true
}

// HasResolvedIpAddress returns a boolean if a field has been set.
func (o *MonitorCheckAttributes) HasResolvedIpAddress() bool {
	if o != nil && !isNil(o.ResolvedIpAddress) {
		return true
	}

	return false
}

// SetResolvedIpAddress gets a reference to the given string and assigns it to the ResolvedIpAddress field.
func (o *MonitorCheckAttributes) SetResolvedIpAddress(v string) {
	o.ResolvedIpAddress = &v
}

// GetErrorLevel returns the ErrorLevel field value
func (o *MonitorCheckAttributes) GetErrorLevel() ErrorLevel {
	if o == nil {
		var ret ErrorLevel
		return ret
	}

	return o.ErrorLevel
}

// GetErrorLevelOk returns a tuple with the ErrorLevel field value
// and a boolean to check if the value has been set.
func (o *MonitorCheckAttributes) GetErrorLevelOk() (*ErrorLevel, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ErrorLevel, true
}

// SetErrorLevel sets field value
func (o *MonitorCheckAttributes) SetErrorLevel(v ErrorLevel) {
	o.ErrorLevel = v
}

// GetErrorDescription returns the ErrorDescription field value if set, zero value otherwise.
func (o *MonitorCheckAttributes) GetErrorDescription() string {
	if o == nil || isNil(o.ErrorDescription) {
		var ret string
		return ret
	}
	return *o.ErrorDescription
}

// GetErrorDescriptionOk returns a tuple with the ErrorDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitorCheckAttributes) GetErrorDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.ErrorDescription) {
    return nil, false
	}
	return o.ErrorDescription, true
}

// HasErrorDescription returns a boolean if a field has been set.
func (o *MonitorCheckAttributes) HasErrorDescription() bool {
	if o != nil && !isNil(o.ErrorDescription) {
		return true
	}

	return false
}

// SetErrorDescription gets a reference to the given string and assigns it to the ErrorDescription field.
func (o *MonitorCheckAttributes) SetErrorDescription(v string) {
	o.ErrorDescription = &v
}

// GetErrorMessage returns the ErrorMessage field value if set, zero value otherwise.
func (o *MonitorCheckAttributes) GetErrorMessage() string {
	if o == nil || isNil(o.ErrorMessage) {
		var ret string
		return ret
	}
	return *o.ErrorMessage
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitorCheckAttributes) GetErrorMessageOk() (*string, bool) {
	if o == nil || isNil(o.ErrorMessage) {
    return nil, false
	}
	return o.ErrorMessage, true
}

// HasErrorMessage returns a boolean if a field has been set.
func (o *MonitorCheckAttributes) HasErrorMessage() bool {
	if o != nil && !isNil(o.ErrorMessage) {
		return true
	}

	return false
}

// SetErrorMessage gets a reference to the given string and assigns it to the ErrorMessage field.
func (o *MonitorCheckAttributes) SetErrorMessage(v string) {
	o.ErrorMessage = &v
}

// GetStagingMode returns the StagingMode field value
func (o *MonitorCheckAttributes) GetStagingMode() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.StagingMode
}

// GetStagingModeOk returns a tuple with the StagingMode field value
// and a boolean to check if the value has been set.
func (o *MonitorCheckAttributes) GetStagingModeOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return &o.StagingMode, true
}

// SetStagingMode sets field value
func (o *MonitorCheckAttributes) SetStagingMode(v bool) {
	o.StagingMode = v
}

// GetServerId returns the ServerId field value if set, zero value otherwise.
func (o *MonitorCheckAttributes) GetServerId() int32 {
	if o == nil || isNil(o.ServerId) {
		var ret int32
		return ret
	}
	return *o.ServerId
}

// GetServerIdOk returns a tuple with the ServerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitorCheckAttributes) GetServerIdOk() (*int32, bool) {
	if o == nil || isNil(o.ServerId) {
    return nil, false
	}
	return o.ServerId, true
}

// HasServerId returns a boolean if a field has been set.
func (o *MonitorCheckAttributes) HasServerId() bool {
	if o != nil && !isNil(o.ServerId) {
		return true
	}

	return false
}

// SetServerId gets a reference to the given int32 and assigns it to the ServerId field.
func (o *MonitorCheckAttributes) SetServerId(v int32) {
	o.ServerId = &v
}

// GetHttpStatusCode returns the HttpStatusCode field value if set, zero value otherwise.
func (o *MonitorCheckAttributes) GetHttpStatusCode() int32 {
	if o == nil || isNil(o.HttpStatusCode) {
		var ret int32
		return ret
	}
	return *o.HttpStatusCode
}

// GetHttpStatusCodeOk returns a tuple with the HttpStatusCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitorCheckAttributes) GetHttpStatusCodeOk() (*int32, bool) {
	if o == nil || isNil(o.HttpStatusCode) {
    return nil, false
	}
	return o.HttpStatusCode, true
}

// HasHttpStatusCode returns a boolean if a field has been set.
func (o *MonitorCheckAttributes) HasHttpStatusCode() bool {
	if o != nil && !isNil(o.HttpStatusCode) {
		return true
	}

	return false
}

// SetHttpStatusCode gets a reference to the given int32 and assigns it to the HttpStatusCode field.
func (o *MonitorCheckAttributes) SetHttpStatusCode(v int32) {
	o.HttpStatusCode = &v
}

// GetIsPartialCheck returns the IsPartialCheck field value
func (o *MonitorCheckAttributes) GetIsPartialCheck() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsPartialCheck
}

// GetIsPartialCheckOk returns a tuple with the IsPartialCheck field value
// and a boolean to check if the value has been set.
func (o *MonitorCheckAttributes) GetIsPartialCheckOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return &o.IsPartialCheck, true
}

// SetIsPartialCheck sets field value
func (o *MonitorCheckAttributes) SetIsPartialCheck(v bool) {
	o.IsPartialCheck = v
}

// GetIsConcurrentCheck returns the IsConcurrentCheck field value if set, zero value otherwise.
func (o *MonitorCheckAttributes) GetIsConcurrentCheck() bool {
	if o == nil || isNil(o.IsConcurrentCheck) {
		var ret bool
		return ret
	}
	return *o.IsConcurrentCheck
}

// GetIsConcurrentCheckOk returns a tuple with the IsConcurrentCheck field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitorCheckAttributes) GetIsConcurrentCheckOk() (*bool, bool) {
	if o == nil || isNil(o.IsConcurrentCheck) {
    return nil, false
	}
	return o.IsConcurrentCheck, true
}

// HasIsConcurrentCheck returns a boolean if a field has been set.
func (o *MonitorCheckAttributes) HasIsConcurrentCheck() bool {
	if o != nil && !isNil(o.IsConcurrentCheck) {
		return true
	}

	return false
}

// SetIsConcurrentCheck gets a reference to the given bool and assigns it to the IsConcurrentCheck field.
func (o *MonitorCheckAttributes) SetIsConcurrentCheck(v bool) {
	o.IsConcurrentCheck = &v
}

func (o MonitorCheckAttributes) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["MonitorGuid"] = o.MonitorGuid
	}
	if true {
		toSerialize["Timestamp"] = o.Timestamp
	}
	if true {
		toSerialize["ErrorCode"] = o.ErrorCode
	}
	if true {
		toSerialize["TotalTime"] = o.TotalTime
	}
	if true {
		toSerialize["ResolveTime"] = o.ResolveTime
	}
	if true {
		toSerialize["ConnectionTime"] = o.ConnectionTime
	}
	if true {
		toSerialize["DownloadTime"] = o.DownloadTime
	}
	if !isNil(o.TotalBytes) {
		toSerialize["TotalBytes"] = o.TotalBytes
	}
	if !isNil(o.ResolvedIpAddress) {
		toSerialize["ResolvedIpAddress"] = o.ResolvedIpAddress
	}
	if true {
		toSerialize["ErrorLevel"] = o.ErrorLevel
	}
	if !isNil(o.ErrorDescription) {
		toSerialize["ErrorDescription"] = o.ErrorDescription
	}
	if !isNil(o.ErrorMessage) {
		toSerialize["ErrorMessage"] = o.ErrorMessage
	}
	if true {
		toSerialize["StagingMode"] = o.StagingMode
	}
	if !isNil(o.ServerId) {
		toSerialize["ServerId"] = o.ServerId
	}
	if !isNil(o.HttpStatusCode) {
		toSerialize["HttpStatusCode"] = o.HttpStatusCode
	}
	if true {
		toSerialize["IsPartialCheck"] = o.IsPartialCheck
	}
	if !isNil(o.IsConcurrentCheck) {
		toSerialize["IsConcurrentCheck"] = o.IsConcurrentCheck
	}
	return json.Marshal(toSerialize)
}

type NullableMonitorCheckAttributes struct {
	value *MonitorCheckAttributes
	isSet bool
}

func (v NullableMonitorCheckAttributes) Get() *MonitorCheckAttributes {
	return v.value
}

func (v *NullableMonitorCheckAttributes) Set(val *MonitorCheckAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableMonitorCheckAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableMonitorCheckAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMonitorCheckAttributes(val *MonitorCheckAttributes) *NullableMonitorCheckAttributes {
	return &NullableMonitorCheckAttributes{value: val, isSet: true}
}

func (v NullableMonitorCheckAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMonitorCheckAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


