/*
Uptrends API v4

This document describes Uptrends API version 4. This Swagger environment also lets you execute API methods directly.  Please note that this is not a sandbox environment: these API methods operate directly on your actual Uptrends account.  For more information, please visit https://www.uptrends.com/api.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package uptrends

import (
	"encoding/json"
)

// StatisticsAttributes Object attributes 
type StatisticsAttributes struct {
	StartDateTime map[string]interface{} `json:"StartDateTime"`
	EndDateTime map[string]interface{} `json:"EndDateTime"`
	Alerts *int32 `json:"Alerts,omitempty"`
	SlaTarget *float64 `json:"SlaTarget,omitempty"`
	SlaTargetTotalTime *float64 `json:"SlaTargetTotalTime,omitempty"`
	OperatorResponseTarget *float64 `json:"OperatorResponseTarget,omitempty"`
	OperatorResponseTime *float64 `json:"OperatorResponseTime,omitempty"`
	DowntimePercentage *float64 `json:"DowntimePercentage,omitempty"`
	UptimePercentage *float64 `json:"UptimePercentage,omitempty"`
	Checks *int64 `json:"Checks,omitempty"`
	ConfirmedErrors *int32 `json:"ConfirmedErrors,omitempty"`
	UnconfirmedErrors *int32 `json:"UnconfirmedErrors,omitempty"`
	Uptime *int64 `json:"Uptime,omitempty"`
	Downtime *int64 `json:"Downtime,omitempty"`
	TotalTime *float32 `json:"TotalTime,omitempty"`
	ResolveTime *float32 `json:"ResolveTime,omitempty"`
	ConnectionTime *float32 `json:"ConnectionTime,omitempty"`
	DownloadTime *float32 `json:"DownloadTime,omitempty"`
	TotalBytes *int64 `json:"TotalBytes,omitempty"`
}

// NewStatisticsAttributes instantiates a new StatisticsAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStatisticsAttributes(startDateTime map[string]interface{}, endDateTime map[string]interface{}) *StatisticsAttributes {
	this := StatisticsAttributes{}
	this.StartDateTime = startDateTime
	this.EndDateTime = endDateTime
	return &this
}

// NewStatisticsAttributesWithDefaults instantiates a new StatisticsAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStatisticsAttributesWithDefaults() *StatisticsAttributes {
	this := StatisticsAttributes{}
	return &this
}

// GetStartDateTime returns the StartDateTime field value
func (o *StatisticsAttributes) GetStartDateTime() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.StartDateTime
}

// GetStartDateTimeOk returns a tuple with the StartDateTime field value
// and a boolean to check if the value has been set.
func (o *StatisticsAttributes) GetStartDateTimeOk() (map[string]interface{}, bool) {
	if o == nil {
    return map[string]interface{}{}, false
	}
	return o.StartDateTime, true
}

// SetStartDateTime sets field value
func (o *StatisticsAttributes) SetStartDateTime(v map[string]interface{}) {
	o.StartDateTime = v
}

// GetEndDateTime returns the EndDateTime field value
func (o *StatisticsAttributes) GetEndDateTime() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.EndDateTime
}

// GetEndDateTimeOk returns a tuple with the EndDateTime field value
// and a boolean to check if the value has been set.
func (o *StatisticsAttributes) GetEndDateTimeOk() (map[string]interface{}, bool) {
	if o == nil {
    return map[string]interface{}{}, false
	}
	return o.EndDateTime, true
}

// SetEndDateTime sets field value
func (o *StatisticsAttributes) SetEndDateTime(v map[string]interface{}) {
	o.EndDateTime = v
}

// GetAlerts returns the Alerts field value if set, zero value otherwise.
func (o *StatisticsAttributes) GetAlerts() int32 {
	if o == nil || isNil(o.Alerts) {
		var ret int32
		return ret
	}
	return *o.Alerts
}

// GetAlertsOk returns a tuple with the Alerts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatisticsAttributes) GetAlertsOk() (*int32, bool) {
	if o == nil || isNil(o.Alerts) {
    return nil, false
	}
	return o.Alerts, true
}

// HasAlerts returns a boolean if a field has been set.
func (o *StatisticsAttributes) HasAlerts() bool {
	if o != nil && !isNil(o.Alerts) {
		return true
	}

	return false
}

// SetAlerts gets a reference to the given int32 and assigns it to the Alerts field.
func (o *StatisticsAttributes) SetAlerts(v int32) {
	o.Alerts = &v
}

// GetSlaTarget returns the SlaTarget field value if set, zero value otherwise.
func (o *StatisticsAttributes) GetSlaTarget() float64 {
	if o == nil || isNil(o.SlaTarget) {
		var ret float64
		return ret
	}
	return *o.SlaTarget
}

// GetSlaTargetOk returns a tuple with the SlaTarget field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatisticsAttributes) GetSlaTargetOk() (*float64, bool) {
	if o == nil || isNil(o.SlaTarget) {
    return nil, false
	}
	return o.SlaTarget, true
}

// HasSlaTarget returns a boolean if a field has been set.
func (o *StatisticsAttributes) HasSlaTarget() bool {
	if o != nil && !isNil(o.SlaTarget) {
		return true
	}

	return false
}

// SetSlaTarget gets a reference to the given float64 and assigns it to the SlaTarget field.
func (o *StatisticsAttributes) SetSlaTarget(v float64) {
	o.SlaTarget = &v
}

// GetSlaTargetTotalTime returns the SlaTargetTotalTime field value if set, zero value otherwise.
func (o *StatisticsAttributes) GetSlaTargetTotalTime() float64 {
	if o == nil || isNil(o.SlaTargetTotalTime) {
		var ret float64
		return ret
	}
	return *o.SlaTargetTotalTime
}

// GetSlaTargetTotalTimeOk returns a tuple with the SlaTargetTotalTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatisticsAttributes) GetSlaTargetTotalTimeOk() (*float64, bool) {
	if o == nil || isNil(o.SlaTargetTotalTime) {
    return nil, false
	}
	return o.SlaTargetTotalTime, true
}

// HasSlaTargetTotalTime returns a boolean if a field has been set.
func (o *StatisticsAttributes) HasSlaTargetTotalTime() bool {
	if o != nil && !isNil(o.SlaTargetTotalTime) {
		return true
	}

	return false
}

// SetSlaTargetTotalTime gets a reference to the given float64 and assigns it to the SlaTargetTotalTime field.
func (o *StatisticsAttributes) SetSlaTargetTotalTime(v float64) {
	o.SlaTargetTotalTime = &v
}

// GetOperatorResponseTarget returns the OperatorResponseTarget field value if set, zero value otherwise.
func (o *StatisticsAttributes) GetOperatorResponseTarget() float64 {
	if o == nil || isNil(o.OperatorResponseTarget) {
		var ret float64
		return ret
	}
	return *o.OperatorResponseTarget
}

// GetOperatorResponseTargetOk returns a tuple with the OperatorResponseTarget field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatisticsAttributes) GetOperatorResponseTargetOk() (*float64, bool) {
	if o == nil || isNil(o.OperatorResponseTarget) {
    return nil, false
	}
	return o.OperatorResponseTarget, true
}

// HasOperatorResponseTarget returns a boolean if a field has been set.
func (o *StatisticsAttributes) HasOperatorResponseTarget() bool {
	if o != nil && !isNil(o.OperatorResponseTarget) {
		return true
	}

	return false
}

// SetOperatorResponseTarget gets a reference to the given float64 and assigns it to the OperatorResponseTarget field.
func (o *StatisticsAttributes) SetOperatorResponseTarget(v float64) {
	o.OperatorResponseTarget = &v
}

// GetOperatorResponseTime returns the OperatorResponseTime field value if set, zero value otherwise.
func (o *StatisticsAttributes) GetOperatorResponseTime() float64 {
	if o == nil || isNil(o.OperatorResponseTime) {
		var ret float64
		return ret
	}
	return *o.OperatorResponseTime
}

// GetOperatorResponseTimeOk returns a tuple with the OperatorResponseTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatisticsAttributes) GetOperatorResponseTimeOk() (*float64, bool) {
	if o == nil || isNil(o.OperatorResponseTime) {
    return nil, false
	}
	return o.OperatorResponseTime, true
}

// HasOperatorResponseTime returns a boolean if a field has been set.
func (o *StatisticsAttributes) HasOperatorResponseTime() bool {
	if o != nil && !isNil(o.OperatorResponseTime) {
		return true
	}

	return false
}

// SetOperatorResponseTime gets a reference to the given float64 and assigns it to the OperatorResponseTime field.
func (o *StatisticsAttributes) SetOperatorResponseTime(v float64) {
	o.OperatorResponseTime = &v
}

// GetDowntimePercentage returns the DowntimePercentage field value if set, zero value otherwise.
func (o *StatisticsAttributes) GetDowntimePercentage() float64 {
	if o == nil || isNil(o.DowntimePercentage) {
		var ret float64
		return ret
	}
	return *o.DowntimePercentage
}

// GetDowntimePercentageOk returns a tuple with the DowntimePercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatisticsAttributes) GetDowntimePercentageOk() (*float64, bool) {
	if o == nil || isNil(o.DowntimePercentage) {
    return nil, false
	}
	return o.DowntimePercentage, true
}

// HasDowntimePercentage returns a boolean if a field has been set.
func (o *StatisticsAttributes) HasDowntimePercentage() bool {
	if o != nil && !isNil(o.DowntimePercentage) {
		return true
	}

	return false
}

// SetDowntimePercentage gets a reference to the given float64 and assigns it to the DowntimePercentage field.
func (o *StatisticsAttributes) SetDowntimePercentage(v float64) {
	o.DowntimePercentage = &v
}

// GetUptimePercentage returns the UptimePercentage field value if set, zero value otherwise.
func (o *StatisticsAttributes) GetUptimePercentage() float64 {
	if o == nil || isNil(o.UptimePercentage) {
		var ret float64
		return ret
	}
	return *o.UptimePercentage
}

// GetUptimePercentageOk returns a tuple with the UptimePercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatisticsAttributes) GetUptimePercentageOk() (*float64, bool) {
	if o == nil || isNil(o.UptimePercentage) {
    return nil, false
	}
	return o.UptimePercentage, true
}

// HasUptimePercentage returns a boolean if a field has been set.
func (o *StatisticsAttributes) HasUptimePercentage() bool {
	if o != nil && !isNil(o.UptimePercentage) {
		return true
	}

	return false
}

// SetUptimePercentage gets a reference to the given float64 and assigns it to the UptimePercentage field.
func (o *StatisticsAttributes) SetUptimePercentage(v float64) {
	o.UptimePercentage = &v
}

// GetChecks returns the Checks field value if set, zero value otherwise.
func (o *StatisticsAttributes) GetChecks() int64 {
	if o == nil || isNil(o.Checks) {
		var ret int64
		return ret
	}
	return *o.Checks
}

// GetChecksOk returns a tuple with the Checks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatisticsAttributes) GetChecksOk() (*int64, bool) {
	if o == nil || isNil(o.Checks) {
    return nil, false
	}
	return o.Checks, true
}

// HasChecks returns a boolean if a field has been set.
func (o *StatisticsAttributes) HasChecks() bool {
	if o != nil && !isNil(o.Checks) {
		return true
	}

	return false
}

// SetChecks gets a reference to the given int64 and assigns it to the Checks field.
func (o *StatisticsAttributes) SetChecks(v int64) {
	o.Checks = &v
}

// GetConfirmedErrors returns the ConfirmedErrors field value if set, zero value otherwise.
func (o *StatisticsAttributes) GetConfirmedErrors() int32 {
	if o == nil || isNil(o.ConfirmedErrors) {
		var ret int32
		return ret
	}
	return *o.ConfirmedErrors
}

// GetConfirmedErrorsOk returns a tuple with the ConfirmedErrors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatisticsAttributes) GetConfirmedErrorsOk() (*int32, bool) {
	if o == nil || isNil(o.ConfirmedErrors) {
    return nil, false
	}
	return o.ConfirmedErrors, true
}

// HasConfirmedErrors returns a boolean if a field has been set.
func (o *StatisticsAttributes) HasConfirmedErrors() bool {
	if o != nil && !isNil(o.ConfirmedErrors) {
		return true
	}

	return false
}

// SetConfirmedErrors gets a reference to the given int32 and assigns it to the ConfirmedErrors field.
func (o *StatisticsAttributes) SetConfirmedErrors(v int32) {
	o.ConfirmedErrors = &v
}

// GetUnconfirmedErrors returns the UnconfirmedErrors field value if set, zero value otherwise.
func (o *StatisticsAttributes) GetUnconfirmedErrors() int32 {
	if o == nil || isNil(o.UnconfirmedErrors) {
		var ret int32
		return ret
	}
	return *o.UnconfirmedErrors
}

// GetUnconfirmedErrorsOk returns a tuple with the UnconfirmedErrors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatisticsAttributes) GetUnconfirmedErrorsOk() (*int32, bool) {
	if o == nil || isNil(o.UnconfirmedErrors) {
    return nil, false
	}
	return o.UnconfirmedErrors, true
}

// HasUnconfirmedErrors returns a boolean if a field has been set.
func (o *StatisticsAttributes) HasUnconfirmedErrors() bool {
	if o != nil && !isNil(o.UnconfirmedErrors) {
		return true
	}

	return false
}

// SetUnconfirmedErrors gets a reference to the given int32 and assigns it to the UnconfirmedErrors field.
func (o *StatisticsAttributes) SetUnconfirmedErrors(v int32) {
	o.UnconfirmedErrors = &v
}

// GetUptime returns the Uptime field value if set, zero value otherwise.
func (o *StatisticsAttributes) GetUptime() int64 {
	if o == nil || isNil(o.Uptime) {
		var ret int64
		return ret
	}
	return *o.Uptime
}

// GetUptimeOk returns a tuple with the Uptime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatisticsAttributes) GetUptimeOk() (*int64, bool) {
	if o == nil || isNil(o.Uptime) {
    return nil, false
	}
	return o.Uptime, true
}

// HasUptime returns a boolean if a field has been set.
func (o *StatisticsAttributes) HasUptime() bool {
	if o != nil && !isNil(o.Uptime) {
		return true
	}

	return false
}

// SetUptime gets a reference to the given int64 and assigns it to the Uptime field.
func (o *StatisticsAttributes) SetUptime(v int64) {
	o.Uptime = &v
}

// GetDowntime returns the Downtime field value if set, zero value otherwise.
func (o *StatisticsAttributes) GetDowntime() int64 {
	if o == nil || isNil(o.Downtime) {
		var ret int64
		return ret
	}
	return *o.Downtime
}

// GetDowntimeOk returns a tuple with the Downtime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatisticsAttributes) GetDowntimeOk() (*int64, bool) {
	if o == nil || isNil(o.Downtime) {
    return nil, false
	}
	return o.Downtime, true
}

// HasDowntime returns a boolean if a field has been set.
func (o *StatisticsAttributes) HasDowntime() bool {
	if o != nil && !isNil(o.Downtime) {
		return true
	}

	return false
}

// SetDowntime gets a reference to the given int64 and assigns it to the Downtime field.
func (o *StatisticsAttributes) SetDowntime(v int64) {
	o.Downtime = &v
}

// GetTotalTime returns the TotalTime field value if set, zero value otherwise.
func (o *StatisticsAttributes) GetTotalTime() float32 {
	if o == nil || isNil(o.TotalTime) {
		var ret float32
		return ret
	}
	return *o.TotalTime
}

// GetTotalTimeOk returns a tuple with the TotalTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatisticsAttributes) GetTotalTimeOk() (*float32, bool) {
	if o == nil || isNil(o.TotalTime) {
    return nil, false
	}
	return o.TotalTime, true
}

// HasTotalTime returns a boolean if a field has been set.
func (o *StatisticsAttributes) HasTotalTime() bool {
	if o != nil && !isNil(o.TotalTime) {
		return true
	}

	return false
}

// SetTotalTime gets a reference to the given float32 and assigns it to the TotalTime field.
func (o *StatisticsAttributes) SetTotalTime(v float32) {
	o.TotalTime = &v
}

// GetResolveTime returns the ResolveTime field value if set, zero value otherwise.
func (o *StatisticsAttributes) GetResolveTime() float32 {
	if o == nil || isNil(o.ResolveTime) {
		var ret float32
		return ret
	}
	return *o.ResolveTime
}

// GetResolveTimeOk returns a tuple with the ResolveTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatisticsAttributes) GetResolveTimeOk() (*float32, bool) {
	if o == nil || isNil(o.ResolveTime) {
    return nil, false
	}
	return o.ResolveTime, true
}

// HasResolveTime returns a boolean if a field has been set.
func (o *StatisticsAttributes) HasResolveTime() bool {
	if o != nil && !isNil(o.ResolveTime) {
		return true
	}

	return false
}

// SetResolveTime gets a reference to the given float32 and assigns it to the ResolveTime field.
func (o *StatisticsAttributes) SetResolveTime(v float32) {
	o.ResolveTime = &v
}

// GetConnectionTime returns the ConnectionTime field value if set, zero value otherwise.
func (o *StatisticsAttributes) GetConnectionTime() float32 {
	if o == nil || isNil(o.ConnectionTime) {
		var ret float32
		return ret
	}
	return *o.ConnectionTime
}

// GetConnectionTimeOk returns a tuple with the ConnectionTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatisticsAttributes) GetConnectionTimeOk() (*float32, bool) {
	if o == nil || isNil(o.ConnectionTime) {
    return nil, false
	}
	return o.ConnectionTime, true
}

// HasConnectionTime returns a boolean if a field has been set.
func (o *StatisticsAttributes) HasConnectionTime() bool {
	if o != nil && !isNil(o.ConnectionTime) {
		return true
	}

	return false
}

// SetConnectionTime gets a reference to the given float32 and assigns it to the ConnectionTime field.
func (o *StatisticsAttributes) SetConnectionTime(v float32) {
	o.ConnectionTime = &v
}

// GetDownloadTime returns the DownloadTime field value if set, zero value otherwise.
func (o *StatisticsAttributes) GetDownloadTime() float32 {
	if o == nil || isNil(o.DownloadTime) {
		var ret float32
		return ret
	}
	return *o.DownloadTime
}

// GetDownloadTimeOk returns a tuple with the DownloadTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatisticsAttributes) GetDownloadTimeOk() (*float32, bool) {
	if o == nil || isNil(o.DownloadTime) {
    return nil, false
	}
	return o.DownloadTime, true
}

// HasDownloadTime returns a boolean if a field has been set.
func (o *StatisticsAttributes) HasDownloadTime() bool {
	if o != nil && !isNil(o.DownloadTime) {
		return true
	}

	return false
}

// SetDownloadTime gets a reference to the given float32 and assigns it to the DownloadTime field.
func (o *StatisticsAttributes) SetDownloadTime(v float32) {
	o.DownloadTime = &v
}

// GetTotalBytes returns the TotalBytes field value if set, zero value otherwise.
func (o *StatisticsAttributes) GetTotalBytes() int64 {
	if o == nil || isNil(o.TotalBytes) {
		var ret int64
		return ret
	}
	return *o.TotalBytes
}

// GetTotalBytesOk returns a tuple with the TotalBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatisticsAttributes) GetTotalBytesOk() (*int64, bool) {
	if o == nil || isNil(o.TotalBytes) {
    return nil, false
	}
	return o.TotalBytes, true
}

// HasTotalBytes returns a boolean if a field has been set.
func (o *StatisticsAttributes) HasTotalBytes() bool {
	if o != nil && !isNil(o.TotalBytes) {
		return true
	}

	return false
}

// SetTotalBytes gets a reference to the given int64 and assigns it to the TotalBytes field.
func (o *StatisticsAttributes) SetTotalBytes(v int64) {
	o.TotalBytes = &v
}

func (o StatisticsAttributes) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["StartDateTime"] = o.StartDateTime
	}
	if true {
		toSerialize["EndDateTime"] = o.EndDateTime
	}
	if !isNil(o.Alerts) {
		toSerialize["Alerts"] = o.Alerts
	}
	if !isNil(o.SlaTarget) {
		toSerialize["SlaTarget"] = o.SlaTarget
	}
	if !isNil(o.SlaTargetTotalTime) {
		toSerialize["SlaTargetTotalTime"] = o.SlaTargetTotalTime
	}
	if !isNil(o.OperatorResponseTarget) {
		toSerialize["OperatorResponseTarget"] = o.OperatorResponseTarget
	}
	if !isNil(o.OperatorResponseTime) {
		toSerialize["OperatorResponseTime"] = o.OperatorResponseTime
	}
	if !isNil(o.DowntimePercentage) {
		toSerialize["DowntimePercentage"] = o.DowntimePercentage
	}
	if !isNil(o.UptimePercentage) {
		toSerialize["UptimePercentage"] = o.UptimePercentage
	}
	if !isNil(o.Checks) {
		toSerialize["Checks"] = o.Checks
	}
	if !isNil(o.ConfirmedErrors) {
		toSerialize["ConfirmedErrors"] = o.ConfirmedErrors
	}
	if !isNil(o.UnconfirmedErrors) {
		toSerialize["UnconfirmedErrors"] = o.UnconfirmedErrors
	}
	if !isNil(o.Uptime) {
		toSerialize["Uptime"] = o.Uptime
	}
	if !isNil(o.Downtime) {
		toSerialize["Downtime"] = o.Downtime
	}
	if !isNil(o.TotalTime) {
		toSerialize["TotalTime"] = o.TotalTime
	}
	if !isNil(o.ResolveTime) {
		toSerialize["ResolveTime"] = o.ResolveTime
	}
	if !isNil(o.ConnectionTime) {
		toSerialize["ConnectionTime"] = o.ConnectionTime
	}
	if !isNil(o.DownloadTime) {
		toSerialize["DownloadTime"] = o.DownloadTime
	}
	if !isNil(o.TotalBytes) {
		toSerialize["TotalBytes"] = o.TotalBytes
	}
	return json.Marshal(toSerialize)
}

type NullableStatisticsAttributes struct {
	value *StatisticsAttributes
	isSet bool
}

func (v NullableStatisticsAttributes) Get() *StatisticsAttributes {
	return v.value
}

func (v *NullableStatisticsAttributes) Set(val *StatisticsAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableStatisticsAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableStatisticsAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStatisticsAttributes(val *StatisticsAttributes) *NullableStatisticsAttributes {
	return &NullableStatisticsAttributes{value: val, isSet: true}
}

func (v NullableStatisticsAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStatisticsAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


