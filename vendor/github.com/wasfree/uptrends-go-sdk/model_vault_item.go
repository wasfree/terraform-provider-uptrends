/*
Uptrends API v4

This document describes Uptrends API version 4. This Swagger environment also lets you execute API methods directly.  Please note that this is not a sandbox environment: these API methods operate directly on your actual Uptrends account.  For more information, please visit https://www.uptrends.com/api.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package uptrends

import (
	"encoding/json"
)

// VaultItem struct for VaultItem
type VaultItem struct {
	// The unique key of this vault item
	VaultItemGuid *string `json:"VaultItemGuid,omitempty"`
	// The hash of this vault item
	Hash *string `json:"Hash,omitempty"`
	// The name of this vault item
	Name *string `json:"Name,omitempty"`
	// The value that is stored in this vault item. Not used for Certificate Archives
	Value *string `json:"Value,omitempty"`
	// The unique identifier of the vault section that this vault item belongs to
	VaultSectionGuid *string `json:"VaultSectionGuid,omitempty"`
	// The vault item type
	VaultItemType *VaultItemTypes `json:"VaultItemType,omitempty"`
	// Whether or not the vault item is considered sensitive. 
	IsSensitive *bool `json:"IsSensitive,omitempty"`
	// Notes about this vault item
	Notes *string `json:"Notes,omitempty"`
	// The UserName of a credentialset
	UserName *string `json:"UserName,omitempty"`
	// The password associated with a credentialset
	Password *string `json:"Password,omitempty"`
	// The certificate archive that is stored in this vault item, if applicable
	CertificateArchive *CertificateArchive `json:"CertificateArchive,omitempty"`
	// The file info that is stored in this vault item, if applicable
	FileInfo *FileInfo `json:"FileInfo,omitempty"`
}

// NewVaultItem instantiates a new VaultItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVaultItem() *VaultItem {
	this := VaultItem{}
	return &this
}

// NewVaultItemWithDefaults instantiates a new VaultItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVaultItemWithDefaults() *VaultItem {
	this := VaultItem{}
	return &this
}

// GetVaultItemGuid returns the VaultItemGuid field value if set, zero value otherwise.
func (o *VaultItem) GetVaultItemGuid() string {
	if o == nil || o.VaultItemGuid == nil {
		var ret string
		return ret
	}
	return *o.VaultItemGuid
}

// GetVaultItemGuidOk returns a tuple with the VaultItemGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VaultItem) GetVaultItemGuidOk() (*string, bool) {
	if o == nil || o.VaultItemGuid == nil {
		return nil, false
	}
	return o.VaultItemGuid, true
}

// HasVaultItemGuid returns a boolean if a field has been set.
func (o *VaultItem) HasVaultItemGuid() bool {
	if o != nil && o.VaultItemGuid != nil {
		return true
	}

	return false
}

// SetVaultItemGuid gets a reference to the given string and assigns it to the VaultItemGuid field.
func (o *VaultItem) SetVaultItemGuid(v string) {
	o.VaultItemGuid = &v
}

// GetHash returns the Hash field value if set, zero value otherwise.
func (o *VaultItem) GetHash() string {
	if o == nil || o.Hash == nil {
		var ret string
		return ret
	}
	return *o.Hash
}

// GetHashOk returns a tuple with the Hash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VaultItem) GetHashOk() (*string, bool) {
	if o == nil || o.Hash == nil {
		return nil, false
	}
	return o.Hash, true
}

// HasHash returns a boolean if a field has been set.
func (o *VaultItem) HasHash() bool {
	if o != nil && o.Hash != nil {
		return true
	}

	return false
}

// SetHash gets a reference to the given string and assigns it to the Hash field.
func (o *VaultItem) SetHash(v string) {
	o.Hash = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *VaultItem) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VaultItem) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *VaultItem) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *VaultItem) SetName(v string) {
	o.Name = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *VaultItem) GetValue() string {
	if o == nil || o.Value == nil {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VaultItem) GetValueOk() (*string, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *VaultItem) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *VaultItem) SetValue(v string) {
	o.Value = &v
}

// GetVaultSectionGuid returns the VaultSectionGuid field value if set, zero value otherwise.
func (o *VaultItem) GetVaultSectionGuid() string {
	if o == nil || o.VaultSectionGuid == nil {
		var ret string
		return ret
	}
	return *o.VaultSectionGuid
}

// GetVaultSectionGuidOk returns a tuple with the VaultSectionGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VaultItem) GetVaultSectionGuidOk() (*string, bool) {
	if o == nil || o.VaultSectionGuid == nil {
		return nil, false
	}
	return o.VaultSectionGuid, true
}

// HasVaultSectionGuid returns a boolean if a field has been set.
func (o *VaultItem) HasVaultSectionGuid() bool {
	if o != nil && o.VaultSectionGuid != nil {
		return true
	}

	return false
}

// SetVaultSectionGuid gets a reference to the given string and assigns it to the VaultSectionGuid field.
func (o *VaultItem) SetVaultSectionGuid(v string) {
	o.VaultSectionGuid = &v
}

// GetVaultItemType returns the VaultItemType field value if set, zero value otherwise.
func (o *VaultItem) GetVaultItemType() VaultItemTypes {
	if o == nil || o.VaultItemType == nil {
		var ret VaultItemTypes
		return ret
	}
	return *o.VaultItemType
}

// GetVaultItemTypeOk returns a tuple with the VaultItemType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VaultItem) GetVaultItemTypeOk() (*VaultItemTypes, bool) {
	if o == nil || o.VaultItemType == nil {
		return nil, false
	}
	return o.VaultItemType, true
}

// HasVaultItemType returns a boolean if a field has been set.
func (o *VaultItem) HasVaultItemType() bool {
	if o != nil && o.VaultItemType != nil {
		return true
	}

	return false
}

// SetVaultItemType gets a reference to the given VaultItemTypes and assigns it to the VaultItemType field.
func (o *VaultItem) SetVaultItemType(v VaultItemTypes) {
	o.VaultItemType = &v
}

// GetIsSensitive returns the IsSensitive field value if set, zero value otherwise.
func (o *VaultItem) GetIsSensitive() bool {
	if o == nil || o.IsSensitive == nil {
		var ret bool
		return ret
	}
	return *o.IsSensitive
}

// GetIsSensitiveOk returns a tuple with the IsSensitive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VaultItem) GetIsSensitiveOk() (*bool, bool) {
	if o == nil || o.IsSensitive == nil {
		return nil, false
	}
	return o.IsSensitive, true
}

// HasIsSensitive returns a boolean if a field has been set.
func (o *VaultItem) HasIsSensitive() bool {
	if o != nil && o.IsSensitive != nil {
		return true
	}

	return false
}

// SetIsSensitive gets a reference to the given bool and assigns it to the IsSensitive field.
func (o *VaultItem) SetIsSensitive(v bool) {
	o.IsSensitive = &v
}

// GetNotes returns the Notes field value if set, zero value otherwise.
func (o *VaultItem) GetNotes() string {
	if o == nil || o.Notes == nil {
		var ret string
		return ret
	}
	return *o.Notes
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VaultItem) GetNotesOk() (*string, bool) {
	if o == nil || o.Notes == nil {
		return nil, false
	}
	return o.Notes, true
}

// HasNotes returns a boolean if a field has been set.
func (o *VaultItem) HasNotes() bool {
	if o != nil && o.Notes != nil {
		return true
	}

	return false
}

// SetNotes gets a reference to the given string and assigns it to the Notes field.
func (o *VaultItem) SetNotes(v string) {
	o.Notes = &v
}

// GetUserName returns the UserName field value if set, zero value otherwise.
func (o *VaultItem) GetUserName() string {
	if o == nil || o.UserName == nil {
		var ret string
		return ret
	}
	return *o.UserName
}

// GetUserNameOk returns a tuple with the UserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VaultItem) GetUserNameOk() (*string, bool) {
	if o == nil || o.UserName == nil {
		return nil, false
	}
	return o.UserName, true
}

// HasUserName returns a boolean if a field has been set.
func (o *VaultItem) HasUserName() bool {
	if o != nil && o.UserName != nil {
		return true
	}

	return false
}

// SetUserName gets a reference to the given string and assigns it to the UserName field.
func (o *VaultItem) SetUserName(v string) {
	o.UserName = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *VaultItem) GetPassword() string {
	if o == nil || o.Password == nil {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VaultItem) GetPasswordOk() (*string, bool) {
	if o == nil || o.Password == nil {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *VaultItem) HasPassword() bool {
	if o != nil && o.Password != nil {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *VaultItem) SetPassword(v string) {
	o.Password = &v
}

// GetCertificateArchive returns the CertificateArchive field value if set, zero value otherwise.
func (o *VaultItem) GetCertificateArchive() CertificateArchive {
	if o == nil || o.CertificateArchive == nil {
		var ret CertificateArchive
		return ret
	}
	return *o.CertificateArchive
}

// GetCertificateArchiveOk returns a tuple with the CertificateArchive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VaultItem) GetCertificateArchiveOk() (*CertificateArchive, bool) {
	if o == nil || o.CertificateArchive == nil {
		return nil, false
	}
	return o.CertificateArchive, true
}

// HasCertificateArchive returns a boolean if a field has been set.
func (o *VaultItem) HasCertificateArchive() bool {
	if o != nil && o.CertificateArchive != nil {
		return true
	}

	return false
}

// SetCertificateArchive gets a reference to the given CertificateArchive and assigns it to the CertificateArchive field.
func (o *VaultItem) SetCertificateArchive(v CertificateArchive) {
	o.CertificateArchive = &v
}

// GetFileInfo returns the FileInfo field value if set, zero value otherwise.
func (o *VaultItem) GetFileInfo() FileInfo {
	if o == nil || o.FileInfo == nil {
		var ret FileInfo
		return ret
	}
	return *o.FileInfo
}

// GetFileInfoOk returns a tuple with the FileInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VaultItem) GetFileInfoOk() (*FileInfo, bool) {
	if o == nil || o.FileInfo == nil {
		return nil, false
	}
	return o.FileInfo, true
}

// HasFileInfo returns a boolean if a field has been set.
func (o *VaultItem) HasFileInfo() bool {
	if o != nil && o.FileInfo != nil {
		return true
	}

	return false
}

// SetFileInfo gets a reference to the given FileInfo and assigns it to the FileInfo field.
func (o *VaultItem) SetFileInfo(v FileInfo) {
	o.FileInfo = &v
}

func (o VaultItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.VaultItemGuid != nil {
		toSerialize["VaultItemGuid"] = o.VaultItemGuid
	}
	if o.Hash != nil {
		toSerialize["Hash"] = o.Hash
	}
	if o.Name != nil {
		toSerialize["Name"] = o.Name
	}
	if o.Value != nil {
		toSerialize["Value"] = o.Value
	}
	if o.VaultSectionGuid != nil {
		toSerialize["VaultSectionGuid"] = o.VaultSectionGuid
	}
	if o.VaultItemType != nil {
		toSerialize["VaultItemType"] = o.VaultItemType
	}
	if o.IsSensitive != nil {
		toSerialize["IsSensitive"] = o.IsSensitive
	}
	if o.Notes != nil {
		toSerialize["Notes"] = o.Notes
	}
	if o.UserName != nil {
		toSerialize["UserName"] = o.UserName
	}
	if o.Password != nil {
		toSerialize["Password"] = o.Password
	}
	if o.CertificateArchive != nil {
		toSerialize["CertificateArchive"] = o.CertificateArchive
	}
	if o.FileInfo != nil {
		toSerialize["FileInfo"] = o.FileInfo
	}
	return json.Marshal(toSerialize)
}

type NullableVaultItem struct {
	value *VaultItem
	isSet bool
}

func (v NullableVaultItem) Get() *VaultItem {
	return v.value
}

func (v *NullableVaultItem) Set(val *VaultItem) {
	v.value = val
	v.isSet = true
}

func (v NullableVaultItem) IsSet() bool {
	return v.isSet
}

func (v *NullableVaultItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVaultItem(val *VaultItem) *NullableVaultItem {
	return &NullableVaultItem{value: val, isSet: true}
}

func (v NullableVaultItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVaultItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


