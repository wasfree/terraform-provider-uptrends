/*
Uptrends API v4

This document describes Uptrends API version 4. This Swagger environment also lets you execute API methods directly.  Please note that this is not a sandbox environment: these API methods operate directly on your actual Uptrends account.  For more information, please visit https://www.uptrends.com/api.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package uptrends

import (
	"encoding/json"
	"time"
)

// AlertAttributes Alert attributes 
type AlertAttributes struct {
	// Alert type indicating if this was an Error or Ok alert.
	AlertType AlertType `json:"AlertType"`
	// The monitor identifier.
	MonitorGuid string `json:"MonitorGuid"`
	// Date/time stamp of the alert.
	Timestamp time.Time `json:"Timestamp"`
	// Date/time stamp of the first monitor check.
	FirstError time.Time `json:"FirstError"`
	// The Id of the monitor check that triggered this alert.
	MonitorCheckId int64 `json:"MonitorCheckId"`
	// The Id of the first monitor check error that led to this alert.
	FirstErrorMonitorCheckId int64 `json:"FirstErrorMonitorCheckId"`
	// A text value that describes the error that was found, or OK if no error was found.
	ErrorDescription *string `json:"ErrorDescription,omitempty"`
	// Any additional error information, if available.
	ErrorMessage *string `json:"ErrorMessage,omitempty"`
	// The incident key of this alert.
	IncidentKey *string `json:"IncidentKey,omitempty"`
}

// NewAlertAttributes instantiates a new AlertAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlertAttributes(alertType AlertType, monitorGuid string, timestamp time.Time, firstError time.Time, monitorCheckId int64, firstErrorMonitorCheckId int64) *AlertAttributes {
	this := AlertAttributes{}
	this.AlertType = alertType
	this.MonitorGuid = monitorGuid
	this.Timestamp = timestamp
	this.FirstError = firstError
	this.MonitorCheckId = monitorCheckId
	this.FirstErrorMonitorCheckId = firstErrorMonitorCheckId
	return &this
}

// NewAlertAttributesWithDefaults instantiates a new AlertAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlertAttributesWithDefaults() *AlertAttributes {
	this := AlertAttributes{}
	return &this
}

// GetAlertType returns the AlertType field value
func (o *AlertAttributes) GetAlertType() AlertType {
	if o == nil {
		var ret AlertType
		return ret
	}

	return o.AlertType
}

// GetAlertTypeOk returns a tuple with the AlertType field value
// and a boolean to check if the value has been set.
func (o *AlertAttributes) GetAlertTypeOk() (*AlertType, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AlertType, true
}

// SetAlertType sets field value
func (o *AlertAttributes) SetAlertType(v AlertType) {
	o.AlertType = v
}

// GetMonitorGuid returns the MonitorGuid field value
func (o *AlertAttributes) GetMonitorGuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MonitorGuid
}

// GetMonitorGuidOk returns a tuple with the MonitorGuid field value
// and a boolean to check if the value has been set.
func (o *AlertAttributes) GetMonitorGuidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.MonitorGuid, true
}

// SetMonitorGuid sets field value
func (o *AlertAttributes) SetMonitorGuid(v string) {
	o.MonitorGuid = v
}

// GetTimestamp returns the Timestamp field value
func (o *AlertAttributes) GetTimestamp() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value
// and a boolean to check if the value has been set.
func (o *AlertAttributes) GetTimestampOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Timestamp, true
}

// SetTimestamp sets field value
func (o *AlertAttributes) SetTimestamp(v time.Time) {
	o.Timestamp = v
}

// GetFirstError returns the FirstError field value
func (o *AlertAttributes) GetFirstError() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.FirstError
}

// GetFirstErrorOk returns a tuple with the FirstError field value
// and a boolean to check if the value has been set.
func (o *AlertAttributes) GetFirstErrorOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.FirstError, true
}

// SetFirstError sets field value
func (o *AlertAttributes) SetFirstError(v time.Time) {
	o.FirstError = v
}

// GetMonitorCheckId returns the MonitorCheckId field value
func (o *AlertAttributes) GetMonitorCheckId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.MonitorCheckId
}

// GetMonitorCheckIdOk returns a tuple with the MonitorCheckId field value
// and a boolean to check if the value has been set.
func (o *AlertAttributes) GetMonitorCheckIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.MonitorCheckId, true
}

// SetMonitorCheckId sets field value
func (o *AlertAttributes) SetMonitorCheckId(v int64) {
	o.MonitorCheckId = v
}

// GetFirstErrorMonitorCheckId returns the FirstErrorMonitorCheckId field value
func (o *AlertAttributes) GetFirstErrorMonitorCheckId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.FirstErrorMonitorCheckId
}

// GetFirstErrorMonitorCheckIdOk returns a tuple with the FirstErrorMonitorCheckId field value
// and a boolean to check if the value has been set.
func (o *AlertAttributes) GetFirstErrorMonitorCheckIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.FirstErrorMonitorCheckId, true
}

// SetFirstErrorMonitorCheckId sets field value
func (o *AlertAttributes) SetFirstErrorMonitorCheckId(v int64) {
	o.FirstErrorMonitorCheckId = v
}

// GetErrorDescription returns the ErrorDescription field value if set, zero value otherwise.
func (o *AlertAttributes) GetErrorDescription() string {
	if o == nil || o.ErrorDescription == nil {
		var ret string
		return ret
	}
	return *o.ErrorDescription
}

// GetErrorDescriptionOk returns a tuple with the ErrorDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertAttributes) GetErrorDescriptionOk() (*string, bool) {
	if o == nil || o.ErrorDescription == nil {
		return nil, false
	}
	return o.ErrorDescription, true
}

// HasErrorDescription returns a boolean if a field has been set.
func (o *AlertAttributes) HasErrorDescription() bool {
	if o != nil && o.ErrorDescription != nil {
		return true
	}

	return false
}

// SetErrorDescription gets a reference to the given string and assigns it to the ErrorDescription field.
func (o *AlertAttributes) SetErrorDescription(v string) {
	o.ErrorDescription = &v
}

// GetErrorMessage returns the ErrorMessage field value if set, zero value otherwise.
func (o *AlertAttributes) GetErrorMessage() string {
	if o == nil || o.ErrorMessage == nil {
		var ret string
		return ret
	}
	return *o.ErrorMessage
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertAttributes) GetErrorMessageOk() (*string, bool) {
	if o == nil || o.ErrorMessage == nil {
		return nil, false
	}
	return o.ErrorMessage, true
}

// HasErrorMessage returns a boolean if a field has been set.
func (o *AlertAttributes) HasErrorMessage() bool {
	if o != nil && o.ErrorMessage != nil {
		return true
	}

	return false
}

// SetErrorMessage gets a reference to the given string and assigns it to the ErrorMessage field.
func (o *AlertAttributes) SetErrorMessage(v string) {
	o.ErrorMessage = &v
}

// GetIncidentKey returns the IncidentKey field value if set, zero value otherwise.
func (o *AlertAttributes) GetIncidentKey() string {
	if o == nil || o.IncidentKey == nil {
		var ret string
		return ret
	}
	return *o.IncidentKey
}

// GetIncidentKeyOk returns a tuple with the IncidentKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertAttributes) GetIncidentKeyOk() (*string, bool) {
	if o == nil || o.IncidentKey == nil {
		return nil, false
	}
	return o.IncidentKey, true
}

// HasIncidentKey returns a boolean if a field has been set.
func (o *AlertAttributes) HasIncidentKey() bool {
	if o != nil && o.IncidentKey != nil {
		return true
	}

	return false
}

// SetIncidentKey gets a reference to the given string and assigns it to the IncidentKey field.
func (o *AlertAttributes) SetIncidentKey(v string) {
	o.IncidentKey = &v
}

func (o AlertAttributes) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["AlertType"] = o.AlertType
	}
	if true {
		toSerialize["MonitorGuid"] = o.MonitorGuid
	}
	if true {
		toSerialize["Timestamp"] = o.Timestamp
	}
	if true {
		toSerialize["FirstError"] = o.FirstError
	}
	if true {
		toSerialize["MonitorCheckId"] = o.MonitorCheckId
	}
	if true {
		toSerialize["FirstErrorMonitorCheckId"] = o.FirstErrorMonitorCheckId
	}
	if o.ErrorDescription != nil {
		toSerialize["ErrorDescription"] = o.ErrorDescription
	}
	if o.ErrorMessage != nil {
		toSerialize["ErrorMessage"] = o.ErrorMessage
	}
	if o.IncidentKey != nil {
		toSerialize["IncidentKey"] = o.IncidentKey
	}
	return json.Marshal(toSerialize)
}

type NullableAlertAttributes struct {
	value *AlertAttributes
	isSet bool
}

func (v NullableAlertAttributes) Get() *AlertAttributes {
	return v.value
}

func (v *NullableAlertAttributes) Set(val *AlertAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableAlertAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableAlertAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlertAttributes(val *AlertAttributes) *NullableAlertAttributes {
	return &NullableAlertAttributes{value: val, isSet: true}
}

func (v NullableAlertAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlertAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


