/*
Uptrends API v4

This document describes Uptrends API version 4. This Swagger environment also lets you execute API methods directly.  Please note that this is not a sandbox environment: these API methods operate directly on your actual Uptrends account.  For more information, please visit https://www.uptrends.com/api.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package uptrends

import (
	"encoding/json"
)

// RumWebsite struct for RumWebsite
type RumWebsite struct {
	RumWebsiteId string `json:"RumWebsiteId"`
	Description *string `json:"Description,omitempty"`
}

// NewRumWebsite instantiates a new RumWebsite object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRumWebsite(rumWebsiteId string) *RumWebsite {
	this := RumWebsite{}
	this.RumWebsiteId = rumWebsiteId
	return &this
}

// NewRumWebsiteWithDefaults instantiates a new RumWebsite object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRumWebsiteWithDefaults() *RumWebsite {
	this := RumWebsite{}
	return &this
}

// GetRumWebsiteId returns the RumWebsiteId field value
func (o *RumWebsite) GetRumWebsiteId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RumWebsiteId
}

// GetRumWebsiteIdOk returns a tuple with the RumWebsiteId field value
// and a boolean to check if the value has been set.
func (o *RumWebsite) GetRumWebsiteIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.RumWebsiteId, true
}

// SetRumWebsiteId sets field value
func (o *RumWebsite) SetRumWebsiteId(v string) {
	o.RumWebsiteId = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *RumWebsite) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RumWebsite) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
    return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *RumWebsite) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *RumWebsite) SetDescription(v string) {
	o.Description = &v
}

func (o RumWebsite) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["RumWebsiteId"] = o.RumWebsiteId
	}
	if !isNil(o.Description) {
		toSerialize["Description"] = o.Description
	}
	return json.Marshal(toSerialize)
}

type NullableRumWebsite struct {
	value *RumWebsite
	isSet bool
}

func (v NullableRumWebsite) Get() *RumWebsite {
	return v.value
}

func (v *NullableRumWebsite) Set(val *RumWebsite) {
	v.value = val
	v.isSet = true
}

func (v NullableRumWebsite) IsSet() bool {
	return v.isSet
}

func (v *NullableRumWebsite) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRumWebsite(val *RumWebsite) *NullableRumWebsite {
	return &NullableRumWebsite{value: val, isSet: true}
}

func (v NullableRumWebsite) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRumWebsite) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


