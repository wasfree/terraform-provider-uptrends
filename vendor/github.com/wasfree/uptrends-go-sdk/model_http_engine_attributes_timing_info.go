/*
Uptrends API v4

This document describes Uptrends API version 4. This Swagger environment also lets you execute API methods directly.  Please note that this is not a sandbox environment: these API methods operate directly on your actual Uptrends account.  For more information, please visit https://www.uptrends.com/api.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package uptrends

import (
	"encoding/json"
)

// HttpEngineAttributesTimingInfo Timing info
type HttpEngineAttributesTimingInfo struct {
	Description *string `json:"Description,omitempty"`
	StartUtc map[string]interface{} `json:"StartUtc"`
	EndUtc map[string]interface{} `json:"EndUtc"`
	ElapsedMilliseconds int64 `json:"ElapsedMilliseconds"`
	DelayMilliseconds int64 `json:"DelayMilliseconds"`
	SubTimingInfos []StepTimingInfo `json:"SubTimingInfos,omitempty"`
	// If true, this TimingInfo should be counted as part of the sum of its siblings. If false, the TimingInfo should be discarded (e.g. for PreDelays we don't want to count).
	IsValid bool `json:"IsValid"`
}

// NewHttpEngineAttributesTimingInfo instantiates a new HttpEngineAttributesTimingInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHttpEngineAttributesTimingInfo(startUtc map[string]interface{}, endUtc map[string]interface{}, elapsedMilliseconds int64, delayMilliseconds int64, isValid bool) *HttpEngineAttributesTimingInfo {
	this := HttpEngineAttributesTimingInfo{}
	this.StartUtc = startUtc
	this.EndUtc = endUtc
	this.ElapsedMilliseconds = elapsedMilliseconds
	this.DelayMilliseconds = delayMilliseconds
	this.IsValid = isValid
	return &this
}

// NewHttpEngineAttributesTimingInfoWithDefaults instantiates a new HttpEngineAttributesTimingInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHttpEngineAttributesTimingInfoWithDefaults() *HttpEngineAttributesTimingInfo {
	this := HttpEngineAttributesTimingInfo{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *HttpEngineAttributesTimingInfo) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpEngineAttributesTimingInfo) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
    return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *HttpEngineAttributesTimingInfo) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *HttpEngineAttributesTimingInfo) SetDescription(v string) {
	o.Description = &v
}

// GetStartUtc returns the StartUtc field value
func (o *HttpEngineAttributesTimingInfo) GetStartUtc() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.StartUtc
}

// GetStartUtcOk returns a tuple with the StartUtc field value
// and a boolean to check if the value has been set.
func (o *HttpEngineAttributesTimingInfo) GetStartUtcOk() (map[string]interface{}, bool) {
	if o == nil {
    return map[string]interface{}{}, false
	}
	return o.StartUtc, true
}

// SetStartUtc sets field value
func (o *HttpEngineAttributesTimingInfo) SetStartUtc(v map[string]interface{}) {
	o.StartUtc = v
}

// GetEndUtc returns the EndUtc field value
func (o *HttpEngineAttributesTimingInfo) GetEndUtc() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.EndUtc
}

// GetEndUtcOk returns a tuple with the EndUtc field value
// and a boolean to check if the value has been set.
func (o *HttpEngineAttributesTimingInfo) GetEndUtcOk() (map[string]interface{}, bool) {
	if o == nil {
    return map[string]interface{}{}, false
	}
	return o.EndUtc, true
}

// SetEndUtc sets field value
func (o *HttpEngineAttributesTimingInfo) SetEndUtc(v map[string]interface{}) {
	o.EndUtc = v
}

// GetElapsedMilliseconds returns the ElapsedMilliseconds field value
func (o *HttpEngineAttributesTimingInfo) GetElapsedMilliseconds() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ElapsedMilliseconds
}

// GetElapsedMillisecondsOk returns a tuple with the ElapsedMilliseconds field value
// and a boolean to check if the value has been set.
func (o *HttpEngineAttributesTimingInfo) GetElapsedMillisecondsOk() (*int64, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ElapsedMilliseconds, true
}

// SetElapsedMilliseconds sets field value
func (o *HttpEngineAttributesTimingInfo) SetElapsedMilliseconds(v int64) {
	o.ElapsedMilliseconds = v
}

// GetDelayMilliseconds returns the DelayMilliseconds field value
func (o *HttpEngineAttributesTimingInfo) GetDelayMilliseconds() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.DelayMilliseconds
}

// GetDelayMillisecondsOk returns a tuple with the DelayMilliseconds field value
// and a boolean to check if the value has been set.
func (o *HttpEngineAttributesTimingInfo) GetDelayMillisecondsOk() (*int64, bool) {
	if o == nil {
    return nil, false
	}
	return &o.DelayMilliseconds, true
}

// SetDelayMilliseconds sets field value
func (o *HttpEngineAttributesTimingInfo) SetDelayMilliseconds(v int64) {
	o.DelayMilliseconds = v
}

// GetSubTimingInfos returns the SubTimingInfos field value if set, zero value otherwise.
func (o *HttpEngineAttributesTimingInfo) GetSubTimingInfos() []StepTimingInfo {
	if o == nil || isNil(o.SubTimingInfos) {
		var ret []StepTimingInfo
		return ret
	}
	return o.SubTimingInfos
}

// GetSubTimingInfosOk returns a tuple with the SubTimingInfos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpEngineAttributesTimingInfo) GetSubTimingInfosOk() ([]StepTimingInfo, bool) {
	if o == nil || isNil(o.SubTimingInfos) {
    return nil, false
	}
	return o.SubTimingInfos, true
}

// HasSubTimingInfos returns a boolean if a field has been set.
func (o *HttpEngineAttributesTimingInfo) HasSubTimingInfos() bool {
	if o != nil && !isNil(o.SubTimingInfos) {
		return true
	}

	return false
}

// SetSubTimingInfos gets a reference to the given []StepTimingInfo and assigns it to the SubTimingInfos field.
func (o *HttpEngineAttributesTimingInfo) SetSubTimingInfos(v []StepTimingInfo) {
	o.SubTimingInfos = v
}

// GetIsValid returns the IsValid field value
func (o *HttpEngineAttributesTimingInfo) GetIsValid() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsValid
}

// GetIsValidOk returns a tuple with the IsValid field value
// and a boolean to check if the value has been set.
func (o *HttpEngineAttributesTimingInfo) GetIsValidOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return &o.IsValid, true
}

// SetIsValid sets field value
func (o *HttpEngineAttributesTimingInfo) SetIsValid(v bool) {
	o.IsValid = v
}

func (o HttpEngineAttributesTimingInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Description) {
		toSerialize["Description"] = o.Description
	}
	if true {
		toSerialize["StartUtc"] = o.StartUtc
	}
	if true {
		toSerialize["EndUtc"] = o.EndUtc
	}
	if true {
		toSerialize["ElapsedMilliseconds"] = o.ElapsedMilliseconds
	}
	if true {
		toSerialize["DelayMilliseconds"] = o.DelayMilliseconds
	}
	if !isNil(o.SubTimingInfos) {
		toSerialize["SubTimingInfos"] = o.SubTimingInfos
	}
	if true {
		toSerialize["IsValid"] = o.IsValid
	}
	return json.Marshal(toSerialize)
}

type NullableHttpEngineAttributesTimingInfo struct {
	value *HttpEngineAttributesTimingInfo
	isSet bool
}

func (v NullableHttpEngineAttributesTimingInfo) Get() *HttpEngineAttributesTimingInfo {
	return v.value
}

func (v *NullableHttpEngineAttributesTimingInfo) Set(val *HttpEngineAttributesTimingInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableHttpEngineAttributesTimingInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableHttpEngineAttributesTimingInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHttpEngineAttributesTimingInfo(val *HttpEngineAttributesTimingInfo) *NullableHttpEngineAttributesTimingInfo {
	return &NullableHttpEngineAttributesTimingInfo{value: val, isSet: true}
}

func (v NullableHttpEngineAttributesTimingInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHttpEngineAttributesTimingInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


