/*
Uptrends API v4

This document describes Uptrends API version 4. This Swagger environment also lets you execute API methods directly.  Please note that this is not a sandbox environment: these API methods operate directly on your actual Uptrends account.  For more information, please visit https://www.uptrends.com/api.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package uptrends

import (
	"encoding/json"
)

// MsaStep struct for MsaStep
type MsaStep struct {
	Url *string `json:"Url,omitempty"`
	Method *string `json:"Method,omitempty"`
	// The body that will be send in the request. Only used if BodyType equals Raw
	Body *string `json:"Body,omitempty"`
	// Determines what kind of body the request will have.
	BodyType *MsaBodyType `json:"BodyType,omitempty"`
	// The guid of the vaultfile that will be send in the request. Only used if BodyType equals VaultFiles
	VaultFileId *string `json:"VaultFileId,omitempty"`
	RequestHeaders *[]ApiHttpHeaderValue `json:"RequestHeaders,omitempty"`
	Variables *[]ApiVariableDefinition `json:"Variables,omitempty"`
	Assertions *[]ApiAssertion `json:"Assertions,omitempty"`
	Name *string `json:"Name,omitempty"`
	UseFixedClientCertificate bool `json:"UseFixedClientCertificate"`
	Authentication *ApiAuthenticationInfo `json:"Authentication,omitempty"`
	IgnoreCertificateErrors bool `json:"IgnoreCertificateErrors"`
	ClientCertificateVaultItem *string `json:"ClientCertificateVaultItem,omitempty"`
	Delay int32 `json:"Delay"`
	StepType MsaStepType `json:"StepType"`
	RetryUntilSuccessful bool `json:"RetryUntilSuccessful"`
	MaxAttempts int32 `json:"MaxAttempts"`
}

// NewMsaStep instantiates a new MsaStep object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMsaStep(useFixedClientCertificate bool, ignoreCertificateErrors bool, delay int32, stepType MsaStepType, retryUntilSuccessful bool, maxAttempts int32) *MsaStep {
	this := MsaStep{}
	this.UseFixedClientCertificate = useFixedClientCertificate
	this.IgnoreCertificateErrors = ignoreCertificateErrors
	this.Delay = delay
	this.StepType = stepType
	this.RetryUntilSuccessful = retryUntilSuccessful
	this.MaxAttempts = maxAttempts
	return &this
}

// NewMsaStepWithDefaults instantiates a new MsaStep object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMsaStepWithDefaults() *MsaStep {
	this := MsaStep{}
	return &this
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *MsaStep) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MsaStep) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *MsaStep) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *MsaStep) SetUrl(v string) {
	o.Url = &v
}

// GetMethod returns the Method field value if set, zero value otherwise.
func (o *MsaStep) GetMethod() string {
	if o == nil || o.Method == nil {
		var ret string
		return ret
	}
	return *o.Method
}

// GetMethodOk returns a tuple with the Method field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MsaStep) GetMethodOk() (*string, bool) {
	if o == nil || o.Method == nil {
		return nil, false
	}
	return o.Method, true
}

// HasMethod returns a boolean if a field has been set.
func (o *MsaStep) HasMethod() bool {
	if o != nil && o.Method != nil {
		return true
	}

	return false
}

// SetMethod gets a reference to the given string and assigns it to the Method field.
func (o *MsaStep) SetMethod(v string) {
	o.Method = &v
}

// GetBody returns the Body field value if set, zero value otherwise.
func (o *MsaStep) GetBody() string {
	if o == nil || o.Body == nil {
		var ret string
		return ret
	}
	return *o.Body
}

// GetBodyOk returns a tuple with the Body field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MsaStep) GetBodyOk() (*string, bool) {
	if o == nil || o.Body == nil {
		return nil, false
	}
	return o.Body, true
}

// HasBody returns a boolean if a field has been set.
func (o *MsaStep) HasBody() bool {
	if o != nil && o.Body != nil {
		return true
	}

	return false
}

// SetBody gets a reference to the given string and assigns it to the Body field.
func (o *MsaStep) SetBody(v string) {
	o.Body = &v
}

// GetBodyType returns the BodyType field value if set, zero value otherwise.
func (o *MsaStep) GetBodyType() MsaBodyType {
	if o == nil || o.BodyType == nil {
		var ret MsaBodyType
		return ret
	}
	return *o.BodyType
}

// GetBodyTypeOk returns a tuple with the BodyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MsaStep) GetBodyTypeOk() (*MsaBodyType, bool) {
	if o == nil || o.BodyType == nil {
		return nil, false
	}
	return o.BodyType, true
}

// HasBodyType returns a boolean if a field has been set.
func (o *MsaStep) HasBodyType() bool {
	if o != nil && o.BodyType != nil {
		return true
	}

	return false
}

// SetBodyType gets a reference to the given MsaBodyType and assigns it to the BodyType field.
func (o *MsaStep) SetBodyType(v MsaBodyType) {
	o.BodyType = &v
}

// GetVaultFileId returns the VaultFileId field value if set, zero value otherwise.
func (o *MsaStep) GetVaultFileId() string {
	if o == nil || o.VaultFileId == nil {
		var ret string
		return ret
	}
	return *o.VaultFileId
}

// GetVaultFileIdOk returns a tuple with the VaultFileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MsaStep) GetVaultFileIdOk() (*string, bool) {
	if o == nil || o.VaultFileId == nil {
		return nil, false
	}
	return o.VaultFileId, true
}

// HasVaultFileId returns a boolean if a field has been set.
func (o *MsaStep) HasVaultFileId() bool {
	if o != nil && o.VaultFileId != nil {
		return true
	}

	return false
}

// SetVaultFileId gets a reference to the given string and assigns it to the VaultFileId field.
func (o *MsaStep) SetVaultFileId(v string) {
	o.VaultFileId = &v
}

// GetRequestHeaders returns the RequestHeaders field value if set, zero value otherwise.
func (o *MsaStep) GetRequestHeaders() []ApiHttpHeaderValue {
	if o == nil || o.RequestHeaders == nil {
		var ret []ApiHttpHeaderValue
		return ret
	}
	return *o.RequestHeaders
}

// GetRequestHeadersOk returns a tuple with the RequestHeaders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MsaStep) GetRequestHeadersOk() (*[]ApiHttpHeaderValue, bool) {
	if o == nil || o.RequestHeaders == nil {
		return nil, false
	}
	return o.RequestHeaders, true
}

// HasRequestHeaders returns a boolean if a field has been set.
func (o *MsaStep) HasRequestHeaders() bool {
	if o != nil && o.RequestHeaders != nil {
		return true
	}

	return false
}

// SetRequestHeaders gets a reference to the given []ApiHttpHeaderValue and assigns it to the RequestHeaders field.
func (o *MsaStep) SetRequestHeaders(v []ApiHttpHeaderValue) {
	o.RequestHeaders = &v
}

// GetVariables returns the Variables field value if set, zero value otherwise.
func (o *MsaStep) GetVariables() []ApiVariableDefinition {
	if o == nil || o.Variables == nil {
		var ret []ApiVariableDefinition
		return ret
	}
	return *o.Variables
}

// GetVariablesOk returns a tuple with the Variables field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MsaStep) GetVariablesOk() (*[]ApiVariableDefinition, bool) {
	if o == nil || o.Variables == nil {
		return nil, false
	}
	return o.Variables, true
}

// HasVariables returns a boolean if a field has been set.
func (o *MsaStep) HasVariables() bool {
	if o != nil && o.Variables != nil {
		return true
	}

	return false
}

// SetVariables gets a reference to the given []ApiVariableDefinition and assigns it to the Variables field.
func (o *MsaStep) SetVariables(v []ApiVariableDefinition) {
	o.Variables = &v
}

// GetAssertions returns the Assertions field value if set, zero value otherwise.
func (o *MsaStep) GetAssertions() []ApiAssertion {
	if o == nil || o.Assertions == nil {
		var ret []ApiAssertion
		return ret
	}
	return *o.Assertions
}

// GetAssertionsOk returns a tuple with the Assertions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MsaStep) GetAssertionsOk() (*[]ApiAssertion, bool) {
	if o == nil || o.Assertions == nil {
		return nil, false
	}
	return o.Assertions, true
}

// HasAssertions returns a boolean if a field has been set.
func (o *MsaStep) HasAssertions() bool {
	if o != nil && o.Assertions != nil {
		return true
	}

	return false
}

// SetAssertions gets a reference to the given []ApiAssertion and assigns it to the Assertions field.
func (o *MsaStep) SetAssertions(v []ApiAssertion) {
	o.Assertions = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *MsaStep) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MsaStep) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *MsaStep) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *MsaStep) SetName(v string) {
	o.Name = &v
}

// GetUseFixedClientCertificate returns the UseFixedClientCertificate field value
func (o *MsaStep) GetUseFixedClientCertificate() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.UseFixedClientCertificate
}

// GetUseFixedClientCertificateOk returns a tuple with the UseFixedClientCertificate field value
// and a boolean to check if the value has been set.
func (o *MsaStep) GetUseFixedClientCertificateOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.UseFixedClientCertificate, true
}

// SetUseFixedClientCertificate sets field value
func (o *MsaStep) SetUseFixedClientCertificate(v bool) {
	o.UseFixedClientCertificate = v
}

// GetAuthentication returns the Authentication field value if set, zero value otherwise.
func (o *MsaStep) GetAuthentication() ApiAuthenticationInfo {
	if o == nil || o.Authentication == nil {
		var ret ApiAuthenticationInfo
		return ret
	}
	return *o.Authentication
}

// GetAuthenticationOk returns a tuple with the Authentication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MsaStep) GetAuthenticationOk() (*ApiAuthenticationInfo, bool) {
	if o == nil || o.Authentication == nil {
		return nil, false
	}
	return o.Authentication, true
}

// HasAuthentication returns a boolean if a field has been set.
func (o *MsaStep) HasAuthentication() bool {
	if o != nil && o.Authentication != nil {
		return true
	}

	return false
}

// SetAuthentication gets a reference to the given ApiAuthenticationInfo and assigns it to the Authentication field.
func (o *MsaStep) SetAuthentication(v ApiAuthenticationInfo) {
	o.Authentication = &v
}

// GetIgnoreCertificateErrors returns the IgnoreCertificateErrors field value
func (o *MsaStep) GetIgnoreCertificateErrors() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IgnoreCertificateErrors
}

// GetIgnoreCertificateErrorsOk returns a tuple with the IgnoreCertificateErrors field value
// and a boolean to check if the value has been set.
func (o *MsaStep) GetIgnoreCertificateErrorsOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.IgnoreCertificateErrors, true
}

// SetIgnoreCertificateErrors sets field value
func (o *MsaStep) SetIgnoreCertificateErrors(v bool) {
	o.IgnoreCertificateErrors = v
}

// GetClientCertificateVaultItem returns the ClientCertificateVaultItem field value if set, zero value otherwise.
func (o *MsaStep) GetClientCertificateVaultItem() string {
	if o == nil || o.ClientCertificateVaultItem == nil {
		var ret string
		return ret
	}
	return *o.ClientCertificateVaultItem
}

// GetClientCertificateVaultItemOk returns a tuple with the ClientCertificateVaultItem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MsaStep) GetClientCertificateVaultItemOk() (*string, bool) {
	if o == nil || o.ClientCertificateVaultItem == nil {
		return nil, false
	}
	return o.ClientCertificateVaultItem, true
}

// HasClientCertificateVaultItem returns a boolean if a field has been set.
func (o *MsaStep) HasClientCertificateVaultItem() bool {
	if o != nil && o.ClientCertificateVaultItem != nil {
		return true
	}

	return false
}

// SetClientCertificateVaultItem gets a reference to the given string and assigns it to the ClientCertificateVaultItem field.
func (o *MsaStep) SetClientCertificateVaultItem(v string) {
	o.ClientCertificateVaultItem = &v
}

// GetDelay returns the Delay field value
func (o *MsaStep) GetDelay() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Delay
}

// GetDelayOk returns a tuple with the Delay field value
// and a boolean to check if the value has been set.
func (o *MsaStep) GetDelayOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Delay, true
}

// SetDelay sets field value
func (o *MsaStep) SetDelay(v int32) {
	o.Delay = v
}

// GetStepType returns the StepType field value
func (o *MsaStep) GetStepType() MsaStepType {
	if o == nil {
		var ret MsaStepType
		return ret
	}

	return o.StepType
}

// GetStepTypeOk returns a tuple with the StepType field value
// and a boolean to check if the value has been set.
func (o *MsaStep) GetStepTypeOk() (*MsaStepType, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.StepType, true
}

// SetStepType sets field value
func (o *MsaStep) SetStepType(v MsaStepType) {
	o.StepType = v
}

// GetRetryUntilSuccessful returns the RetryUntilSuccessful field value
func (o *MsaStep) GetRetryUntilSuccessful() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.RetryUntilSuccessful
}

// GetRetryUntilSuccessfulOk returns a tuple with the RetryUntilSuccessful field value
// and a boolean to check if the value has been set.
func (o *MsaStep) GetRetryUntilSuccessfulOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RetryUntilSuccessful, true
}

// SetRetryUntilSuccessful sets field value
func (o *MsaStep) SetRetryUntilSuccessful(v bool) {
	o.RetryUntilSuccessful = v
}

// GetMaxAttempts returns the MaxAttempts field value
func (o *MsaStep) GetMaxAttempts() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MaxAttempts
}

// GetMaxAttemptsOk returns a tuple with the MaxAttempts field value
// and a boolean to check if the value has been set.
func (o *MsaStep) GetMaxAttemptsOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.MaxAttempts, true
}

// SetMaxAttempts sets field value
func (o *MsaStep) SetMaxAttempts(v int32) {
	o.MaxAttempts = v
}

func (o MsaStep) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Url != nil {
		toSerialize["Url"] = o.Url
	}
	if o.Method != nil {
		toSerialize["Method"] = o.Method
	}
	if o.Body != nil {
		toSerialize["Body"] = o.Body
	}
	if o.BodyType != nil {
		toSerialize["BodyType"] = o.BodyType
	}
	if o.VaultFileId != nil {
		toSerialize["VaultFileId"] = o.VaultFileId
	}
	if o.RequestHeaders != nil {
		toSerialize["RequestHeaders"] = o.RequestHeaders
	}
	if o.Variables != nil {
		toSerialize["Variables"] = o.Variables
	}
	if o.Assertions != nil {
		toSerialize["Assertions"] = o.Assertions
	}
	if o.Name != nil {
		toSerialize["Name"] = o.Name
	}
	if true {
		toSerialize["UseFixedClientCertificate"] = o.UseFixedClientCertificate
	}
	if o.Authentication != nil {
		toSerialize["Authentication"] = o.Authentication
	}
	if true {
		toSerialize["IgnoreCertificateErrors"] = o.IgnoreCertificateErrors
	}
	if o.ClientCertificateVaultItem != nil {
		toSerialize["ClientCertificateVaultItem"] = o.ClientCertificateVaultItem
	}
	if true {
		toSerialize["Delay"] = o.Delay
	}
	if true {
		toSerialize["StepType"] = o.StepType
	}
	if true {
		toSerialize["RetryUntilSuccessful"] = o.RetryUntilSuccessful
	}
	if true {
		toSerialize["MaxAttempts"] = o.MaxAttempts
	}
	return json.Marshal(toSerialize)
}

type NullableMsaStep struct {
	value *MsaStep
	isSet bool
}

func (v NullableMsaStep) Get() *MsaStep {
	return v.value
}

func (v *NullableMsaStep) Set(val *MsaStep) {
	v.value = val
	v.isSet = true
}

func (v NullableMsaStep) IsSet() bool {
	return v.isSet
}

func (v *NullableMsaStep) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMsaStep(val *MsaStep) *NullableMsaStep {
	return &NullableMsaStep{value: val, isSet: true}
}

func (v NullableMsaStep) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMsaStep) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


