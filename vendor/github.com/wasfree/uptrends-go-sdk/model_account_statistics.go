/*
 * Uptrends API v4
 *
 * This document describes Uptrends API version 4. This Swagger environment also lets you execute API methods directly.  Please note that this is not a sandbox environment: these API methods operate directly on your actual Uptrends account.  For more information, please visit https://www.uptrends.com/api.
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package uptrends

import (
	"encoding/json"
	"time"
)

// AccountStatistics struct for AccountStatistics
type AccountStatistics struct {
	AccountId *string `json:"AccountId,omitempty"`
	ExpirationDate *time.Time `json:"ExpirationDate,omitempty"`
	MonitorQuota *MonitorQuota `json:"MonitorQuota,omitempty"`
	OperatorQuota *OperatorQuota `json:"OperatorQuota,omitempty"`
	RemainingMessageCredits *int32 `json:"RemainingMessageCredits,omitempty"`
}

// NewAccountStatistics instantiates a new AccountStatistics object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountStatistics() *AccountStatistics {
	this := AccountStatistics{}
	return &this
}

// NewAccountStatisticsWithDefaults instantiates a new AccountStatistics object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountStatisticsWithDefaults() *AccountStatistics {
	this := AccountStatistics{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *AccountStatistics) GetAccountId() string {
	if o == nil || o.AccountId == nil {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountStatistics) GetAccountIdOk() (*string, bool) {
	if o == nil || o.AccountId == nil {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *AccountStatistics) HasAccountId() bool {
	if o != nil && o.AccountId != nil {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *AccountStatistics) SetAccountId(v string) {
	o.AccountId = &v
}

// GetExpirationDate returns the ExpirationDate field value if set, zero value otherwise.
func (o *AccountStatistics) GetExpirationDate() time.Time {
	if o == nil || o.ExpirationDate == nil {
		var ret time.Time
		return ret
	}
	return *o.ExpirationDate
}

// GetExpirationDateOk returns a tuple with the ExpirationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountStatistics) GetExpirationDateOk() (*time.Time, bool) {
	if o == nil || o.ExpirationDate == nil {
		return nil, false
	}
	return o.ExpirationDate, true
}

// HasExpirationDate returns a boolean if a field has been set.
func (o *AccountStatistics) HasExpirationDate() bool {
	if o != nil && o.ExpirationDate != nil {
		return true
	}

	return false
}

// SetExpirationDate gets a reference to the given time.Time and assigns it to the ExpirationDate field.
func (o *AccountStatistics) SetExpirationDate(v time.Time) {
	o.ExpirationDate = &v
}

// GetMonitorQuota returns the MonitorQuota field value if set, zero value otherwise.
func (o *AccountStatistics) GetMonitorQuota() MonitorQuota {
	if o == nil || o.MonitorQuota == nil {
		var ret MonitorQuota
		return ret
	}
	return *o.MonitorQuota
}

// GetMonitorQuotaOk returns a tuple with the MonitorQuota field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountStatistics) GetMonitorQuotaOk() (*MonitorQuota, bool) {
	if o == nil || o.MonitorQuota == nil {
		return nil, false
	}
	return o.MonitorQuota, true
}

// HasMonitorQuota returns a boolean if a field has been set.
func (o *AccountStatistics) HasMonitorQuota() bool {
	if o != nil && o.MonitorQuota != nil {
		return true
	}

	return false
}

// SetMonitorQuota gets a reference to the given MonitorQuota and assigns it to the MonitorQuota field.
func (o *AccountStatistics) SetMonitorQuota(v MonitorQuota) {
	o.MonitorQuota = &v
}

// GetOperatorQuota returns the OperatorQuota field value if set, zero value otherwise.
func (o *AccountStatistics) GetOperatorQuota() OperatorQuota {
	if o == nil || o.OperatorQuota == nil {
		var ret OperatorQuota
		return ret
	}
	return *o.OperatorQuota
}

// GetOperatorQuotaOk returns a tuple with the OperatorQuota field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountStatistics) GetOperatorQuotaOk() (*OperatorQuota, bool) {
	if o == nil || o.OperatorQuota == nil {
		return nil, false
	}
	return o.OperatorQuota, true
}

// HasOperatorQuota returns a boolean if a field has been set.
func (o *AccountStatistics) HasOperatorQuota() bool {
	if o != nil && o.OperatorQuota != nil {
		return true
	}

	return false
}

// SetOperatorQuota gets a reference to the given OperatorQuota and assigns it to the OperatorQuota field.
func (o *AccountStatistics) SetOperatorQuota(v OperatorQuota) {
	o.OperatorQuota = &v
}

// GetRemainingMessageCredits returns the RemainingMessageCredits field value if set, zero value otherwise.
func (o *AccountStatistics) GetRemainingMessageCredits() int32 {
	if o == nil || o.RemainingMessageCredits == nil {
		var ret int32
		return ret
	}
	return *o.RemainingMessageCredits
}

// GetRemainingMessageCreditsOk returns a tuple with the RemainingMessageCredits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountStatistics) GetRemainingMessageCreditsOk() (*int32, bool) {
	if o == nil || o.RemainingMessageCredits == nil {
		return nil, false
	}
	return o.RemainingMessageCredits, true
}

// HasRemainingMessageCredits returns a boolean if a field has been set.
func (o *AccountStatistics) HasRemainingMessageCredits() bool {
	if o != nil && o.RemainingMessageCredits != nil {
		return true
	}

	return false
}

// SetRemainingMessageCredits gets a reference to the given int32 and assigns it to the RemainingMessageCredits field.
func (o *AccountStatistics) SetRemainingMessageCredits(v int32) {
	o.RemainingMessageCredits = &v
}

func (o AccountStatistics) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccountId != nil {
		toSerialize["AccountId"] = o.AccountId
	}
	if o.ExpirationDate != nil {
		toSerialize["ExpirationDate"] = o.ExpirationDate
	}
	if o.MonitorQuota != nil {
		toSerialize["MonitorQuota"] = o.MonitorQuota
	}
	if o.OperatorQuota != nil {
		toSerialize["OperatorQuota"] = o.OperatorQuota
	}
	if o.RemainingMessageCredits != nil {
		toSerialize["RemainingMessageCredits"] = o.RemainingMessageCredits
	}
	return json.Marshal(toSerialize)
}

type NullableAccountStatistics struct {
	value *AccountStatistics
	isSet bool
}

func (v NullableAccountStatistics) Get() *AccountStatistics {
	return v.value
}

func (v *NullableAccountStatistics) Set(val *AccountStatistics) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountStatistics) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountStatistics) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountStatistics(val *AccountStatistics) *NullableAccountStatistics {
	return &NullableAccountStatistics{value: val, isSet: true}
}

func (v NullableAccountStatistics) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountStatistics) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


